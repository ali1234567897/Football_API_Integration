<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/1/2024 5:04:41 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-QR6P3T5"
  DTS:CreatorName="DESKTOP-QR6P3T5\SMART TECH"
  DTS:DTSID="{607EC40C-4A5D-4291-991B-5AF001B55935}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5467.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="464"
  DTS:VersionGUID="{C681FEFC-2F15-41C7-BE68-789D4009BFE1}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FootballApi]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2279D73D-7732-45DB-A50E-C6CE62462ACF}"
      DTS:ObjectName="FootballApi">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-QR6P3T5;Initial Catalog=FootballApi;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{2279D73D-7732-45DB-A50E-C6CE62462ACF}DESKTOP-QR6P3T5.FootballApi;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6B816425-4F79-400E-9F6D-7C4B5706ACC6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Country">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{43E7E5C8-439A-462B-90C3-7C86E1FD20AB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CountryResult">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E022DF38-8149-4818-AF32-6A4160E4B8D6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="League">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FE5F84E7-3C83-43BB-8EBE-7863AE2B97E9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="leaguesData">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A9B117F4-DBC7-4E98-A528-2080FCE4CE42}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Player">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FC4FE275-782D-45EF-B7F0-12F9AF6663EF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PlayerData">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4893E1D4-0EEC-4A95-98DE-078421ED405C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Season">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AEB8024B-84EB-48B8-B7C6-1C3CEBFF11A9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TeamA">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4F51A521-F95C-4D79-94D7-E5C4FEAD1F3C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TeamB">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Get All h2h"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{ab76e59e-7152-473b-83a8-8e43315d1dc0}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get All h2h">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Get All h2h\Get Players Data"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{1d67037e-2b91-4a29-9a74-5f6067cf4870}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Players Data">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{8be2168b-9b44-4b7d-be1c-02dd95f3873e}"
            DTS:ObjectName="{AD0CBE83-1182-4054-BF71-3EAF2FC6B4E4}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::PlayerData" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Get All h2h\Get Players Data\Get H2H Data"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{4ad331a3-c61c-4720-a703-2600da496618}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get H2H Data"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_f16add0e9242495d8d82f7cc2196b110"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::CountryResult,User::League,User::leaguesData,User::Season,User::TeamA,User::TeamB">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a69c2cb7e9d34fd39d104c5693c0cd21")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a69c2cb7e9d34fd39d104c5693c0cd21")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[using System;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json.Linq;

namespace ST_40a2c0809e22491e9dbe449c4c7997f4.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        public void Main()
        {
            int League = Convert.ToInt32(Dts.Variables["League"].Value);
            int Season = Convert.ToInt32(Dts.Variables["Season"].Value);
            // API details
            string url = $"https://v3.football.api-sports.io/fixtures?league={League}&season={Season}";
            string apiKey = "80832ef4949691fc0bbb8a0234b3bd84";
            string apiHeader = "x-rapidapi-key";

            // SQL Server details
            System.Net.ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Tls12;
            string connectionString = "Data Source=DESKTOP-QR6P3T5;Initial Catalog=FootballApi;Integrated Security=SSPI;";

            // Fetch data from the API
            string jsonResponse = FetchDataFromApi(url, apiKey, apiHeader);

            // Parse the JSON response
            JArray fixtures = JArray.Parse(JObject.Parse(jsonResponse)["response"].ToString());

            // Insert data into SQL table
            InsertDataIntoSql(fixtures, connectionString);

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        private string FetchDataFromApi(string url, string apiKey, string apiHeader)
        {
            try
            {
                HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
                request.Method = "GET";
                request.Headers[apiHeader] = apiKey;
                request.Headers["x-rapidapi-host"] = "api-football-v1.p.rapidapi.com";

                using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())
                using (StreamReader reader = new StreamReader(response.GetResponseStream()))
                {
                    return reader.ReadToEnd();
                }
            }
            catch (WebException ex)
            {
                if (ex.Response != null)
                {
                    using (var stream = ex.Response.GetResponseStream())
                    using (var reader = new StreamReader(stream))
                    {
                        string errorResponse = reader.ReadToEnd();
                        Dts.Events.FireError(0, "API Request Failed", errorResponse, string.Empty, 0);
                        throw;
                    }
                }
                else
                {
                    Dts.Events.FireError(0, "API Request Failed", "No response received from the server.", string.Empty, 0);
                    throw;
                }
            }
        }

        private void InsertDataIntoSql(JArray fixtures, string connectionString)
        {
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                conn.Open();

                foreach (var fixture in fixtures)
                {
                    //DateTime Entrydate ;
                    //Entrydate = Convert.ToDateTime(fixtures["fixture"]["date"]);
                    var cmd = new SqlCommand(
                        "INSERT INTO dbo.HeadToHead" +
                        "(fixture_id, referee, timezone, date, timestamp, first_half, second_half, venue_id, venue_name, venue_city, " +
                        "status_long, status_short, elapsed, league_id, league_name, league_country, league_logo, league_flag, " +
                        "season, round, home_team_id, home_team_name, home_team_logo, home_team_winner, away_team_id, away_team_name, " +
                        "away_team_logo, away_team_winner, goals_home, goals_away, halftime_home, halftime_away, fulltime_home, " +
                        "fulltime_away, extratime_home, extratime_away, penalty_home, penalty_away) " +
                        "VALUES (@fixture_id, @referee, @timezone, @date, @timestamp, @first_half, @second_half, @venue_id, @venue_name, " +
                        "@venue_city, @status_long, @status_short, @elapsed, @league_id, @league_name, @league_country, @league_logo, " +
                        "@league_flag, @season, @round, @home_team_id, @home_team_name, @home_team_logo, @home_team_winner, " +
                        "@away_team_id, @away_team_name, @away_team_logo, @away_team_winner, @goals_home, @goals_away, @halftime_home, " +
                        "@halftime_away, @fulltime_home, @fulltime_away, @extratime_home, @extratime_away, @penalty_home, @penalty_away)", conn);

                    cmd.Parameters.AddWithValue("@fixture_id", (int)fixture["fixture"]["id"]);
                    cmd.Parameters.AddWithValue("@referee", (string)fixture["fixture"]["referee"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@timezone", (string)fixture["fixture"]["timezone"]);
                    cmd.Parameters.AddWithValue("@date", DateTimeOffset.Parse((string)fixture["fixture"]["date"]));
                    cmd.Parameters.AddWithValue("@timestamp", (long)fixture["fixture"]["timestamp"]);
                    cmd.Parameters.AddWithValue("@first_half", (int?)fixture["fixture"]["periods"]?["first"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@second_half", (int?)fixture["fixture"]["periods"]?["second"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@venue_id", (int?)fixture["fixture"]["venue"]?["id"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@venue_name", (string)fixture["fixture"]["venue"]?["name"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@venue_city", (string)fixture["fixture"]["venue"]?["city"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@status_long", (string)fixture["fixture"]["status"]?["long"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@status_short", (string)fixture["fixture"]["status"]?["short"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@elapsed", (int?)fixture["fixture"]["status"]?["elapsed"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@league_id", (int?)fixture["league"]?["id"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@league_name", (string)fixture["league"]?["name"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@league_country", (string)fixture["league"]?["country"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@league_logo", (string)fixture["league"]?["logo"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@league_flag", (string)fixture["league"]?["flag"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@season", (int?)fixture["league"]?["season"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@round", (string)fixture["league"]?["round"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@home_team_id", (int?)fixture["teams"]?["home"]?["id"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@home_team_name", (string)fixture["teams"]?["home"]?["name"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@home_team_logo", (string)fixture["teams"]?["home"]?["logo"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@home_team_winner", (bool?)fixture["teams"]?["home"]?["winner"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@away_team_id", (int?)fixture["teams"]?["away"]?["id"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@away_team_name", (string)fixture["teams"]?["away"]?["name"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@away_team_logo", (string)fixture["teams"]?["away"]?["logo"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@away_team_winner", (bool?)fixture["teams"]?["away"]?["winner"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@goals_home", (int?)fixture["goals"]?["home"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@goals_away", (int?)fixture["goals"]?["away"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@halftime_home", (int?)fixture["score"]?["halftime"]?["home"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@halftime_away", (int?)fixture["score"]?["halftime"]?["away"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@fulltime_home", (int?)fixture["score"]?["fulltime"]?["home"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@fulltime_away", (int?)fixture["score"]?["fulltime"]?["away"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@extratime_home", (int?)fixture["score"]?["extratime"]?["home"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@extratime_away", (int?)fixture["score"]?["extratime"]?["away"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@penalty_home", (int?)fixture["score"]?["penalty"]?["home"] ?? (object)DBNull.Value);
                    cmd.Parameters.AddWithValue("@penalty_away", (int?)fixture["score"]?["penalty"]?["away"] ?? (object)DBNull.Value);

                    cmd.ExecuteNonQuery();
                }
            }
        }

        public enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f16add0e9242495d8d82f7cc2196b110</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f16add0e9242495d8d82f7cc2196b110</msb:DisplayName>
    <msb:ProjectId>{25D19510-0451-4209-842C-6A94B146FAD3}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f16add0e9242495d8d82f7cc2196b110.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="packages.config"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="System.IO" version="4.3.0" targetFramework="net472" />
</packages>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Settings.get_Default():ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Sett" +
    "ings")]

namespace ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_f16add0e9242495d8d82f7cc2196b110.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8BC188A0-43C0-4DAA-96D9-A56F73E8D0AF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a69c2cb7e9d34fd39d104c5693c0cd21</RootNamespace>
    <AssemblyName>ST_f16add0e9242495d8d82f7cc2196b110</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.1.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\ETL Packages\FootballData\DLL Re\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.SqlClient, Version=4.6.1.6, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\SMART TECH\AppData\Local\Temp\Vsta\SSIS_ST160\VstapLt3XQRKIkm3ZmqMJ74XOw\packages\System.Data.SqlClient.4.8.6\lib\net461\System.Data.SqlClient.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_f16add0e9242495d8d82f7cc2196b110.dll">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
BgCWA7YFBgBAA7YFBgBZA7YFBgCwArYFBgDLAvcDCgB0A4YECgCtAYYEDgDvCF4GEgDuAVoIBgB9
BlUAEgAiBloIBgA8BVUAFgAUBq0IBgAwAJsADgB1BV4GBgAlAFUFBgBcBVUFBgBPAg8HBgBTCFUF
BgCZBkIHBgBSBqEFEgAfAsEEEgCAAsEEEgDJAYwFBgA0AiIHCgCvBIYEGgDYB0gBGgAPAUgBBgDP
CFUFBgBAAFUFBgAkBFUFEgCpBloIEgBoAVoIDgBSCF4GEgDbCFoIEgDXCFoIEgDcBVoIEgDIBbYA
EgDyAVoIBgCKBlUABgAYAVUFCgC9BoYEFgAHBi8GFgDpAK0IFgDwBa0IFgDRBq0IBgD/BFUFBgBl
CFUFBgBGAFUFBgBtBVUFFgDfAC8GBgDoBvQHBgB4AVUFBgAkAVUFBgABCbYFAAAAAEwAAAAAAAEA
AQABABAAgQU8BDkAAQABAAAAEABJB6UHaQABAAUAAAEQAOsHpQd9AAMACQACAQAAMggAAGEABAAM
ABEAYQV1AREAnQF5AREA/wB9AQYGfgCBAVaAIgiEAVaAfQGEAVAgAAAAAIYAhwUGAAEAECEAAAAA
gQArBIgBAQBUIgAAAACBABsFjwEEAGguAAAAAIYYAgcGAAYAcC4AAAAAgxgCBwYABgB4LgAAAACT
CJUGlgEGAKQuAAAAAJMIhQGbAQYAqy4AAAAAkwiRAaABBgCzLgAAAACWCIAIpgEHALouAAAAAIYY
AgcGAAcAwi4AAAAAkRgIB6sBBwAAAAEALQUAAAIA9ggAAAMAcwYAAAEA4gcAAAIAEQQAAAEA8QMJ
AAIHAQARAAIHBgAZAAIHCgApAAIHEAAxAAIHEAA5AAIHEABBAAIHEABJAAIHEABRAAIHEABZAAIH
EABhAAIHEABpAAIHBgDJAAIHBgDxAAIHFQABAQIHBgBxACoIJgAJAdQHLAARAUMFMgAZAc0DOQAh
AT4APQAxAUsIQgA5AQYFSQBJARICUABJAUMFVwDRACIEXQB5ABICYQAJAZ4IAQBRARgCdgBRAfQA
EABRAQcIfQBpAUwFgwBRAf4BiQBxATEFjwCJAAIHlAB5AdUAXQCBAQoCBgCRAOEBiQAJAUAImgAx
ARoJoACJAd4GowChAAIHEACRAXwFBgB5APQGwwAMAMMI0wCZAQIH2ACZARMI3wCxAEMF5QCxAHQI
6wChAdcD8QCxAHQI+QCxAesD/wC5ARICBAGxAHQICwGxAHQIEQEUAOQDIQEUAIwI0wCxAHQIJQEc
AOQDIQEcAIwI0wDRAQoJNQHZAeYIIQFxAAIHBgDRAAIHBgDhATYBOQHhAf0IQgHZAAIHSAH5AAIH
BgAIABQAawEIABgAcAEpAHMA5gEuAAsAvgEuABMAxwEuABsA5gEuACMA7wEuACsAGAIuADMAGAIu
ADsAGAIuAEMA7wEuAEsAHgIuAFMAGAIuAFsANQJDAGMAcAFJAHMA5gFhAHsAcAFjAGsAcAEbAGcA
rAADAAEABAADAAAAmQavAQAApQG0AQAAlgi5AQIABgADAAIABwAFAAEACAAFAAIACQAHAMwAGwEv
AQSAAAABAAAA+SJzbAAAAAAAAAEAAAAEAAAAAAAAAAAAAABQAZIAAAAAABAAAAAAAAAAAAAAAFkB
ZwQAAAAADQAAAAAAAAAAAAAAYgFCBgAAAAAEAAAAAAAAAAAAAABQAVUFAAAAAAQAAAAAAAAAAAAA
AFABhgAAAAAAEAAAAAAAAAAAAAAAWQFfAAAAAAAAAAAAAQAAAFMHAAAFAAIAAAAAAABTVF9mMTZh
ZGQwZTkyNDI0OTVkOGQ4MmY3Y2MyMTk2YjExMABOdWxsYWJsZWAxAElFbnVtZXJhdG9yYDEAVG9J
bnQzMgBJbnQ2NAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVy
aWMAU3lzdGVtLkNvbGxlY3Rpb25zLlNwZWNpYWxpemVkAFJlYWRUb0VuZABEYkNvbW1hbmQAU3Fs
Q29tbWFuZABzZXRfTWV0aG9kAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBS
dW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5SdW50aW1lAFNlY3VyaXR5UHJvdG9jb2xUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBnZXRfUmVzcG9uc2UASHR0cFdlYlJlc3BvbnNlAEdldFJlc3BvbnNl
AERpc3Bvc2UAUGFyc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAQWRkV2l0aFZhbHVlAGdldF9IYXNWYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAGNvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcARmV0Y2hEYXRhRnJvbUFwaQBTVF80MGEy
YzA4MDllMjI0OTFlOWRiZTQ0OWM0Yzc5OTdmNC5jc3Byb2oATWljcm9zb2Z0LlNxbFNlcnZlci5T
Y3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0
T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2YxNmFkZDBlOTI0MjQ5NWQ4ZDgy
ZjdjYzIxOTZiMTEwLmRsbABEQk51bGwAc2V0X1NlY3VyaXR5UHJvdG9jb2wASW5zZXJ0RGF0YUlu
dG9TcWwAdXJsAEdldFJlc3BvbnNlU3RyZWFtAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBFbnVt
AHJlc291cmNlTWFuAEJvb2xlYW4ASlRva2VuAE9wZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmln
dXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBOYW1lVmFsdWVD
b2xsZWN0aW9uAFdlYkhlYWRlckNvbGxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNv
bm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBXZWJFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAE5l
d3RvbnNvZnQuSnNvbgBDdWx0dXJlSW5mbwBOZXd0b25zb2Z0Lkpzb24uTGlucQBhcGlIZWFkZXIA
U3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTZXJ2aWNlUG9pbnRN
YW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIAU3FsUGFyYW1ldGVyAEZpcmVFcnJvcgBJRW51bWVy
YXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2E2OWMyY2I3ZTlk
MzRmZDM5ZDEwNGM1NjkzYzBjZDIxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF9hNjljMmNiN2U5ZDM0ZmQzOWQxMDRjNTY5M2MwY2QyMS5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAZml4dHVyZXMAU2V0dGluZ3MAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9I
ZWFkZXJzAGdldF9QYXJhbWV0ZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9F
dmVudHMARm9ybWF0AEpPYmplY3QAU3lzdGVtLk5ldABEYXRlVGltZU9mZnNldABvcF9FeHBsaWNp
dABnZXRfRGVmYXVsdABHZXRWYWx1ZU9yRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0
YS5TcWxDbGllbnQAZ2V0X0N1cnJlbnQAQ29udmVydABIdHRwV2ViUmVxdWVzdABNb3ZlTmV4dABK
QXJyYXkAYXBpS2V5AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkARW1wdHkAAA1MAGUAYQBn
AHUAZQAADVMAZQBhAHMAbwBuAACAgWgAdAB0AHAAcwA6AC8ALwB2ADMALgBmAG8AbwB0AGIAYQBs
AGwALgBhAHAAaQAtAHMAcABvAHIAdABzAC4AaQBvAC8AZgBpAHgAdAB1AHIAZQBzAD8AbABlAGEA
ZwB1AGUAPQB7ADAAfQAmAHMAZQBhAHMAbwBuAD0AewAxAH0AAUE4ADAAOAAzADIAZQBmADQAOQA0
ADkANgA5ADEAZgBjADAAYgBiAGIAOABhADAAMgAzADQAYgAzAGIAZAA4ADQAAB14AC0AcgBhAHAA
aQBkAGEAcABpAC0AawBlAHkAAYCjRABhAHQAYQAgAFMAbwB1AHIAYwBlAD0ARABFAFMASwBUAE8A
UAAtAFEAUgA2AFAAMwBUADUAOwBJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwA9AEYAbwBv
AHQAYgBhAGwAbABBAHAAaQA7AEkAbgB0AGUAZwByAGEAdABlAGQAIABTAGUAYwB1AHIAaQB0AHkA
PQBTAFMAUABJADsAARFyAGUAcwBwAG8AbgBzAGUAAAdHAEUAVAAAH3gALQByAGEAcABpAGQAYQBw
AGkALQBoAG8AcwB0AAE9YQBwAGkALQBmAG8AbwB0AGIAYQBsAGwALQB2ADEALgBwAC4AcgBhAHAA
aQBkAGEAcABpAC4AYwBvAG0AASVBAFAASQAgAFIAZQBxAHUAZQBzAHQAIABGAGEAaQBsAGUAZAAA
S04AbwAgAHIAZQBzAHAAbwBuAHMAZQAgAHIAZQBjAGUAaQB2AGUAZAAgAGYAcgBvAG0AIAB0AGgA
ZQAgAHMAZQByAHYAZQByAC4AAIhRSQBOAFMARQBSAFQAIABJAE4AVABPACAAZABiAG8ALgBIAGUA
YQBkAFQAbwBIAGUAYQBkACgAZgBpAHgAdAB1AHIAZQBfAGkAZAAsACAAcgBlAGYAZQByAGUAZQAs
ACAAdABpAG0AZQB6AG8AbgBlACwAIABkAGEAdABlACwAIAB0AGkAbQBlAHMAdABhAG0AcAAsACAA
ZgBpAHIAcwB0AF8AaABhAGwAZgAsACAAcwBlAGMAbwBuAGQAXwBoAGEAbABmACwAIAB2AGUAbgB1
AGUAXwBpAGQALAAgAHYAZQBuAHUAZQBfAG4AYQBtAGUALAAgAHYAZQBuAHUAZQBfAGMAaQB0AHkA
LAAgAHMAdABhAHQAdQBzAF8AbABvAG4AZwAsACAAcwB0AGEAdAB1AHMAXwBzAGgAbwByAHQALAAg
AGUAbABhAHAAcwBlAGQALAAgAGwAZQBhAGcAdQBlAF8AaQBkACwAIABsAGUAYQBnAHUAZQBfAG4A
YQBtAGUALAAgAGwAZQBhAGcAdQBlAF8AYwBvAHUAbgB0AHIAeQAsACAAbABlAGEAZwB1AGUAXwBs
AG8AZwBvACwAIABsAGUAYQBnAHUAZQBfAGYAbABhAGcALAAgAHMAZQBhAHMAbwBuACwAIAByAG8A
dQBuAGQALAAgAGgAbwBtAGUAXwB0AGUAYQBtAF8AaQBkACwAIABoAG8AbQBlAF8AdABlAGEAbQBf
AG4AYQBtAGUALAAgAGgAbwBtAGUAXwB0AGUAYQBtAF8AbABvAGcAbwAsACAAaABvAG0AZQBfAHQA
ZQBhAG0AXwB3AGkAbgBuAGUAcgAsACAAYQB3AGEAeQBfAHQAZQBhAG0AXwBpAGQALAAgAGEAdwBh
AHkAXwB0AGUAYQBtAF8AbgBhAG0AZQAsACAAYQB3AGEAeQBfAHQAZQBhAG0AXwBsAG8AZwBvACwA
IABhAHcAYQB5AF8AdABlAGEAbQBfAHcAaQBuAG4AZQByACwAIABnAG8AYQBsAHMAXwBoAG8AbQBl
ACwAIABnAG8AYQBsAHMAXwBhAHcAYQB5ACwAIABoAGEAbABmAHQAaQBtAGUAXwBoAG8AbQBlACwA
IABoAGEAbABmAHQAaQBtAGUAXwBhAHcAYQB5ACwAIABmAHUAbABsAHQAaQBtAGUAXwBoAG8AbQBl
ACwAIABmAHUAbABsAHQAaQBtAGUAXwBhAHcAYQB5ACwAIABlAHgAdAByAGEAdABpAG0AZQBfAGgA
bwBtAGUALAAgAGUAeAB0AHIAYQB0AGkAbQBlAF8AYQB3AGEAeQAsACAAcABlAG4AYQBsAHQAeQBf
AGgAbwBtAGUALAAgAHAAZQBuAGEAbAB0AHkAXwBhAHcAYQB5ACkAIABWAEEATABVAEUAUwAgACgA
QABmAGkAeAB0AHUAcgBlAF8AaQBkACwAIABAAHIAZQBmAGUAcgBlAGUALAAgAEAAdABpAG0AZQB6
AG8AbgBlACwAIABAAGQAYQB0AGUALAAgAEAAdABpAG0AZQBzAHQAYQBtAHAALAAgAEAAZgBpAHIA
cwB0AF8AaABhAGwAZgAsACAAQABzAGUAYwBvAG4AZABfAGgAYQBsAGYALAAgAEAAdgBlAG4AdQBl
AF8AaQBkACwAIABAAHYAZQBuAHUAZQBfAG4AYQBtAGUALAAgAEAAdgBlAG4AdQBlAF8AYwBpAHQA
eQAsACAAQABzAHQAYQB0AHUAcwBfAGwAbwBuAGcALAAgAEAAcwB0AGEAdAB1AHMAXwBzAGgAbwBy
AHQALAAgAEAAZQBsAGEAcABzAGUAZAAsACAAQABsAGUAYQBnAHUAZQBfAGkAZAAsACAAQABsAGUA
YQBnAHUAZQBfAG4AYQBtAGUALAAgAEAAbABlAGEAZwB1AGUAXwBjAG8AdQBuAHQAcgB5ACwAIABA
AGwAZQBhAGcAdQBlAF8AbABvAGcAbwAsACAAQABsAGUAYQBnAHUAZQBfAGYAbABhAGcALAAgAEAA
cwBlAGEAcwBvAG4ALAAgAEAAcgBvAHUAbgBkACwAIABAAGgAbwBtAGUAXwB0AGUAYQBtAF8AaQBk
ACwAIABAAGgAbwBtAGUAXwB0AGUAYQBtAF8AbgBhAG0AZQAsACAAQABoAG8AbQBlAF8AdABlAGEA
bQBfAGwAbwBnAG8ALAAgAEAAaABvAG0AZQBfAHQAZQBhAG0AXwB3AGkAbgBuAGUAcgAsACAAQABh
AHcAYQB5AF8AdABlAGEAbQBfAGkAZAAsACAAQABhAHcAYQB5AF8AdABlAGEAbQBfAG4AYQBtAGUA
LAAgAEAAYQB3AGEAeQBfAHQAZQBhAG0AXwBsAG8AZwBvACwAIABAAGEAdwBhAHkAXwB0AGUAYQBt
AF8AdwBpAG4AbgBlAHIALAAgAEAAZwBvAGEAbABzAF8AaABvAG0AZQAsACAAQABnAG8AYQBsAHMA
XwBhAHcAYQB5ACwAIABAAGgAYQBsAGYAdABpAG0AZQBfAGgAbwBtAGUALAAgAEAAaABhAGwAZgB0
AGkAbQBlAF8AYQB3AGEAeQAsACAAQABmAHUAbABsAHQAaQBtAGUAXwBoAG8AbQBlACwAIABAAGYA
dQBsAGwAdABpAG0AZQBfAGEAdwBhAHkALAAgAEAAZQB4AHQAcgBhAHQAaQBtAGUAXwBoAG8AbQBl
ACwAIABAAGUAeAB0AHIAYQB0AGkAbQBlAF8AYQB3AGEAeQAsACAAQABwAGUAbgBhAGwAdAB5AF8A
aABvAG0AZQAsACAAQABwAGUAbgBhAGwAdAB5AF8AYQB3AGEAeQApAAAXQABmAGkAeAB0AHUAcgBl
AF8AaQBkAAAPZgBpAHgAdAB1AHIAZQAABWkAZAAAEUAAcgBlAGYAZQByAGUAZQAAD3IAZQBmAGUA
cgBlAGUAABNAAHQAaQBtAGUAegBvAG4AZQAAEXQAaQBtAGUAegBvAG4AZQAAC0AAZABhAHQAZQAA
CWQAYQB0AGUAABVAAHQAaQBtAGUAcwB0AGEAbQBwAAATdABpAG0AZQBzAHQAYQBtAHAAABdAAGYA
aQByAHMAdABfAGgAYQBsAGYAAA9wAGUAcgBpAG8AZABzAAALZgBpAHIAcwB0AAAZQABzAGUAYwBv
AG4AZABfAGgAYQBsAGYAAA1zAGUAYwBvAG4AZAAAE0AAdgBlAG4AdQBlAF8AaQBkAAALdgBlAG4A
dQBlAAAXQAB2AGUAbgB1AGUAXwBuAGEAbQBlAAAJbgBhAG0AZQAAF0AAdgBlAG4AdQBlAF8AYwBp
AHQAeQAACWMAaQB0AHkAABlAAHMAdABhAHQAdQBzAF8AbABvAG4AZwAADXMAdABhAHQAdQBzAAAJ
bABvAG4AZwAAG0AAcwB0AGEAdAB1AHMAXwBzAGgAbwByAHQAAAtzAGgAbwByAHQAABFAAGUAbABh
AHAAcwBlAGQAAA9lAGwAYQBwAHMAZQBkAAAVQABsAGUAYQBnAHUAZQBfAGkAZAAADWwAZQBhAGcA
dQBlAAAZQABsAGUAYQBnAHUAZQBfAG4AYQBtAGUAAB9AAGwAZQBhAGcAdQBlAF8AYwBvAHUAbgB0
AHIAeQAAD2MAbwB1AG4AdAByAHkAABlAAGwAZQBhAGcAdQBlAF8AbABvAGcAbwAACWwAbwBnAG8A
ABlAAGwAZQBhAGcAdQBlAF8AZgBsAGEAZwAACWYAbABhAGcAAA9AAHMAZQBhAHMAbwBuAAANcwBl
AGEAcwBvAG4AAA1AAHIAbwB1AG4AZAAAC3IAbwB1AG4AZAAAG0AAaABvAG0AZQBfAHQAZQBhAG0A
XwBpAGQAAAt0AGUAYQBtAHMAAAloAG8AbQBlAAAfQABoAG8AbQBlAF8AdABlAGEAbQBfAG4AYQBt
AGUAAB9AAGgAbwBtAGUAXwB0AGUAYQBtAF8AbABvAGcAbwAAI0AAaABvAG0AZQBfAHQAZQBhAG0A
XwB3AGkAbgBuAGUAcgAADXcAaQBuAG4AZQByAAAbQABhAHcAYQB5AF8AdABlAGEAbQBfAGkAZAAA
CWEAdwBhAHkAAB9AAGEAdwBhAHkAXwB0AGUAYQBtAF8AbgBhAG0AZQAAH0AAYQB3AGEAeQBfAHQA
ZQBhAG0AXwBsAG8AZwBvAAAjQABhAHcAYQB5AF8AdABlAGEAbQBfAHcAaQBuAG4AZQByAAAXQABn
AG8AYQBsAHMAXwBoAG8AbQBlAAALZwBvAGEAbABzAAAXQABnAG8AYQBsAHMAXwBhAHcAYQB5AAAd
QABoAGEAbABmAHQAaQBtAGUAXwBoAG8AbQBlAAALcwBjAG8AcgBlAAARaABhAGwAZgB0AGkAbQBl
AAAdQABoAGEAbABmAHQAaQBtAGUAXwBhAHcAYQB5AAAdQABmAHUAbABsAHQAaQBtAGUAXwBoAG8A
bQBlAAARZgB1AGwAbAB0AGkAbQBlAAAdQABmAHUAbABsAHQAaQBtAGUAXwBhAHcAYQB5AAAfQABl
AHgAdAByAGEAdABpAG0AZQBfAGgAbwBtAGUAABNlAHgAdAByAGEAdABpAG0AZQAAH0AAZQB4AHQA
cgBhAHQAaQBtAGUAXwBhAHcAYQB5AAAbQABwAGUAbgBhAGwAdAB5AF8AaABvAG0AZQAAD3AAZQBu
AGEAbAB0AHkAABtAAHAAZQBuAGEAbAB0AHkAXwBhAHcAYQB5AABxUwBUAF8AYQA2ADkAYwAyAGMA
YgA3AGUAOQBkADMANABmAGQAMwA5AGQAMQAwADQAYwA1ADYAOQAzAGMAMABjAGQAMgAxAC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAH/10sBMzS1CvN2ax2Ams9YA
BCABAQgDIAABBSABARERBCABAQ4FIAEBEXUKBwcICA4ODg4SPQUgABKAhQUgABKAiQYgARKAjRwD
IAAcBAABCBwGAAMODhwcBgABARGAoQYAARKApQ4FIAESWQ4DIAAOBQABEj0ODgcHEkESRQ4SSRJN
EkUOBgABEoCpDgUgABKAsQUgAgEODgUgABKAuQQgABJNBSABARJNBSAAEoDFAgYOCCAFAggODg4I
FgcFElEVElUBElkSWRURXQEIFRFdAQIIIAAVElUBElkGFRJVARJZBCAAEwAGIAIBDhJRBSAAEoDR
BSABElkcBQABCBJZByACEoDVDhwFAAEOElkEBhKA2QYAARGA3Q4FAAEKElkJAAEVEV0BCBJZBRUR
XQEIAyAAAgkAARURXQECElkFFRFdAQIDIAAICAABEoDxEYD1BSAAEoD5ByACAQ4SgPkIt3pcVhk0
4IkIiYRdzYCAzJEIMK1P5rKmru0EAAAAAAQBAAAAAwYSbQMGEnEDBhIQAgYIAwYRFAYgAw4ODg4G
IAIBEj0OBAAAEm0EAAAScQUAAQEScQQAABIQAwAAAQQIABJtBAgAEnEECAASEAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYTY5YzJjYjdlOWQz
NGZkMzlkMTA0YzU2OTNjMGNkMjEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZy
YW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAJRSAAAAAAAAAAAAAK5SAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACgUgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAA
AAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoEAAAAAAAA
AAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQBz
bPkiAAABAHNs+SI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwA
ZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAAAQBT
AHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEA
AQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAA
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGEANgA5AGMA
MgBjAGIANwBlADkAZAAzADQAZgBkADMAOQBkADEAMAA0AGMANQA2ADkAMwBjADAAYwBkADIAMQAA
AD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADkANQAzAC4AMgA3ADcA
NgAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGYAMQA2AGEAZABk
ADAAZQA5ADIANAAyADQAOQA1AGQAOABkADgAMgBmADcAYwBjADIAMQA5ADYAYgAxADEAMAAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AZgAx
ADYAYQBkAGQAMABlADkAMgA0ADIANAA5ADUAZAA4AGQAOAAyAGYANwBjAGMAMgAxADkANgBiADEA
MQAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGEANgA5
AGMAMgBjAGIANwBlADkAZAAzADQAZgBkADMAOQBkADEAMAA0AGMANQA2ADkAMwBjADAAYwBkADIA
MQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA5ADUAMwAu
ADIANwA3ADYAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA5ADUAMwAuADIANwA3ADYAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAADAMgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{22B45231-5A80-41F1-94B7-EE259200F484}"
              DTS:ObjectName="{22B45231-5A80-41F1-94B7-EE259200F484}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::League" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{CE8E2C96-51B2-4FC2-AE95-1C29877482D9}"
              DTS:ObjectName="{CE8E2C96-51B2-4FC2-AE95-1C29877482D9}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::Season" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get All h2h\Teams"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{ce67b6e7-1785-4bd0-a530-f6e159ae3730}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Teams"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2279D73D-7732-45DB-A50E-C6CE62462ACF}"
              SQLTask:SqlStatementSource="SELECT L.LeagueId AS League,&#xA;       S.Seasons AS Season&#xA;FROM stg.Leagues L&#xA;    JOIN stg.Seasons S&#xA;        ON S.Seasons = L.SeasonYear&#xA;WHERE LeagueId = 200&#xA;      AND Seasons = 2019;"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::PlayerData" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Get All h2h.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{e4245aec-67dc-4be9-8d8a-cca6f9aa6a12}"
          DTS:From="Package\Get All h2h\Teams"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Get All h2h\Get Players Data" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Players Data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{5e8c376a-fc18-4aa7-9935-632c11ff1dbb}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Players Data">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Get Players Data\Get Players Data"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{66a252e0-8788-46cd-a2ea-8f6d8b0ed621}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Players Data">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{57af0f5c-d259-4025-b666-6f692458f824}"
            DTS:ObjectName="{AD0CBE83-1182-4054-BF71-3EAF2FC6B4E4}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::PlayerData" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Get Players Data\Get Players Data\Get Players Data"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{36644299-713a-4b31-8224-86e482d7d40c}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Players Data"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_0f82a3de6d9845c19db786a51497103e"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::CountryResult,User::League,User::leaguesData,User::Season">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Task = System.Threading.Tasks.Task;
using System.Data;
using System.Data.OleDb;

[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
public class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
{
    public void Main()
    {
        int League = Convert.ToInt32(Dts.Variables["League"].Value);
        int Season = Convert.ToInt32(Dts.Variables["Season"].Value);
       
        
            int leaguesID = League;
            int SeasonYear = Season;
       // MessageBox.Show($"League: {League}, Season: {Season}");
        // Set TLS 1.2 before making any requests
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

        // Replace with your actual SQL Server connection string
        string connectionString = "Data Source=DESKTOP-QR6P3T5;Initial Catalog=FootballApi;Integrated Security=SSPI;";
        Task.Run(async () => await FetchAndStoreAllPlayers(connectionString, leaguesID, SeasonYear)).Wait();

        Dts.TaskResult = (int)ScriptResults.Success;
    }

    private static async Task FetchAndStoreAllPlayers(string connectionString ,int leaguesID, int SeasonYear)
    {
        var allPlayers = new List<PlayerResponse>();
        int currentPage = 1;
        bool morePagesAvailable = true;

        while (morePagesAvailable)
        {
            var players = await FetchPlayersFromApi(currentPage,leaguesID,SeasonYear);
            if (players != null && players.Count > 0)
            {
                allPlayers.AddRange(players);
                currentPage++;
            }
            else
            {
                morePagesAvailable = false;
            }
        }

        if (allPlayers.Count == 0)
        {
           // MessageBox.Show("Failed to fetch players. The players list is null or empty.");
            return;
        }

        await InsertPlayersIntoDatabase(connectionString, allPlayers);
    }

    private static async Task<List<PlayerResponse>> FetchPlayersFromApi(int page, int leaguesID, int SeasonYear)
    {

        string apiUrl = $"https://v3.football.api-sports.io/players?league={leaguesID}&season={SeasonYear}&page={page}";
        string apiKey = "3b23ea250181402a1beb1d78bd0ce064";
       // MessageBox.Show(apiUrl);
        try
        {
            using (var httpClient = new HttpClient())
            {
                httpClient.DefaultRequestHeaders.Add("X-RapidAPI-Key", apiKey);
                var response = await httpClient.GetStringAsync(apiUrl);

                if (string.IsNullOrEmpty(response))
                {
                  //  MessageBox.Show("API response is empty.");
                    return null;
                }

                // Log the response for debugging
              // MessageBox.Show($"API Response: {response}");

                var apiResponse = JsonConvert.DeserializeObject<ApiPlayersResponse>(response);

                // Log the deserialized response for debugging
                //MessageBox.Show($"Deserialized Response: {JsonConvert.SerializeObject(apiResponse)}");

                return apiResponse.response;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show($"Exception occurred while fetching players: {ex.Message}");
            return null;
        }
    }

    private static async Task InsertPlayersIntoDatabase(string connectionString, List<PlayerResponse> players)
    {
        using (var connection = new SqlConnection(connectionString))
        {
            try
            {
                connection.Open();
                foreach (var player in players)
                {
                    var query = @"
                    INSERT INTO dbo.player_statistics (
                        player_id, player_name, player_firstname, player_lastname, 
                        player_age, player_birth_date, player_birth_place, 
                        player_birth_country, player_nationality, player_height, 
                        player_weight, player_injured, player_photo, team_id, 
                        team_name, team_logo, league_id, league_name, 
                        league_country, league_logo, league_flag, league_season, 
                        games_appearances, games_lineups, games_minutes, 
                        games_number, games_position, games_rating, games_captain, 
                        substitutes_in, substitutes_out, substitutes_bench, 
                        shots_total, shots_on, goals_total, goals_conceded, 
                        goals_assists, goals_saves, passes_total, passes_key, 
                        passes_accuracy, tackles_total, tackles_blocks, 
                        tackles_interceptions, duels_total, duels_won, 
                        dribbles_attempts, dribbles_success, dribbles_past, 
                        fouls_drawn, fouls_committed, cards_yellow, cards_yellowred, 
                        cards_red, penalty_won, penalty_committed, penalty_scored, 
                        penalty_missed, penalty_saved
                    ) VALUES (
                        @player_id, @player_name, @player_firstname, @player_lastname, 
                        @player_age, @player_birth_date, @player_birth_place, 
                        @player_birth_country, @player_nationality, @player_height, 
                        @player_weight, @player_injured, @player_photo, @team_id, 
                        @team_name, @team_logo, @league_id, @league_name, 
                        @league_country, @league_logo, @league_flag, @league_season, 
                        @games_appearances, @games_lineups, @games_minutes, 
                        @games_number, @games_position, @games_rating, @games_captain, 
                        @substitutes_in, @substitutes_out, @substitutes_bench, 
                        @shots_total, @shots_on, @goals_total, @goals_conceded, 
                        @goals_assists, @goals_saves, @passes_total, @passes_key, 
                        @passes_accuracy, @tackles_total, @tackles_blocks, 
                        @tackles_interceptions, @duels_total, @duels_won, 
                        @dribbles_attempts, @dribbles_success, @dribbles_past, 
                        @fouls_drawn, @fouls_committed, @cards_yellow, @cards_yellowred, 
                        @cards_red, @penalty_won, @penalty_committed, @penalty_scored, 
                        @penalty_missed, @penalty_saved
                    )";

                    using (var command = new SqlCommand(query, connection))
                    {
                        command.Parameters.AddWithValue("@player_id", player.player.id);
                        command.Parameters.AddWithValue("@player_name", player.player.name);
                        command.Parameters.AddWithValue("@player_firstname", player.player.firstname);
                        command.Parameters.AddWithValue("@player_lastname", player.player.lastname);
                        command.Parameters.AddWithValue("@player_age", player.player.age);
                        command.Parameters.AddWithValue("@player_birth_date", player.player.birth.date ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@player_birth_place", player.player.birth.place ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@player_birth_country", player.player.birth.country ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@player_nationality", player.player.nationality);
                        command.Parameters.AddWithValue("@player_height", player.player.height ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@player_weight", player.player.weight ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@player_injured", player.player.injured);
                        command.Parameters.AddWithValue("@player_photo", player.player.photo ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@team_id", player.statistics[0].team.id);
                        command.Parameters.AddWithValue("@team_name", player.statistics[0].team.name);
                        command.Parameters.AddWithValue("@team_logo", player.statistics[0].team.logo ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@league_id", player.statistics[0].league.id);
                        command.Parameters.AddWithValue("@league_name", player.statistics[0].league.name);
                        command.Parameters.AddWithValue("@league_country", player.statistics[0].league.country ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@league_logo", player.statistics[0].league.logo ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@league_flag", player.statistics[0].league.flag ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@league_season", player.statistics[0].league.season);
                        command.Parameters.AddWithValue("@games_appearances", player.statistics[0].games.appearances ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@games_lineups", player.statistics[0].games.lineups ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@games_minutes", player.statistics[0].games.minutes ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@games_number", player.statistics[0].games.number ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@games_position", player.statistics[0].games.position ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@games_rating", player.statistics[0].games.rating ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@games_captain", player.statistics[0].games.captain);
                        command.Parameters.AddWithValue("@substitutes_in", player.statistics[0].substitutes.@in ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@substitutes_out", player.statistics[0].substitutes.@out ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@substitutes_bench", player.statistics[0].substitutes.bench ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@shots_total", player.statistics[0].shots.total ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@shots_on", player.statistics[0].shots.on ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@goals_total", player.statistics[0].goals.total ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@goals_conceded", player.statistics[0].goals.conceded ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@goals_assists", player.statistics[0].goals.assists ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@goals_saves", player.statistics[0].goals.saves ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@passes_total", player.statistics[0].passes.total ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@passes_key", player.statistics[0].passes.key ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@passes_accuracy", player.statistics[0].passes.accuracy ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@tackles_total", player.statistics[0].tackles.total ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@tackles_blocks", player.statistics[0].tackles.blocks ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@tackles_interceptions", player.statistics[0].tackles.interceptions ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@duels_total", player.statistics[0].duels.total ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@duels_won", player.statistics[0].duels.won ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@dribbles_attempts", player.statistics[0].dribbles.attempts ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@dribbles_success", player.statistics[0].dribbles.success ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@dribbles_past", player.statistics[0].dribbles.past ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@fouls_drawn", player.statistics[0].fouls.drawn ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@fouls_committed", player.statistics[0].fouls.committed ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@cards_yellow", player.statistics[0].cards.yellow ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@cards_yellowred", player.statistics[0].cards.yellowred ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@cards_red", player.statistics[0].cards.red ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@penalty_won", player.statistics[0].penalty.won ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@penalty_committed", player.statistics[0].penalty.committed ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@penalty_scored", player.statistics[0].penalty.scored ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@penalty_missed", player.statistics[0].penalty.missed ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@penalty_saved", player.statistics[0].penalty.saved ?? (object)DBNull.Value);

                        try
                        {
                            await command.ExecuteNonQueryAsync();
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show($"Error inserting player {player.player.name}: {ex.Message}");
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Database connection error: {ex.Message}");
            }
        }
    }

    private class ApiPlayersResponse
    {
        public List<PlayerResponse> response { get; set; }
    }

    private class PlayerResponse
    {
        public Player player { get; set; }
        public List<Statistic> statistics { get; set; }
    }

    private class Player
    {
        public int id { get; set; }
        public string name { get; set; }
        public string firstname { get; set; }
        public string lastname { get; set; }
        public int age { get; set; }
        public Birth birth { get; set; }
        public string nationality { get; set; }
        public string height { get; set; }
        public string weight { get; set; }
        public bool injured { get; set; }
        public string photo { get; set; }
    }

    private class Birth
    {
        public string date { get; set; }
        public string place { get; set; }
        public string country { get; set; }
    }

    private class Statistic
    {
        public Team team { get; set; }
        public League league { get; set; }
        public Games games { get; set; }
        public Substitutes substitutes { get; set; }
        public Shots shots { get; set; }
        public Goals goals { get; set; }
        public Passes passes { get; set; }
        public Tackles tackles { get; set; }
        public Duels duels { get; set; }
        public Dribbles dribbles { get; set; }
        public Fouls fouls { get; set; }
        public Cards cards { get; set; }
        public Penalty penalty { get; set; }
    }

    private class Team
    {
        public int id { get; set; }
        public string name { get; set; }
        public string logo { get; set; }
    }

    private class League
    {
        public int id { get; set; }
        public string name { get; set; }
        public string country { get; set; }
        public string logo { get; set; }
        public string flag { get; set; }
        public int season { get; set; }
    }

    private class Games
    {
        public int? appearances { get; set; }
        public int? lineups { get; set; }
        public int? minutes { get; set; }
        public int? number { get; set; }
        public string position { get; set; }
        public string rating { get; set; }
        public bool captain { get; set; }
    }

    private class Substitutes
    {
        public int? @in { get; set; }
        public int? @out { get; set; }
        public int? bench { get; set; }
    }

    private class Shots
    {
        public int? total { get; set; }
        public int? on { get; set; }
    }

    private class Goals
    {
        public int? total { get; set; }
        public int? conceded { get; set; }
        public int? assists { get; set; }
        public int? saves { get; set; }
    }

    private class Passes
    {
        public int? total { get; set; }
        public int? key { get; set; }
        public int? accuracy { get; set; }
    }

    private class Tackles
    {
        public int? total { get; set; }
        public int? blocks { get; set; }
        public int? interceptions { get; set; }
    }

    private class Duels
    {
        public int? total { get; set; }
        public int? won { get; set; }
    }

    private class Dribbles
    {
        public int? attempts { get; set; }
        public int? success { get; set; }
        public int? past { get; set; }
    }

    private class Fouls
    {
        public int? drawn { get; set; }
        public int? committed { get; set; }
    }

    private class Cards
    {
        public int? yellow { get; set; }
        public int? yellowred { get; set; }
        public int? red { get; set; }
    }

    private class Penalty
    {
        public int? won { get; set; }
        public int? committed { get; set; }
        public int? scored { get; set; }
        public int? missed { get; set; }
        public int? saved { get; set; }
    }
}


public enum ScriptResults
    {
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    }]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_0f82a3de6d9845c19db786a51497103e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_0f82a3de6d9845c19db786a51497103e</msb:DisplayName>
    <msb:ProjectId>{FAFF59CA-8B2E-4934-9C19-CA268C8AED15}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_0f82a3de6d9845c19db786a51497103e.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_0f82a3de6d9845c19db786a51497103e.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8BC188A0-43C0-4DAA-96D9-A56F73E8D0AF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a69c2cb7e9d34fd39d104c5693c0cd21</RootNamespace>
    <AssemblyName>ST_0f82a3de6d9845c19db786a51497103e</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.1.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\ETL Packages\FootballData\DLL Re\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.SqlClient, Version=4.6.1.6, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\SMART TECH\AppData\Local\Temp\Vsta\SSIS_ST160\VstapLt3XQRKIkm3ZmqMJ74XOw\packages\System.Data.SqlClient.4.8.6\lib\net461\System.Data.SqlClient.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="packages.config"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="System.IO" version="4.3.0" targetFramework="net472" />
</packages>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Settings.get_Default():ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Sett" +
    "ings")]

namespace ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a69c2cb7e9d34fd39d104c5693c0cd21")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a69c2cb7e9d34fd39d104c5693c0cd21")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_0f82a3de6d9845c19db786a51497103e.dll">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
AAomAntuAAAEb0sAAApy7hoAcAJ7bQAABG8SAAAGFm9OAAAKbzcAAAZvZAAABgwSAihPAAAKLQd+
TQAACisMEgIoUAAACow0AAABb0wAAAomAntuAAAEb0sAAApyDBsAcAJ7bQAABG8SAAAGFm9OAAAK
bzcAAAZvZgAABgwSAihPAAAKLQd+TQAACisMEgIoUAAACow0AAABb0wAAAomAntuAAAEb0sAAApy
KhsAcAJ7bQAABG8SAAAGFm9OAAAKbzcAAAZvaAAABgwSAihPAAAKLQd+TQAACisMEgIoUAAACow0
AAABb0wAAAomAntuAAAEb0sAAApyRhsAcAJ7bQAABG8SAAAGFm9OAAAKbzcAAAZvagAABiUtBiZ+
TQAACm9MAAAKJgJ7bgAABG9LAAAKcmYbAHACe20AAARvEgAABhZvTgAACm83AAAGb2wAAAYlLQYm
fk0AAApvTAAACiYCe24AAARvSwAACnKCGwBwAnttAAAEbxIAAAYWb04AAApvNwAABm9uAAAGjD4A
AAFvTAAACiYCe24AAARvSwAACnKgGwBwAnttAAAEbxIAAAYWb04AAApvOQAABm9xAAAGDBICKE8A
AAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnLAGwBwAnttAAAEbxIAAAYW
b04AAApvOQAABm9zAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARv
SwAACnLiGwBwAnttAAAEbxIAAAYWb04AAApvOQAABm91AAAGDBICKE8AAAotB35NAAAKKwwSAihQ
AAAKjDQAAAFvTAAACiYCe24AAARvSwAACnIIHABwAnttAAAEbxIAAAYWb04AAApvOwAABm94AAAG
DBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnIiHABwAnttAAAE
bxIAAAYWb04AAApvOwAABm96AAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYC
e24AAARvSwAACnI2HABwAnttAAAEbxIAAAYWb04AAApvPQAABm99AAAGDBICKE8AAAotB35NAAAK
KwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnJQHABwAnttAAAEbxIAAAYWb04AAApvPQAA
Bm9/AAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnJwHABw
AnttAAAEbxIAAAYWb04AAApvPQAABm+BAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFv
TAAACiYCe24AAARvSwAACnKOHABwAnttAAAEbxIAAAYWb04AAApvPQAABm+DAAAGDBICKE8AAAot
B35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnKoHABwAnttAAAEbxIAAAYWb04A
AApvPwAABm+GAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAA
CnLEHABwAnttAAAEbxIAAAYWb04AAApvPwAABm+IAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAK
jDQAAAFvTAAACiYCe24AAARvSwAACnLcHABwAnttAAAEbxIAAAYWb04AAApvPwAABm+KAAAGDBIC
KE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnL+HABwAnttAAAEbxIA
AAYWb04AAApvQQAABm+NAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24A
AARvSwAACnIcHQBwAnttAAAEbxIAAAYWb04AAApvQQAABm+PAAAGDBICKE8AAAotB35NAAAKKwwS
AihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnI8HQBwAnttAAAEbxIAAAYWb04AAApvQQAABm+R
AAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnJqHQBwAntt
AAAEbxIAAAYWb04AAApvQwAABm+UAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAA
CiYCe24AAARvSwAACnKEHQBwAnttAAAEbxIAAAYWb04AAApvQwAABm+WAAAGDBICKE8AAAotB35N
AAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnKaHQBwAnttAAAEbxIAAAYWb04AAApv
RQAABm+ZAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnLA
HQBwAnttAAAEbxIAAAYWb04AAApvRQAABm+bAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQA
AAFvTAAACiYCe24AAARvSwAACnLkHQBwAnttAAAEbxIAAAYWb04AAApvRQAABm+dAAAGDBICKE8A
AAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnICHgBwAnttAAAEbxIAAAYW
b04AAApvRwAABm+gAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARv
SwAACnIcHgBwAnttAAAEbxIAAAYWb04AAApvRwAABm+iAAAGDBICKE8AAAotB35NAAAKKwwSAihQ
AAAKjDQAAAFvTAAACiYCe24AAARvSwAACnI+HgBwAnttAAAEbxIAAAYWb04AAApvSQAABm+lAAAG
DBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnJaHgBwAnttAAAE
bxIAAAYWb04AAApvSQAABm+nAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYC
e24AAARvSwAACnJ8HgBwAnttAAAEbxIAAAYWb04AAApvSQAABm+pAAAGDBICKE8AAAotB35NAAAK
KwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnKSHgBwAnttAAAEbxIAAAYWb04AAApvSwAA
Bm+sAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnKsHgBw
AnttAAAEbxIAAAYWb04AAApvSwAABm+uAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFv
TAAACiYCe24AAARvSwAACnLSHgBwAnttAAAEbxIAAAYWb04AAApvSwAABm+wAAAGDBICKE8AAAot
B35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAACnLyHgBwAnttAAAEbxIAAAYWb04A
AApvSwAABm+yAAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAKjDQAAAFvTAAACiYCe24AAARvSwAA
CnISHwBwAnttAAAEbxIAAAYWb04AAApvSwAABm+0AAAGDBICKE8AAAotB35NAAAKKwwSAihQAAAK
jDQAAAFvTAAACiYABiw9AntuAAAEb1EAAApvUgAACg0SAyhTAAAKLT8CFiUKfWcAAAQCCX1vAAAE
AnxoAAAEEgMCKAkAACvdHgEAAAJ7bwAABA0CfG8AAAT+FQwAABsCFSUKfWcAAAQSAyhUAAAKJt4w
EwRyMB8AcAJ7bQAABG8QAAAGbxcAAAZyYB8AcBEEb1UAAAooVgAACihXAAAKJt4A3hgGFi8TAntu
AAAELAsCe24AAARvQgAACtwCFH1uAAAEAhR9bQAABAJ8bAAABChYAAAKOs3v///eFgYWLxECfGwA
AAT+FggAABtvQgAACtwCfGwAAAT+FQgAABveGxMFcmYfAHARBW9VAAAKKFkAAAooVwAACibeAN4Y
BhYvEwJ7awAABCwLAntrAAAEb0IAAArcAhR9awAABN4ZEwYCH/59ZwAABAJ8aAAABBEGKDQAAAre
EwIf/n1nAAAEAnxoAAAEKDUAAAoqAEGUAAAAAAAArA8AAGYAAAASEAAAMAAAABoAAAECAAAAcQAA
ANMPAABEEAAAGAAAAAAAAAACAAAAPwAAAD0QAAB8EAAAFgAAAAAAAAAAAAAAHwAAAIEQAACgEAAA
GwAAABoAAAECAAAAHAAAAKEQAAC9EAAAGAAAAAAAAAAAAAAABwAAANcQAADeEAAAGQAAABoAAAE2
AnxoAAAEAyg2AAAKKgAAGzADAKcAAAAJAAARAntwAAAECgJ7cgAABAsGLEYHe1MAAAQHe1QAAAQH
e1UAAAQoAgAABm8xAAAKDBICKDIAAAotPAIWJQp9cAAABAIIfXMAAAQCfHEAAAQSAgIoCgAAK95P
AntzAAAEDAJ8cwAABP4VGQAAAQIVJQp9cAAABBICKDMAAAreFw0CH/59cAAABAJ8cQAABAkoNAAA
Ct4TAh/+fXAAAAQCfHEAAAQoNQAACioAARAAAAAADgBufAAXGgAAATYCfHEAAAQDKDYAAAoqAABC
U0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAB0IgAAI34AAOAiAAA4FwAAI1N0cmlu
Z3MAAAAAGDoAAKAfAAAjVVMAuFkAABAAAAAjR1VJRAAAAMhZAABgBgAAI0Jsb2IAAAAAAAAAAgAA
AVcfogsJCwAAAPoBMwAWAAABAAAAQQAAABwAAABzAAAAwAAAAFkAAAAEAAAAWQAAAAIAAAAAAQAA
CQAAABQAAABPAAAAnAAAAAgAAAAMAAAAAQAAAAgAAAABAAAAFwAAAAoAAAAAAK0OAQAAAAAABgCX
DMERBgAmDcERBgCwC5QRDwBVEgAABgDdC58PBgB6DJ8PBgBbDJ8PBgANDZ8PBgC3DJ8PBgDQDJ8P
BgAPDJ8PBgAqDJ0NCgDrDEgOCgCtCkgOBgBsDpwTBgB4ChEPBgD0C8ERBgBmAJwTBgCUALcBBgBt
FREPBgB4C8ERBgBNABEPBgBeChEPBgAuCsERBgAnEcERBgAAEBEPBgDOEMERBgBDDJQRBgCGAMER
BgBtAMERDgAUFp0QEgDVD/4VTwBeEQAAEgAQCf4VBgAYDxEPBgCTC5QRBgD2EAESBgBrEIoPFgBY
C5cOFgDEC5cOFgDJCnUPCgCFDkgOGgCXEg4KGgCNCQ4KBgA/FhEPFgAGEXQVFgBoCnQVBgBGABEP
BgCiCREPBgDGFp8PBgBYALcBBgCdABEPBgDBDREPDgB2FFIUDgBqFFIUHgA7Fh0QBgCWCREPEgDI
DwoQEgCxD/4VEgAaEf4VBgDVDhEPBgApDxEPEgAGCQoQIgCNFgEUIgDOFQEUAAAAAGgBAAAAAAEA
AQABABAARA8AADkAAQABAAEBAAD6FAAAjQABAAYAAAAQAAgSZBJRAAQABgAAARAAcxNkEqUABgAK
AAMAEAAKCwAAUQAHAA0AAwAQAPsKAABRAAgAEAADABAAPhEAAFEACgAVAAMAEADyDQAAUQAVACwA
AwAQANIBAABRABgAMwADABAA8Q4AAFEAJQBOAAMAEABEDQAAUQAoAFUAAwAQAOQSAABRAC4AYgAD
ABAAMxMAAFEANQBxAAMAEAAIFQAAUQA4AHgAAwAQALMTAABRADoAfQADABAA/hIAAFEAPgCGAAMA
EADEEgAAUQBBAI0AAwAQAM0TAABRAEQAlAADABAAoRIAAFEARgCZAAMAEADnEwAAUQBJAKAAAwAQ
AKcRAABRAEsApQADABAABxcAAFEATgCsAAMBEAABAAAAUQBTALcAAwEQACEAAABdAFYAuQADARAA
1gAAAF0AYAC7AAMBEAAUAQAAXQBnAL0AAwEQAAACAABdAHAAvwAGBpoBgwJWgNIUhgJWgH0KhgIR
AB0PigIRAJ0KjwIRAFMJlAIBAFEEmAIBAAYGoAIBAB4GpAIBAMYDgwIBAAYErAIBADYErAIBABwE
rAIBAPEDgwIBAN4ErwIBANAIrAIBABUIrAIBAC0IrAIBAEgDswIBANcFrAIBAGsErAIBANoDrAIB
ALcIrAIBAAwFtgIBAIEEugIBAKEGvgIBAOkGwgIBAMsHxgIBADUHygIBALgGzgIBAIgG0gIBAEwH
1gIBAG4G2gIBAGMH3gIBADoG4gIBAO0I5gIBAMYDgwIBAAYErAIBAMEFrAIBAMYDgwIBAAYErAIB
ALcIrAIBAMEFrAIBAJkErAIBAH0FgwIBAFEG6gIBAJkH6gIBANAG6gIBAO4F6gIBAGMFrAIBAK8E
rAIBADYFswIBACIF6gIBAFsI6gIBAMcE6gIBAPUE6gIBAE8F6gIBAPUE6gIBAAED6gIBAPwH6gIB
AAYH6gIBAPUE6gIBAKII6gIBAIgI6gIBAPUE6gIBAB0H6gIBAHoH6gIBAPUE6gIBAJUF6gIBAOIH
6gIBALIH6gIBAEUI6gIBAKoF6gIBAJQD6gIBAHAI6gIBAGED6gIBABsD6gIBAJUF6gIBAJQD6gIB
ADAD6gIBAHwD6gIBAK8D6gIGALcNrAIGAHEBgwIGAK0QgwIGAG0LgwIGAOUQ8QIGAHEBgwIGAK0Q
gwIGALcNrAIBALQAmAIBAAIBgwIBADQBswIBAD8A9QIBAPAAAQMGAG0LgwIGAOUQBQMGAHEBgwIG
AK0QgwIGAHMJgwIBAMUAEQMBAD8AFQMGAG0LgwIGAOUQ8QIGALcNrAIGAMoUmAIBAKMAHAMBAPcA
IQMBAE0BKgMBAFoBLgMBAD8AMwMGAG0LgwIGAOUQ8QIGAHwTOgMBAD8AAQNQIAAAAACGAEoPBgAB
AOggAAAAAJEAshQ+AwEAPCEAAAAAkQAMDkYDBACQIQAAAACRAOEKVgMHANshAAAAAIYYaREGAAkA
4yEAAAAAgxhpEQYACQDrIQAAAACTCPIQYgMJABciAAAAAJMIhQpoAwkAHiIAAAAAkwiRCm4DCQAm
IgAAAACWCLAVdQMKAC0iAAAAAIYYaREGAAoANSIAAAAAkRhvEXoDCgBBIgAAAACGCB0LfgMKAEki
AAAAAIYIKguHAwoA4yEAAAAAhhhpEQYACwBSIgAAAACGCEURkQMLAFoiAAAAAIYIUBGWAwsAYyIA
AAAAhgh2EZwDDABrIgAAAACGCIURpQMMAOMhAAAAAIYYaREGAA0AdCIAAAAAhgjzAjkBDQB8IgAA
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
aREGAEkAcCYAAAAAhggiFU4ESQB4JgAAAACGCC8VVgRJAIEmAAAAAIYI2hROBEoAiSYAAAAAhgjm
FFYESgCSJgAAAACGCEcWTgRLAJomAAAAAIYIUBZWBEsA4yEAAAAAhhhpEQYATACjJgAAAACGCFcQ
TgRMAKsmAAAAAIYIYRBWBEwAtCYAAAAAhgjDAk4ETQC8JgAAAACGCNECVgRNAOMhAAAAAIYYaREG
AE4AxSYAAAAAhgh3Fk4ETgDNJgAAAACGCIIWVgROANYmAAAAAIYIagJOBE8A3iYAAAAAhgh4AlYE
TwDnJgAAAACGCCwCTgRQAO8mAAAAAIYINAJWBFAA4yEAAAAAhhhpEQYAUQD4JgAAAACGCEMQTgRR
AAAnAAAAAIYISxBWBFEACScAAAAAhgjDAk4EUgARJwAAAACGCNECVgRSABonAAAAAIYIPAJOBFMA
IicAAAAAhghHAlYEUwArJwAAAACGCIYCTgRUADMnAAAAAIYIkQJWBFQAPCcAAAAAhgjfAk4EVQBE
JwAAAACGCOkCVgRVAOMhAAAAAIYYaREGAFYA4yEAAAAAhhhpEQYAVgBQJwAAAACDABYAgQBWAJQn
AAAAAOEBaRYGAFYATCkAAAAA4QFBChsAVgBcKQAAAADhAWkWBgBXAMQqAAAAAOEBQQobAFcA1CoA
AAAA4QFpFgYAWACAPAAAAADhAUEKGwBYAJA8AAAAAOEBaRYGAFkAVD0AAAAA4QFBChsAWQAAAAEA
tw0AAAIAcQEAAAMArRAAAAEAcwkAAAIAcQEAAAMArRAAAAEAtw0AAAIAyhQAAAEAhQ0AAAEAhQ0A
AAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEA
hQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0A
AAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEA
hQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0A
AAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEA
hQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0A
AAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEA
hQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAhQ0AAAEAUQoA
AAEAUQoAAAEAUQoAAAEAUQoZAGEAGgBhABsAYQAcAGEACQBpEQEAEQBpEQYAGQBpEQoAKQBpERAA
MQBpERAAOQBpERAAQQBpERAASQBpERAAUQBpERAAWQBpERAAYQBpERAAaQBpEQYAiQBpERUAqQBp
EQYAwQBpFgYAwQBBChsA4QBpEQYAIQFpEQYAQQFpESEAcQDyFC0AUQGTEjMAWQEIDzkAYQFhDUAA
aQGbAEQAcQHcDkkADABpEVgAeQBTEF4AeQCrFQYAUQHbFQEA2QBRC28A2QA1FnQA2QAgDoEAFABR
C5YAFAA1FnQAFAAgDqQAcQBpEQYAoQBpEQYAgQC0CbcAgQDCFr8AKQFpEcUASQFpEQYAHABpEQYA
JAAzEQIBLACzAhYB2QCcAhoBLADqFTQBHAArFjkBHACECT0BeQAzEUgByQCzAhYByQDqFQYA2QD9
D1QB2QD0FQYA2QBBChsAqQFbFW4B+QBpEQYA+QCJFHYBuQEOAnwB+QDcAYIBNAAzEQIBPACzAhYB
FACcAhoBPADqFTQBqQEnF6EBwQFiFaYByQE3CwYAFAD9D1QBFAD0FbIBFABBChsAAQFpERAA0QEx
DwYAHABbEc0BRAAfFjQBEQFpEd8BEQGjFOcB2QFrDe0B6QF/DfUBTAAIDwECVAB4DRYBVAC8FTQB
+QHrAQ0CXAAzEQIBZACzAhYBZADqFTQB0QB4CSsCqQFUFS8CAQJyFjcCRABpFhYBqQFUFT4CCAAI
AHkCCAAMAH4CKQCbAAkFLgALAOEELgATAOoELgAbAAkFLgAjABIFLgArADsFLgAzADsFLgA7ADsF
LgBDABIFLgBLAEEFLgBTADsFLgBbAFgFQABrAKIFQwBjAH4CSQCbAAkFYABrANAFgABrAPoFgwCT
AH4CwQBzAH4C4QBzAH4CAQFzAH4CIQFzAH4CQQFzAH4CYQFzAH4CgQFzAH4CoAFzAH4CoQFzAH4C
wAFzAH4CwQFzAH4C4QFzAH4CAAJzAH4CAQJzAH4CIAJzAH4CIQJzAH4CQAJzAH4CQQJzAH4CYAJz
AH4CYQJzAH4CgQJzAH4CoAJzAH4CoQJzAH4CwAJzAH4CwQJzAH4C4AJzAH4C4QJzAH4CAANzAH4C
AQNzAH4CAwNzAH4CIANzAH4CIQNzAH4CIwNzAH4CQANzAH4CQQNzAH4CQwNzAH4CYANzAH4CYQNz
AH4CYwNzAH4CgANzAH4CgQNzAH4CoANzAH4CoQNzAH4CwANzAH4CwQNzAH4C4ANzAH4C4QNzAH4C
AARzAH4CAQRzAH4CIARzAH4CIQRzAH4CQARzAH4CQQRzAH4CYARzAH4CYQRzAH4CgARzAH4CgQRz
AH4CoARzAH4CoQRzAH4CwARzAH4CwQRzAH4C4ARzAH4C4QRzAH4CAAVzAH4CAQVzAH4CIAVzAH4C
IQVzAH4CQAVzAH4CQQVzAH4CYQVzAH4CgAVzAH4CgQVzAH4CoAVzAH4CoQVzAH4CwAVzAH4CwQVz
AH4C4AVzAH4C4QVzAH4CAAZzAH4CAQZzAH4CIAZzAH4CIQZzAH4CQQZzAH4CYAZzAH4CYQZzAH4C
gAZzAH4CgQZzAH4CoAZzAH4CoQZzAH4CwAZzAH4CwQZzAH4C4AZzAH4C4QZzAH4CAAdzAH4CAQdz
AH4CIAdzAH4CIQdzAH4CQAdzAH4CQQdzAH4CYAdzAH4CYQdzAH4CgAdzAH4CgQdzAH4CoAdzAH4C
oQdzAH4CwAdzAH4CwQdzAH4C4AdzAH4C4QdzAH4CAAhzAH4CAQhzAH4CIAhzAH4CIQhzAH4CQAhz
AH4CQQhzAH4CYAhzAH4CYQhzAH4CgAhzAH4CgQhzAH4CoAhzAH4CoQhzAH4CwAhzAH4CwQhzAH4C
4AhzAH4C4QhzAH4CAAlzAH4CAQlzAH4CIAlzAH4CIQlzAH4CQAlzAH4CQQlzAH4CYAlzAH4CYQlz
AH4CgAlzAH4CgQlzAH4CoQlzAH4CwAlzAH4CwQlzAH4C4AlzAH4C4QlzAH4CAApzAH4CAQpzAH4C
IApzAH4CIQpzAH4CQApzAH4CQQpzAH4CYApzAH4CoApzAH4CwApzAH4C4ApzAH4CAAtzAH4CIAtz
AH4CQAtzAH4CYAtzAH4CgAtzAH4CoAtzAH4CwAtzAH4C4AtzAH4CAAxzAH4CQAxzAH4CYAxzAH4C
gAxzAH4CoAxzAH4CwAxzAH4C4AxzAH4CAA1zAH4CIA1zAH4CQA1zAH4CYA1zAH4CgA1zAH4CoA1z
AH4CwA1zAH4C4A1zAH4CIA5zAH4CQA5zAH4CYA5zAH4CgA5zAH4CoA5zAH4CwA5zAH4CAA9zAH4C
IA9zAH4CQA9zAH4CYA9zAH4CoA9zAH4CwA9zAH4C4A9zAH4CABBzAH4CIBBzAH4CQBBzAH4CYBBz
AH4CgBBzAH4CwBBzAH4C4BBzAH4CABFzAH4CIBFzAH4CQBFzAH4CYBFzAH4CoBFzAH4CwBFzAH4C
4BFzAH4CABJzAH4CIBJzAH4CQBJzAH4CgBJzAH4CoBJzAH4CwBJzAH4C4BJzAH4CIBNzAH4CQBNz
AH4CYBNzAH4CgBNzAH4CoBNzAH4CwBNzAH4CABRzAH4CIBRzAH4CQBRzAH4CYBRzAH4CoBRzAH4C
wBRzAH4C4BRzAH4CABVzAH4CIBVzAH4CQBVzAH4CgBVzAH4CoBVzAH4CwBVzAH4C4BVzAH4CABZz
AH4CIBZzAH4CQBZzAH4CYBZzAH4CgBZzAH4CoBZzAH4CABdrACoGQBeLAH4CgBeLAH4CwBeLAH4C
ABiLAH4CKABqAIYArQDNANcAWgG4AUQCBAABAAUAAwAGAAQABwAFAAgABwAJABIACgAVAAsAIgAM
ACUADQArAA4AMgAPADUAEAA3ABEAOwASAD4AEwBBABQAQwAVAEYAFgBIABcASwAAAPYQXwQAAKUK
ZQQAAMYVawQAAC4LcAQAAFQReQQAAIkRfgQAAP4ChwQAAAkKiwQAAAQKiwQAAOkJiwQAAIAJhwQA
AAYOjwQAAPsWiwQAAI4ViwQAAKQViwQAAGIClAQAAJcQiwQAAEwLiwQAAE0JiwQAAN8WiwQAAAMP
mAQAAFoNnQQAAPgSogQAAFMTpwQAABwVrAQAAMcTsQQAABQTtgQAANwSuwQAAOETwAQAALsSxQQA
APsTygQAALsRzwQAAB8X1AQAAP4ChwQAAAkKiwQAAIQQiwQAAP4ChwQAAAkKiwQAAN8WiwQAAIQQ
iwQAAJgNiwQAADwQhwQAAPUR2QQAAEoU2QQAACsT2QQAAMcQ2QQAAPQPiwQAANcNiwQAAF8PlAQA
AGQP2QQAAGUW2QQAAOwN2QQAAH8O2QQAAFAQ2QQAAH8O2QQAACMC2QQAAEwV2QQAAG0T2QQAAH8O
2QQAAL4W2QQAAKkW2QQAAH8O2QQAAJUT2QQAACwU2QQAAH8O2QQAAE8Q2QQAADMV2QQAAOoU2QQA
AFQW2QQAAGUQ2QQAANUC2QQAAIYW2QQAAHwC2QQAAIIC2QQAAE8Q2QQAANUC2QQAAEsC2QQAAJUC
2QQAAO0C2QQCAAcAAwACAAgABQABAAkABQACAAoABwACAA0ACQABAA4ACQACABAACwABABEACwAC
ABIADQABABMADQACABUADwABABYADwACABcAEQABABgAEQACABkAEwABABoAEwACABsAFQABABwA
FQACAB0AFwABAB4AFwACAB8AGQABACAAGQACACEAGwABACIAGwACACMAHQABACQAHQACACUAHwAB
ACYAHwACACcAIQABACgAIQACACkAIwABACoAIwACACwAJQABAC0AJQACAC4AJwABAC8AJwACADAA
KQABADEAKQACADMAKwABADQAKwACADUALQABADYALQACADcALwABADgALwACADkAMQABADoAMQAC
ADsAMwABADwAMwACAD0ANQABAD4ANQACAD8ANwABAEAANwACAEEAOQABAEIAOQACAEMAOwABAEQA
OwACAEUAPQABAEYAPQACAEcAPwABAEgAPwACAEkAQQABAEoAQQACAEsAQwABAEwAQwACAE4ARQAB
AE8ARQACAFAARwABAFEARwACAFIASQABAFMASQACAFUASwABAFYASwACAFcATQABAFgATQACAFkA
TwABAFoATwACAFsAUQABAFwAUQACAF0AUwABAF4AUwACAF8AVQABAGAAVQACAGIAVwABAGMAVwAC
AGQAWQABAGUAWQACAGYAWwABAGcAWwACAGgAXQABAGkAXQACAGoAXwABAGsAXwACAGwAYQABAG0A
YQACAG4AYwABAG8AYwACAHEAZQABAHIAZQACAHMAZwABAHQAZwACAHUAaQABAHYAaQACAHgAawAB
AHkAawACAHoAbQABAHsAbQACAH0AbwABAH4AbwACAH8AcQABAIAAcQACAIEAcwABAIIAcwACAIMA
dQABAIQAdQACAIYAdwABAIcAdwACAIgAeQABAIkAeQACAIoAewABAIsAewACAI0AfQABAI4AfQAC
AI8AfwABAJAAfwACAJEAgQABAJIAgQACAJQAgwABAJUAgwACAJYAhQABAJcAhQACAJkAhwABAJoA
hwACAJsAiQABAJwAiQACAJ0AiwABAJ4AiwACAKAAjQABAKEAjQACAKIAjwABAKMAjwACAKUAkQAB
AKYAkQACAKcAkwABAKgAkwACAKkAlQABAKoAlQACAKwAlwABAK0AlwACAK4AmQABAK8AmQACALAA
mwABALEAmwACALIAnQABALMAnQACALQAnwABALUAnwAZAHIBHwAZAHQBIQAaAHYBHwAaAHgBIQAb
AHoBHwAbAHwBIQAcAH4BHwAcAIABIQBQAIsA8AD3AAsBiwGRAdcB+gEHAhUCGwIEgAAAAQAAAPQi
mAEAAAAAAAAbCQAABAAAAAAAAAAAAAAAVQKuAQAAAAAQAAAAAAAAAAAAAABeAikOAAAAAAQAAAAA
AAAAAAAAAGcCnRAAAAAABAAAAAAAAAAAAAAAVQKiAQAAAAAEAAAAAAAAAAAAAABVAhEPAAAAABAA
AAAAAAAAAAAAAF4CewEAAAAADQAAAAAAAAAAAAAAcAIdEAAAAAAEAAAAAAAAAAAAAABVAgEUAAAA
AAAAAAABAAAAEhIAAAYAAgAHAAIACAACAAkAAgAKAAIACwACAAwAAgANAAIADgACAA8AAgAQAAIA
EQACABIAAgATAAIAFAACABUAAgAWAAIAFwACABgAAgAZAAIAGgACABsAAgAcABgAPwB8AEUAnwA/
ALIAPwDSAFsAJQFbAE0BfQCXAYMArQFbACECWwBOAgAAAAAAPD5jX19EaXNwbGF5Q2xhc3MwXzAA
PE1haW4+Yl9fMAA8RmV0Y2hBbmRTdG9yZUFsbFBsYXllcnM+ZF9fMQA8PnVfXzEARnVuY2AxAE51
bGxhYmxlYDEASUVudW1lcmFibGVgMQBUYXNrYDEAQXN5bmNUYXNrTWV0aG9kQnVpbGRlcmAxAFRh
c2tBd2FpdGVyYDEATGlzdGAxAFRvSW50MzIAPGNvbm5lY3Rpb24+NV9fMgA8YWxsUGxheWVycz41
X18yADxodHRwQ2xpZW50PjVfXzIAPEZldGNoUGxheWVyc0Zyb21BcGk+ZF9fMgA8PnVfXzIAPD43
X193cmFwMgA8Y3VycmVudFBhZ2U+NV9fMwA8SW5zZXJ0UGxheWVyc0ludG9EYXRhYmFzZT5kX18z
ADxtb3JlUGFnZXNBdmFpbGFibGU+NV9fNAA8cGxheWVyPjVfXzQAPGNvbW1hbmQ+NV9fNQA8TW9k
dWxlPgBsZWFndWVzSUQATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lz
dGVtLkRhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAU3RhdGlzdGljAEdl
dFN0cmluZ0FzeW5jAEV4ZWN1dGVOb25RdWVyeUFzeW5jADw8TWFpbj5iX18wPmQAQWRkAGdldF9j
b25jZWRlZABzZXRfY29uY2VkZWQAZ2V0X3JlZABzZXRfcmVkAGdldF9zY29yZWQAc2V0X3Njb3Jl
ZABnZXRfaW5qdXJlZABzZXRfaW5qdXJlZABnZXRfeWVsbG93cmVkAHNldF95ZWxsb3dyZWQAZ2V0
X21pc3NlZABzZXRfbWlzc2VkAEF3YWl0VW5zYWZlT25Db21wbGV0ZWQAZ2V0X0lzQ29tcGxldGVk
AGdldF9jb21taXR0ZWQAc2V0X2NvbW1pdHRlZABnZXRfc2F2ZWQAc2V0X3NhdmVkAGdldF9pZABz
ZXRfaWQAPGNvbmNlZGVkPmtfX0JhY2tpbmdGaWVsZAA8cmVkPmtfX0JhY2tpbmdGaWVsZAA8c2Nv
cmVkPmtfX0JhY2tpbmdGaWVsZAA8aW5qdXJlZD5rX19CYWNraW5nRmllbGQAPHllbGxvd3JlZD5r
X19CYWNraW5nRmllbGQAPG1pc3NlZD5rX19CYWNraW5nRmllbGQAPGNvbW1pdHRlZD5rX19CYWNr
aW5nRmllbGQAPHNhdmVkPmtfX0JhY2tpbmdGaWVsZAA8aWQ+a19fQmFja2luZ0ZpZWxkADxwbGFj
ZT5rX19CYWNraW5nRmllbGQAPGFnZT5rX19CYWNraW5nRmllbGQAPG5hbWU+a19fQmFja2luZ0Zp
ZWxkADxsYXN0bmFtZT5rX19CYWNraW5nRmllbGQAPGZpcnN0bmFtZT5rX19CYWNraW5nRmllbGQA
PHJlc3BvbnNlPmtfX0JhY2tpbmdGaWVsZAA8ZGF0ZT5rX19CYWNraW5nRmllbGQAPGxlYWd1ZT5r
X19CYWNraW5nRmllbGQAPGZsYWc+a19fQmFja2luZ0ZpZWxkADxyYXRpbmc+a19fQmFja2luZ0Zp
ZWxkADxiZW5jaD5rX19CYWNraW5nRmllbGQAPGJpcnRoPmtfX0JhY2tpbmdGaWVsZAA8dG90YWw+
a19fQmFja2luZ0ZpZWxkADx0ZWFtPmtfX0JhY2tpbmdGaWVsZAA8aW4+a19fQmFja2luZ0ZpZWxk
ADxjYXB0YWluPmtfX0JhY2tpbmdGaWVsZAA8b24+a19fQmFja2luZ0ZpZWxkADxwb3NpdGlvbj5r
X19CYWNraW5nRmllbGQAPHNlYXNvbj5rX19CYWNraW5nRmllbGQAPHdvbj5rX19CYWNraW5nRmll
bGQAPGRyYXduPmtfX0JhY2tpbmdGaWVsZAA8bG9nbz5rX19CYWNraW5nRmllbGQAPHBob3RvPmtf
X0JhY2tpbmdGaWVsZAA8bnVtYmVyPmtfX0JhY2tpbmdGaWVsZAA8cGxheWVyPmtfX0JhY2tpbmdG
aWVsZAA8c3RhdGlzdGljcz5rX19CYWNraW5nRmllbGQAPGNhcmRzPmtfX0JhY2tpbmdGaWVsZAA8
YXBwZWFyYW5jZXM+a19fQmFja2luZ0ZpZWxkADxkcmliYmxlcz5rX19CYWNraW5nRmllbGQAPHRh
Y2tsZXM+a19fQmFja2luZ0ZpZWxkADxnYW1lcz5rX19CYWNraW5nRmllbGQAPHBhc3Nlcz5rX19C
YWNraW5nRmllbGQAPG1pbnV0ZXM+a19fQmFja2luZ0ZpZWxkADxzdWJzdGl0dXRlcz5rX19CYWNr
aW5nRmllbGQAPHNhdmVzPmtfX0JhY2tpbmdGaWVsZAA8YmxvY2tzPmtfX0JhY2tpbmdGaWVsZAA8
Z29hbHM+a19fQmFja2luZ0ZpZWxkADxkdWVscz5rX19CYWNraW5nRmllbGQAPGZvdWxzPmtfX0Jh
Y2tpbmdGaWVsZAA8aW50ZXJjZXB0aW9ucz5rX19CYWNraW5nRmllbGQAPGxpbmV1cHM+a19fQmFj
a2luZ0ZpZWxkADxzdWNjZXNzPmtfX0JhY2tpbmdGaWVsZAA8c2hvdHM+a19fQmFja2luZ0ZpZWxk
ADxhdHRlbXB0cz5rX19CYWNraW5nRmllbGQAPGFzc2lzdHM+a19fQmFja2luZ0ZpZWxkADxoZWln
aHQ+a19fQmFja2luZ0ZpZWxkADx3ZWlnaHQ+a19fQmFja2luZ0ZpZWxkADxwYXN0PmtfX0JhY2tp
bmdGaWVsZAA8b3V0PmtfX0JhY2tpbmdGaWVsZAA8eWVsbG93PmtfX0JhY2tpbmdGaWVsZAA8YWNj
dXJhY3k+a19fQmFja2luZ0ZpZWxkADxrZXk+a19fQmFja2luZ0ZpZWxkADxjb3VudHJ5PmtfX0Jh
Y2tpbmdGaWVsZAA8bmF0aW9uYWxpdHk+a19fQmFja2luZ0ZpZWxkADxwZW5hbHR5PmtfX0JhY2tp
bmdGaWVsZABEYkNvbW1hbmQAU3FsQ29tbWFuZABTVF8wZjgyYTNkZTZkOTg0NWMxOWRiNzg2YTUx
NDk3MTAzZQBnZXRfcGxhY2UAc2V0X3BsYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfYWdlAHNldF9h
Z2UAcGFnZQBnZXRfTWVzc2FnZQBBZGRSYW5nZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1l
VHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfbmFtZQBzZXRfbmFtZQBnZXRfbGFzdG5h
bWUAc2V0X2xhc3RuYW1lAGdldF9maXJzdG5hbWUAc2V0X2ZpcnN0bmFtZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAElBc3luY1N0YXRlTWFjaGluZQBTZXRTdGF0ZU1hY2hpbmUAc3Rh
dGVNYWNoaW5lAFZhbHVlVHlwZQBTZWN1cml0eVByb3RvY29sVHlwZQBGYWlsdXJlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UASW5zZXJ0UGxheWVyc0ludG9EYXRhYmFzZQBQbGF5
ZXJSZXNwb25zZQBBcGlQbGF5ZXJzUmVzcG9uc2UAZ2V0X3Jlc3BvbnNlAHNldF9yZXNwb25zZQBE
aXNwb3NlAGdldF9kYXRlAHNldF9kYXRlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQA8PjFf
X3N0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3luY1N0YXRlTWFjaGluZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBv
aW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBMZWFndWUAZ2V0X2xlYWd1ZQBzZXRfbGVhZ3VlAGdldF9WYWx1ZQBBZGRXaXRo
VmFsdWUAZ2V0X0hhc1ZhbHVlAHZhbHVlAGdldF9mbGFnAHNldF9mbGFnAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAY29ubmVjdGlvblN0cmluZwBnZXRfcmF0aW5nAHNldF9yYXRpbmcAZ2V0X2Jl
bmNoAHNldF9iZW5jaABCaXJ0aABnZXRfYmlydGgAc2V0X2JpcnRoAEZldGNoUGxheWVyc0Zyb21B
cGkAZ2V0X1Rhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAZ2V0X3RvdGFsAHNldF90b3RhbABTY3JpcHRPYmpl
Y3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfMGY4MmEzZGU2ZDk4NDVjMTlkYjc4NmE1
MTQ5NzEwM2UuZGxsAERCTnVsbABzZXRfU2VjdXJpdHlQcm90b2NvbABUZWFtAGdldF90ZWFtAHNl
dF90ZWFtAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAEJvb2xlYW4AT3BlbgBnZXRf
aW4Ac2V0X2luAFNjcmlwdE1haW4AZ2V0X2NhcHRhaW4Ac2V0X2NhcHRhaW4AZ2V0X29uAHNldF9v
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAGdl
dF9wb3NpdGlvbgBzZXRfcG9zaXRpb24AU2V0RXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBO
ZXd0b25zb2Z0Lkpzb24AZ2V0X3NlYXNvbgBzZXRfc2Vhc29uAGdldF93b24Ac2V0X3dvbgBSdW4A
Z2V0X2RyYXduAHNldF9kcmF3bgBDdWx0dXJlSW5mbwBnZXRfbG9nbwBzZXRfbG9nbwBnZXRfcGhv
dG8Ac2V0X3Bob3RvAFN5c3RlbS5OZXQuSHR0cABTZWFzb25ZZWFyAGdldF9udW1iZXIAc2V0X251
bWJlcgBBc3luY1Rhc2tNZXRob2RCdWlsZGVyADw+dF9fYnVpbGRlcgBnZXRfUmVzb3VyY2VNYW5h
Z2VyAFNlcnZpY2VQb2ludE1hbmFnZXIAU3FsUGFyYW1ldGVyAFRhc2tBd2FpdGVyAEdldEF3YWl0
ZXIAUGxheWVyAGdldF9wbGF5ZXIAc2V0X3BsYXllcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3Rv
cgBnZXRfc3RhdGlzdGljcwBzZXRfc3RhdGlzdGljcwBTeXN0ZW0uRGlhZ25vc3RpY3MAQ2FyZHMA
Z2V0X2NhcmRzAHNldF9jYXJkcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAGdldF9h
cHBlYXJhbmNlcwBzZXRfYXBwZWFyYW5jZXMAU3lzdGVtLlJlc291cmNlcwBTVF9hNjljMmNiN2U5
ZDM0ZmQzOWQxMDRjNTY5M2MwY2QyMS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU1RfYTY5YzJjYjdlOWQzNGZkMzlkMTA0YzU2OTNjMGNkMjEuUHJvcGVydGll
cwBnZXRfVmFyaWFibGVzAERyaWJibGVzAGdldF9kcmliYmxlcwBzZXRfZHJpYmJsZXMAVGFja2xl
cwBnZXRfdGFja2xlcwBzZXRfdGFja2xlcwBHYW1lcwBnZXRfZ2FtZXMAc2V0X2dhbWVzAFBhc3Nl
cwBnZXRfcGFzc2VzAHNldF9wYXNzZXMAZ2V0X21pbnV0ZXMAc2V0X21pbnV0ZXMAU3Vic3RpdHV0
ZXMAZ2V0X3N1YnN0aXR1dGVzAHNldF9zdWJzdGl0dXRlcwBnZXRfc2F2ZXMAc2V0X3NhdmVzAFNl
dHRpbmdzADw+NF9fdGhpcwBnZXRfYmxvY2tzAHNldF9ibG9ja3MAU3lzdGVtLlRocmVhZGluZy5U
YXNrcwBHb2FscwBnZXRfZ29hbHMAc2V0X2dvYWxzAER1ZWxzAGdldF9kdWVscwBzZXRfZHVlbHMA
Rm91bHMAZ2V0X2ZvdWxzAHNldF9mb3VscwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBnZXRfaW50ZXJj
ZXB0aW9ucwBzZXRfaW50ZXJjZXB0aW9ucwBnZXRfbGluZXVwcwBzZXRfbGluZXVwcwBTeXN0ZW0u
TmV0Lkh0dHAuSGVhZGVycwBIdHRwSGVhZGVycwBIdHRwUmVxdWVzdEhlYWRlcnMAZ2V0X0RlZmF1
bHRSZXF1ZXN0SGVhZGVycwBnZXRfUGFyYW1ldGVycwBGZXRjaEFuZFN0b3JlQWxsUGxheWVycwBw
bGF5ZXJzAFN1Y2Nlc3MAZ2V0X3N1Y2Nlc3MAc2V0X3N1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1
bHRzAFNob3RzAGdldF9zaG90cwBzZXRfc2hvdHMAZ2V0X2F0dGVtcHRzAHNldF9hdHRlbXB0cwBn
ZXRfYXNzaXN0cwBzZXRfYXNzaXN0cwBDb25jYXQARm9ybWF0AERlc2VyaWFsaXplT2JqZWN0AFN5
c3RlbS5OZXQAZ2V0X2hlaWdodABzZXRfaGVpZ2h0AGdldF93ZWlnaHQAc2V0X3dlaWdodABXYWl0
AGdldF9EZWZhdWx0AEdldFZhbHVlT3JEZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3Vs
dABHZXRSZXN1bHQAU2V0UmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABIdHRwQ2xpZW50AGdl
dF9DdXJyZW50AGdldF9Db3VudABTdGFydABKc29uQ29udmVydABnZXRfcGFzdABzZXRfcGFzdABn
ZXRfb3V0AHNldF9vdXQATW92ZU5leHQAU2hvdwBnZXRfeWVsbG93AHNldF95ZWxsb3cATWVzc2Fn
ZUJveABnZXRfYWNjdXJhY3kAc2V0X2FjY3VyYWN5AGdldF9rZXkAc2V0X2tleQBnZXRfQXNzZW1i
bHkAZ2V0X2NvdW50cnkAc2V0X2NvdW50cnkAZ2V0X25hdGlvbmFsaXR5AHNldF9uYXRpb25hbGl0
eQBQZW5hbHR5AGdldF9wZW5hbHR5AHNldF9wZW5hbHR5AElzTnVsbE9yRW1wdHkAAAAAAA1MAGUA
YQBnAHUAZQAADVMAZQBhAHMAbwBuAACAo0QAYQB0AGEAIABTAG8AdQByAGMAZQA9AEQARQBTAEsA
VABPAFAALQBRAFIANgBQADMAVAA1ADsASQBuAGkAdABpAGEAbAAgAEMAYQB0AGEAbABvAGcAPQBG
AG8AbwB0AGIAYQBsAGwAQQBwAGkAOwBJAG4AdABlAGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkA
dAB5AD0AUwBTAFAASQA7AAFxUwBUAF8AYQA2ADkAYwAyAGMAYgA3AGUAOQBkADMANABmAGQAMwA5
AGQAMQAwADQAYwA1ADYAOQAzAGMAMABjAGQAMgAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAACAkWgAdAB0AHAAcwA6AC8ALwB2ADMALgBmAG8AbwB0AGIAYQBsAGwA
LgBhAHAAaQAtAHMAcABvAHIAdABzAC4AaQBvAC8AcABsAGEAeQBlAHIAcwA/AGwAZQBhAGcAdQBl
AD0AewAwAH0AJgBzAGUAYQBzAG8AbgA9AHsAMQB9ACYAcABhAGcAZQA9AHsAMgB9AAFBMwBiADIA
MwBlAGEAMgA1ADAAMQA4ADEANAAwADIAYQAxAGIAZQBiADEAZAA3ADgAYgBkADAAYwBlADAANgA0
AAAdWAAtAFIAYQBwAGkAZABBAFAASQAtAEsAZQB5AAGWFw0ACgAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAASQBOAFMARQBSAFQAIABJAE4AVABPACAAZABiAG8ALgBwAGwA
YQB5AGUAcgBfAHMAdABhAHQAaQBzAHQAaQBjAHMAIAAoAA0ACgAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAGwAYQB5AGUAcgBfAGkAZAAsACAAcABsAGEA
eQBlAHIAXwBuAGEAbQBlACwAIABwAGwAYQB5AGUAcgBfAGYAaQByAHMAdABuAGEAbQBlACwAIABw
AGwAYQB5AGUAcgBfAGwAYQBzAHQAbgBhAG0AZQAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHAAbABhAHkAZQByAF8AYQBnAGUALAAgAHAAbABh
AHkAZQByAF8AYgBpAHIAdABoAF8AZABhAHQAZQAsACAAcABsAGEAeQBlAHIAXwBiAGkAcgB0AGgA
XwBwAGwAYQBjAGUALAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIABwAGwAYQB5AGUAcgBfAGIAaQByAHQAaABfAGMAbwB1AG4AdAByAHkALAAgAHAA
bABhAHkAZQByAF8AbgBhAHQAaQBvAG4AYQBsAGkAdAB5ACwAIABwAGwAYQB5AGUAcgBfAGgAZQBp
AGcAaAB0ACwAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAcABsAGEAeQBlAHIAXwB3AGUAaQBnAGgAdAAsACAAcABsAGEAeQBlAHIAXwBpAG4AagB1
AHIAZQBkACwAIABwAGwAYQB5AGUAcgBfAHAAaABvAHQAbwAsACAAdABlAGEAbQBfAGkAZAAsACAA
DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQAZQBh
AG0AXwBuAGEAbQBlACwAIAB0AGUAYQBtAF8AbABvAGcAbwAsACAAbABlAGEAZwB1AGUAXwBpAGQA
LAAgAGwAZQBhAGcAdQBlAF8AbgBhAG0AZQAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGwAZQBhAGcAdQBlAF8AYwBvAHUAbgB0AHIAeQAsACAA
bABlAGEAZwB1AGUAXwBsAG8AZwBvACwAIABsAGUAYQBnAHUAZQBfAGYAbABhAGcALAAgAGwAZQBh
AGcAdQBlAF8AcwBlAGEAcwBvAG4ALAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIABnAGEAbQBlAHMAXwBhAHAAcABlAGEAcgBhAG4AYwBlAHMALAAg
AGcAYQBtAGUAcwBfAGwAaQBuAGUAdQBwAHMALAAgAGcAYQBtAGUAcwBfAG0AaQBuAHUAdABlAHMA
LAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABn
AGEAbQBlAHMAXwBuAHUAbQBiAGUAcgAsACAAZwBhAG0AZQBzAF8AcABvAHMAaQB0AGkAbwBuACwA
IABnAGEAbQBlAHMAXwByAGEAdABpAG4AZwAsACAAZwBhAG0AZQBzAF8AYwBhAHAAdABhAGkAbgAs
ACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMA
dQBiAHMAdABpAHQAdQB0AGUAcwBfAGkAbgAsACAAcwB1AGIAcwB0AGkAdAB1AHQAZQBzAF8AbwB1
AHQALAAgAHMAdQBiAHMAdABpAHQAdQB0AGUAcwBfAGIAZQBuAGMAaAAsACAADQAKACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAaABvAHQAcwBfAHQAbwB0
AGEAbAAsACAAcwBoAG8AdABzAF8AbwBuACwAIABnAG8AYQBsAHMAXwB0AG8AdABhAGwALAAgAGcA
bwBhAGwAcwBfAGMAbwBuAGMAZQBkAGUAZAAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGcAbwBhAGwAcwBfAGEAcwBzAGkAcwB0AHMALAAgAGcA
bwBhAGwAcwBfAHMAYQB2AGUAcwAsACAAcABhAHMAcwBlAHMAXwB0AG8AdABhAGwALAAgAHAAYQBz
AHMAZQBzAF8AawBlAHkALAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIABwAGEAcwBzAGUAcwBfAGEAYwBjAHUAcgBhAGMAeQAsACAAdABhAGMAawBs
AGUAcwBfAHQAbwB0AGEAbAAsACAAdABhAGMAawBsAGUAcwBfAGIAbABvAGMAawBzACwAIAANAAoA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdABhAGMAawBs
AGUAcwBfAGkAbgB0AGUAcgBjAGUAcAB0AGkAbwBuAHMALAAgAGQAdQBlAGwAcwBfAHQAbwB0AGEA
bAAsACAAZAB1AGUAbABzAF8AdwBvAG4ALAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIABkAHIAaQBiAGIAbABlAHMAXwBhAHQAdABlAG0AcAB0AHMA
LAAgAGQAcgBpAGIAYgBsAGUAcwBfAHMAdQBjAGMAZQBzAHMALAAgAGQAcgBpAGIAYgBsAGUAcwBf
AHAAYQBzAHQALAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIABmAG8AdQBsAHMAXwBkAHIAYQB3AG4ALAAgAGYAbwB1AGwAcwBfAGMAbwBtAG0AaQB0
AHQAZQBkACwAIABjAGEAcgBkAHMAXwB5AGUAbABsAG8AdwAsACAAYwBhAHIAZABzAF8AeQBlAGwA
bABvAHcAcgBlAGQALAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIABjAGEAcgBkAHMAXwByAGUAZAAsACAAcABlAG4AYQBsAHQAeQBfAHcAbwBuACwA
IABwAGUAbgBhAGwAdAB5AF8AYwBvAG0AbQBpAHQAdABlAGQALAAgAHAAZQBuAGEAbAB0AHkAXwBz
AGMAbwByAGUAZAAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgAHAAZQBuAGEAbAB0AHkAXwBtAGkAcwBzAGUAZAAsACAAcABlAG4AYQBsAHQAeQBf
AHMAYQB2AGUAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACkA
IABWAEEATABVAEUAUwAgACgADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAEAAcABsAGEAeQBlAHIAXwBpAGQALAAgAEAAcABsAGEAeQBlAHIAXwBuAGEA
bQBlACwAIABAAHAAbABhAHkAZQByAF8AZgBpAHIAcwB0AG4AYQBtAGUALAAgAEAAcABsAGEAeQBl
AHIAXwBsAGEAcwB0AG4AYQBtAGUALAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIABAAHAAbABhAHkAZQByAF8AYQBnAGUALAAgAEAAcABsAGEAeQBl
AHIAXwBiAGkAcgB0AGgAXwBkAGEAdABlACwAIABAAHAAbABhAHkAZQByAF8AYgBpAHIAdABoAF8A
cABsAGEAYwBlACwAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAQABwAGwAYQB5AGUAcgBfAGIAaQByAHQAaABfAGMAbwB1AG4AdAByAHkALAAgAEAA
cABsAGEAeQBlAHIAXwBuAGEAdABpAG8AbgBhAGwAaQB0AHkALAAgAEAAcABsAGEAeQBlAHIAXwBo
AGUAaQBnAGgAdAAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgAEAAcABsAGEAeQBlAHIAXwB3AGUAaQBnAGgAdAAsACAAQABwAGwAYQB5AGUAcgBf
AGkAbgBqAHUAcgBlAGQALAAgAEAAcABsAGEAeQBlAHIAXwBwAGgAbwB0AG8ALAAgAEAAdABlAGEA
bQBfAGkAZAAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgAEAAdABlAGEAbQBfAG4AYQBtAGUALAAgAEAAdABlAGEAbQBfAGwAbwBnAG8ALAAgAEAA
bABlAGEAZwB1AGUAXwBpAGQALAAgAEAAbABlAGEAZwB1AGUAXwBuAGEAbQBlACwAIAANAAoAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABsAGUAYQBnAHUA
ZQBfAGMAbwB1AG4AdAByAHkALAAgAEAAbABlAGEAZwB1AGUAXwBsAG8AZwBvACwAIABAAGwAZQBh
AGcAdQBlAF8AZgBsAGEAZwAsACAAQABsAGUAYQBnAHUAZQBfAHMAZQBhAHMAbwBuACwAIAANAAoA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABnAGEAbQBl
AHMAXwBhAHAAcABlAGEAcgBhAG4AYwBlAHMALAAgAEAAZwBhAG0AZQBzAF8AbABpAG4AZQB1AHAA
cwAsACAAQABnAGEAbQBlAHMAXwBtAGkAbgB1AHQAZQBzACwAIAANAAoAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABnAGEAbQBlAHMAXwBuAHUAbQBiAGUA
cgAsACAAQABnAGEAbQBlAHMAXwBwAG8AcwBpAHQAaQBvAG4ALAAgAEAAZwBhAG0AZQBzAF8AcgBh
AHQAaQBuAGcALAAgAEAAZwBhAG0AZQBzAF8AYwBhAHAAdABhAGkAbgAsACAADQAKACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAcwB1AGIAcwB0AGkAdAB1
AHQAZQBzAF8AaQBuACwAIABAAHMAdQBiAHMAdABpAHQAdQB0AGUAcwBfAG8AdQB0ACwAIABAAHMA
dQBiAHMAdABpAHQAdQB0AGUAcwBfAGIAZQBuAGMAaAAsACAADQAKACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAcwBoAG8AdABzAF8AdABvAHQAYQBsACwA
IABAAHMAaABvAHQAcwBfAG8AbgAsACAAQABnAG8AYQBsAHMAXwB0AG8AdABhAGwALAAgAEAAZwBv
AGEAbABzAF8AYwBvAG4AYwBlAGQAZQBkACwAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAQABnAG8AYQBsAHMAXwBhAHMAcwBpAHMAdABzACwAIABA
AGcAbwBhAGwAcwBfAHMAYQB2AGUAcwAsACAAQABwAGEAcwBzAGUAcwBfAHQAbwB0AGEAbAAsACAA
QABwAGEAcwBzAGUAcwBfAGsAZQB5ACwAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAQABwAGEAcwBzAGUAcwBfAGEAYwBjAHUAcgBhAGMAeQAsACAA
QAB0AGEAYwBrAGwAZQBzAF8AdABvAHQAYQBsACwAIABAAHQAYQBjAGsAbABlAHMAXwBiAGwAbwBj
AGsAcwAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgAEAAdABhAGMAawBsAGUAcwBfAGkAbgB0AGUAcgBjAGUAcAB0AGkAbwBuAHMALAAgAEAAZAB1
AGUAbABzAF8AdABvAHQAYQBsACwAIABAAGQAdQBlAGwAcwBfAHcAbwBuACwAIAANAAoAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABkAHIAaQBiAGIAbABl
AHMAXwBhAHQAdABlAG0AcAB0AHMALAAgAEAAZAByAGkAYgBiAGwAZQBzAF8AcwB1AGMAYwBlAHMA
cwAsACAAQABkAHIAaQBiAGIAbABlAHMAXwBwAGEAcwB0ACwAIAANAAoAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABmAG8AdQBsAHMAXwBkAHIAYQB3AG4A
LAAgAEAAZgBvAHUAbABzAF8AYwBvAG0AbQBpAHQAdABlAGQALAAgAEAAYwBhAHIAZABzAF8AeQBl
AGwAbABvAHcALAAgAEAAYwBhAHIAZABzAF8AeQBlAGwAbABvAHcAcgBlAGQALAAgAA0ACgAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAGMAYQByAGQAcwBf
AHIAZQBkACwAIABAAHAAZQBuAGEAbAB0AHkAXwB3AG8AbgAsACAAQABwAGUAbgBhAGwAdAB5AF8A
YwBvAG0AbQBpAHQAdABlAGQALAAgAEAAcABlAG4AYQBsAHQAeQBfAHMAYwBvAHIAZQBkACwAIAAN
AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABwAGUA
bgBhAGwAdAB5AF8AbQBpAHMAcwBlAGQALAAgAEAAcABlAG4AYQBsAHQAeQBfAHMAYQB2AGUAZAAN
AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACkAABVAAHAAbABhAHkA
ZQByAF8AaQBkAAAZQABwAGwAYQB5AGUAcgBfAG4AYQBtAGUAACNAAHAAbABhAHkAZQByAF8AZgBp
AHIAcwB0AG4AYQBtAGUAACFAAHAAbABhAHkAZQByAF8AbABhAHMAdABuAGEAbQBlAAAXQABwAGwA
YQB5AGUAcgBfAGEAZwBlAAAlQABwAGwAYQB5AGUAcgBfAGIAaQByAHQAaABfAGQAYQB0AGUAACdA
AHAAbABhAHkAZQByAF8AYgBpAHIAdABoAF8AcABsAGEAYwBlAAArQABwAGwAYQB5AGUAcgBfAGIA
aQByAHQAaABfAGMAbwB1AG4AdAByAHkAACdAAHAAbABhAHkAZQByAF8AbgBhAHQAaQBvAG4AYQBs
AGkAdAB5AAAdQABwAGwAYQB5AGUAcgBfAGgAZQBpAGcAaAB0AAAdQABwAGwAYQB5AGUAcgBfAHcA
ZQBpAGcAaAB0AAAfQABwAGwAYQB5AGUAcgBfAGkAbgBqAHUAcgBlAGQAABtAAHAAbABhAHkAZQBy
AF8AcABoAG8AdABvAAARQAB0AGUAYQBtAF8AaQBkAAAVQAB0AGUAYQBtAF8AbgBhAG0AZQAAFUAA
dABlAGEAbQBfAGwAbwBnAG8AABVAAGwAZQBhAGcAdQBlAF8AaQBkAAAZQABsAGUAYQBnAHUAZQBf
AG4AYQBtAGUAAB9AAGwAZQBhAGcAdQBlAF8AYwBvAHUAbgB0AHIAeQAAGUAAbABlAGEAZwB1AGUA
XwBsAG8AZwBvAAAZQABsAGUAYQBnAHUAZQBfAGYAbABhAGcAAB1AAGwAZQBhAGcAdQBlAF8AcwBl
AGEAcwBvAG4AACVAAGcAYQBtAGUAcwBfAGEAcABwAGUAYQByAGEAbgBjAGUAcwAAHUAAZwBhAG0A
ZQBzAF8AbABpAG4AZQB1AHAAcwAAHUAAZwBhAG0AZQBzAF8AbQBpAG4AdQB0AGUAcwAAG0AAZwBh
AG0AZQBzAF8AbgB1AG0AYgBlAHIAAB9AAGcAYQBtAGUAcwBfAHAAbwBzAGkAdABpAG8AbgAAG0AA
ZwBhAG0AZQBzAF8AcgBhAHQAaQBuAGcAAB1AAGcAYQBtAGUAcwBfAGMAYQBwAHQAYQBpAG4AAB9A
AHMAdQBiAHMAdABpAHQAdQB0AGUAcwBfAGkAbgAAIUAAcwB1AGIAcwB0AGkAdAB1AHQAZQBzAF8A
bwB1AHQAACVAAHMAdQBiAHMAdABpAHQAdQB0AGUAcwBfAGIAZQBuAGMAaAAAGUAAcwBoAG8AdABz
AF8AdABvAHQAYQBsAAATQABzAGgAbwB0AHMAXwBvAG4AABlAAGcAbwBhAGwAcwBfAHQAbwB0AGEA
bAAAH0AAZwBvAGEAbABzAF8AYwBvAG4AYwBlAGQAZQBkAAAdQABnAG8AYQBsAHMAXwBhAHMAcwBp
AHMAdABzAAAZQABnAG8AYQBsAHMAXwBzAGEAdgBlAHMAABtAAHAAYQBzAHMAZQBzAF8AdABvAHQA
YQBsAAAXQABwAGEAcwBzAGUAcwBfAGsAZQB5AAAhQABwAGEAcwBzAGUAcwBfAGEAYwBjAHUAcgBh
AGMAeQAAHUAAdABhAGMAawBsAGUAcwBfAHQAbwB0AGEAbAAAH0AAdABhAGMAawBsAGUAcwBfAGIA
bABvAGMAawBzAAAtQAB0AGEAYwBrAGwAZQBzAF8AaQBuAHQAZQByAGMAZQBwAHQAaQBvAG4AcwAA
GUAAZAB1AGUAbABzAF8AdABvAHQAYQBsAAAVQABkAHUAZQBsAHMAXwB3AG8AbgAAJUAAZAByAGkA
YgBiAGwAZQBzAF8AYQB0AHQAZQBtAHAAdABzAAAjQABkAHIAaQBiAGIAbABlAHMAXwBzAHUAYwBj
AGUAcwBzAAAdQABkAHIAaQBiAGIAbABlAHMAXwBwAGEAcwB0AAAZQABmAG8AdQBsAHMAXwBkAHIA
YQB3AG4AACFAAGYAbwB1AGwAcwBfAGMAbwBtAG0AaQB0AHQAZQBkAAAbQABjAGEAcgBkAHMAXwB5
AGUAbABsAG8AdwAAIUAAYwBhAHIAZABzAF8AeQBlAGwAbABvAHcAcgBlAGQAABVAAGMAYQByAGQA
cwBfAHIAZQBkAAAZQABwAGUAbgBhAGwAdAB5AF8AdwBvAG4AACVAAHAAZQBuAGEAbAB0AHkAXwBj
AG8AbQBtAGkAdAB0AGUAZAAAH0AAcABlAG4AYQBsAHQAeQBfAHMAYwBvAHIAZQBkAAAfQABwAGUA
bgBhAGwAdAB5AF8AbQBpAHMAcwBlAGQAAB1AAHAAZQBuAGEAbAB0AHkAXwBzAGEAdgBlAGQAAC9F
AHIAcgBvAHIAIABpAG4AcwBlAHIAdABpAG4AZwAgAHAAbABhAHkAZQByACAAAAU6ACAAADdEAGEA
dABhAGIAYQBzAGUAIABjAG8AbgBuAGUAYwB0AGkAbwBuACAAZQByAHIAbwByADoAIAAAAADFF47x
3DfaTZrcwy2Qc4WuAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARJBBSABARJhBiABARGAnQQHAggI
BSAAEoCpBSAAEoCtBiABEoCxHAMgABwEAAEIHAYAAQERgL0HFRKAwQESPQUgAgEcGAsAARI9FRKA
wQESPQQHARFkBAAAEW0HMAEBARAeAAQKARFkBCAAEj0EBwERaAoVEXkBFRJNARIcCAAAFRF5ARMA
BAoBEWgIIAAVEkkBEwAEBwERbAQKARFsBwABEkERgMUFIAASgMkHIAIBDhKAyQQHARFwBAoBEXAY
BwYIFRJNARIcFRF1ARUSTQESHAgRZRJpBhUSTQESHAoVEkkBFRJNARIcCCAAFRF1ARMAChURdQEV
Ek0BEhwDIAACCjACAgEQHgAQHgEOCgIVEXUBFRJNARIcEWQEIAATAAMgAAgKIAEBFRKAzQETAAQg
ABFlBgoCEWURZAUgAQESaRMHBwgVEk0BEhwODg4VEXUBDhJpBwAEDg4cHBwFIAASgNkFIAIBDg4I
IAEVEkkBDg4FFRJJAQ4FFRF1AQ4JCgIVEXUBDhFoBAABAg4GEAEBHgAOBAoBEhgFIAEBEwAUBwcI
DhURWQEIFRF1AQgSaRJpEmkJIAAVEYCFARMABxURgIUBEhwHIAIBDhKAgQUgABKA7QcgAhKA8Q4c
BAYSgPUGFRJNARIoBSABEwAIBRURWQEIByAAFRJJAQgFFRJJAQgFFRF1AQgJCgIVEXUBCBFsAyAA
DgcABA4ODg4OBgABEYEFDgUAAg4ODgkHBAgSYBFlEmkGCgIRZRFwCLd6XFYZNOCJCImEXc2AgMyR
CLA/X38R1Qo6CDCtT+aypq7tBAAAAAAEAQAAAAIGCAMGEQwEBhKAlQQGEoCZAwYSFAcGFRJNARIc
AwYSIAcGFRJNARIoAgYOAwYSJAIGAgMGEiwDBhIwAwYSNAMGEjgDBhI8AwYSQAMGEkQDBhJIAwYS
TAMGElADBhJUAwYSWAMGElwGBhURWQEIAwYRbQsGFRF1ARUSTQESHAMGEWULBhUReQEVEk0BEhwD
BhJ9BgYVEXUBDgQGEoCBCAYVEYCFARIcAwYSHAQGEoCJBgYVEXUBCAMGEmAHAAMSPQ4ICA8AAxUS
SQEVEk0BEhwICAgLAAISPQ4VEk0BEhwFAAASgJUFAAASgJkGAAEBEoCZBAAAEhQDAAABCCAAFRJN
ARIcCSABARUSTQESHAQgABIgBSABARIgCCAAFRJNARIoCSABARUSTQESKAQgABIkBSABARIkBCAB
AQIEIAASLAUgAQESLAQgABIwBSABARIwBCAAEjQFIAEBEjQEIAASOAUgAQESOAQgABI8BSABARI8
BCAAEkAFIAEBEkAEIAASRAUgAQESRAQgABJIBSABARJIBCAAEkwFIAEBEkwEIAASUAUgAQESUAQg
ABJUBSABARJUBCAAElgFIAEBElgEIAASXAUgAQESXAcgABURWQEICCABARURWQEIBQgAEoCVBQgA
EoCZBAgAEhQIKAAVEk0BEhwEKAASIAgoABUSTQESKAMoAAgDKAAOBCgAEiQDKAACBCgAEiwEKAAS
MAQoABI0BCgAEjgEKAASPAQoABJABCgAEkQEKAASSAQoABJMBCgAElAEKAASVAQoABJYBCgAElwH
KAAVEVkBCAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAo
AQAjU1RfYTY5YzJjYjdlOWQzNGZkMzlkMTA0YzU2OTNjMGNkMjEAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtE
aXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjctAQAoU2NyaXB0TWFpbis8RmV0Y2hBbmRTdG9y
ZUFsbFBsYXllcnM+ZF9fMQAAKQEAJFNjcmlwdE1haW4rPEZldGNoUGxheWVyc0Zyb21BcGk+ZF9f
MgAALwEAKlNjcmlwdE1haW4rPEluc2VydFBsYXllcnNJbnRvRGF0YWJhc2U+ZF9fMwAAMgEALVNj
cmlwdE1haW4rPD5jX19EaXNwbGF5Q2xhc3MwXzArPDxNYWluPmJfXzA+ZAAAAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAGyeAAAAAAAAAAAAAIaeAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4ngAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFigAAAOBAAAAAAAAAAAAAAOBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAmAH0IgAAAQCYAfQiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEbgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAASgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwBhADYAOQBjADIAYwBiADcAZQA5AGQAMwA0AGYAZAAzADkAZAAxADAANABjADUA
NgA5ADMAYwAwAGMAZAAyADEAAAA6AA0AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4AOAA5ADQAOAAuADQAMAA4AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADAAZgA4ADIAYQAzAGQAZQA2AGQAOQA4ADQANQBjADEAOQBkAGIANwA4ADYAYQA1ADEANAA5
ADcAMQAwADMAZQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AMABmADgAMgBhADMAZABlADYAZAA5ADgANAA1AGMAMQA5AGQAYgA3ADgANgBh
ADUAMQA0ADkANwAxADAAMwBlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEANgA5AGMAMgBjAGIANwBlADkAZAAzADQAZgBkADMAOQBkADEAMAA0AGMANQA2
ADkAMwBjADAAYwBkADIAMQAAAD4ADQABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA5ADQAOAAuADQAMAA4AAAAAABCAA0AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA4ADkANAA4AC4ANAAwADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAMAAAAmD4A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{9505D759-1FB6-4CFF-9DB6-9D78CC51F9E3}"
              DTS:ObjectName="{9505D759-1FB6-4CFF-9DB6-9D78CC51F9E3}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::League" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{16D6CD71-D9AC-4750-BCB2-97E484E72620}"
              DTS:ObjectName="{16D6CD71-D9AC-4750-BCB2-97E484E72620}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::Season" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get Players Data\Seasons"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{9660490a-9016-4908-917a-7cf7c3b9f7d8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Seasons"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2279D73D-7732-45DB-A50E-C6CE62462ACF}"
              SQLTask:SqlStatementSource="SELECT L.LeagueId AS League ,S.Seasons AS Season FROM stg.Leagues L JOIN stg.Seasons S ON S.Seasons = L.SeasonYear"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::PlayerData" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Get Players Data.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{c31c2601-1cdd-4680-a860-ca4159c4428b}"
          DTS:From="Package\Get Players Data\Seasons"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Get Players Data\Get Players Data" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Standings Data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{fd4e5eba-8f3a-4511-b2fb-2aa470499dd5}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Standings Data">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Get Standings Data\Get Players Data"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{353930b0-e05f-4d65-afd8-9b38ed1d6dfe}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Players Data">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{899699e0-6362-43f1-b2c7-6a6353d16244}"
            DTS:ObjectName="{AD0CBE83-1182-4054-BF71-3EAF2FC6B4E4}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::PlayerData" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Get Standings Data\Get Players Data\Get Standings Data"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{5696DB19-88AF-48BE-896F-843898EC49FA}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Standings Data"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_4c4cac6e346f4eafb0ba8ad8da3f53f1"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::League,User::Season">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4c4cac6e346f4eafb0ba8ad8da3f53f1.Properties.Settings.get_Default():ST_4c4cac6e346f4eafb0ba8ad8da3f53f1.Properties.Sett" +
    "ings")]

namespace ST_4c4cac6e346f4eafb0ba8ad8da3f53f1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[using System;
using System.Data.SqlClient;
using System.Net;
using System.IO;
using Newtonsoft.Json.Linq;
using System.Data;
using System.Windows.Forms;

namespace FootballStandingsSSIS
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        public void Main()
        {
            int League = Convert.ToInt32(Dts.Variables["League"].Value);
            int Season = Convert.ToInt32(Dts.Variables["Season"].Value);

            // Set the security protocol to TLS 1.2
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

            string apiUrl = $"https://v3.football.api-sports.io/standings?league={League}&season={Season}";
            string apiKey = "80832ef4949691fc0bbb8a0234b3bd84";

            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(apiUrl);
            request.Headers["X-RapidAPI-Key"] = apiKey;

            using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())
            {
                using (StreamReader reader = new StreamReader(response.GetResponseStream()))
                {
                    string jsonResponse = reader.ReadToEnd();
                    LogMessage("API Response: " + jsonResponse); // Log API response
                    JObject standings = JObject.Parse(jsonResponse);

                    // Check if standings["response"] is null or empty
                    if (standings["response"] == null || !standings["response"].HasValues)
                    {
                        LogMessage("API returned zero or null standings.");
                        Dts.TaskResult = (int)ScriptResults.Success;
                        return; // Move to another process or end the script
                    }

                    var league = standings["response"][0]["league"];
                    var standingsArray = league["standings"][0];

                    if (standingsArray != null && standingsArray.HasValues)
                    {
                        DataTable dataTable = CreateDataTable();

                        foreach (var team in standingsArray)
                        {
                            if (team != null && team.HasValues)
                            {
                                DataRow row = dataTable.NewRow();
                                FillDataRow(row, league, team);
                                dataTable.Rows.Add(row);
                            }
                        }

                        if (dataTable.Rows.Count > 0)
                        {
                            InsertDataIntoDatabase(dataTable);
                        }
                        else
                        {
                            LogMessage("No valid data to insert.");
                            Dts.TaskResult = (int)ScriptResults.Success;
                            return;
                        }
                    }
                    else
                    {
                        LogMessage("No standings data available.");
                        Dts.TaskResult = (int)ScriptResults.Success;
                        return;
                    }
                }
            }

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        private DataTable CreateDataTable()
        {
            DataTable dataTable = new DataTable();
            dataTable.Columns.Add("league_id", typeof(int));
            dataTable.Columns.Add("league_name", typeof(string));
            dataTable.Columns.Add("league_country", typeof(string));
            dataTable.Columns.Add("league_logo", typeof(string));
            dataTable.Columns.Add("league_flag", typeof(string));
            dataTable.Columns.Add("season", typeof(int));
            dataTable.Columns.Add("team_rank", typeof(int));
            dataTable.Columns.Add("team_id", typeof(int));
            dataTable.Columns.Add("team_name", typeof(string));
            dataTable.Columns.Add("team_logo", typeof(string));
            dataTable.Columns.Add("points", typeof(int));
            dataTable.Columns.Add("goals_diff", typeof(int));
            dataTable.Columns.Add("form", typeof(string));
            dataTable.Columns.Add("status", typeof(string));
            dataTable.Columns.Add("description", typeof(string));
            dataTable.Columns.Add("played_all", typeof(int));
            dataTable.Columns.Add("win_all", typeof(int));
            dataTable.Columns.Add("draw_all", typeof(int));
            dataTable.Columns.Add("lose_all", typeof(int));
            dataTable.Columns.Add("goals_for_all", typeof(int));
            dataTable.Columns.Add("goals_against_all", typeof(int));
            dataTable.Columns.Add("played_home", typeof(int));
            dataTable.Columns.Add("win_home", typeof(int));
            dataTable.Columns.Add("draw_home", typeof(int));
            dataTable.Columns.Add("lose_home", typeof(int));
            dataTable.Columns.Add("goals_for_home", typeof(int));
            dataTable.Columns.Add("goals_against_home", typeof(int));
            dataTable.Columns.Add("played_away", typeof(int));
            dataTable.Columns.Add("win_away", typeof(int));
            dataTable.Columns.Add("draw_away", typeof(int));
            dataTable.Columns.Add("lose_away", typeof(int));
            dataTable.Columns.Add("goals_for_away", typeof(int));
            dataTable.Columns.Add("goals_against_away", typeof(int));
            dataTable.Columns.Add("update_time", typeof(DateTime));

            return dataTable;
        }

        private void FillDataRow(DataRow row, JToken league, JToken team)
        {
            row["league_id"] = league["id"]?.Value<int>() ?? 0;
            row["league_name"] = league["name"]?.Value<string>() ?? string.Empty;
            row["league_country"] = league["country"]?.Value<string>() ?? string.Empty;
            row["league_logo"] = league["logo"]?.Value<string>() ?? string.Empty;
            row["league_flag"] = league["flag"]?.Value<string>() ?? string.Empty;
            row["season"] = league["season"]?.Value<int?>() ?? 0;
            row["team_rank"] = team["rank"]?.Value<int?>() ?? 0;
            row["team_id"] = team["team"]?["id"]?.Value<int?>() ?? 0;
            row["team_name"] = team["team"]?["name"]?.Value<string>() ?? string.Empty;
            row["team_logo"] = team["team"]?["logo"]?.Value<string>() ?? string.Empty;
            row["points"] = team["points"]?.Value<int?>() ?? 0;
            row["goals_diff"] = team["goalsDiff"]?.Value<int?>() ?? 0;
            row["form"] = team["form"]?.Value<string>() ?? string.Empty;
            row["status"] = team["status"]?.Value<string>() ?? string.Empty;
            row["description"] = team["description"]?.Value<string>() ?? string.Empty;
            row["played_all"] = team["all"]?["played"]?.Value<int?>() ?? 0;
            row["win_all"] = team["all"]?["win"]?.Value<int?>() ?? 0;
            row["draw_all"] = team["all"]?["draw"]?.Value<int?>() ?? 0;
            row["lose_all"] = team["all"]?["lose"]?.Value<int?>() ?? 0;
            row["goals_for_all"] = team["all"]?["goals"]?["for"]?.Value<int?>() ?? 0;
            row["goals_against_all"] = team["all"]?["goals"]?["against"]?.Value<int?>() ?? 0;
            row["played_home"] = team["home"]?["played"]?.Value<int?>() ?? 0;
            row["win_home"] = team["home"]?["win"]?.Value<int?>() ?? 0;
            row["draw_home"] = team["home"]?["draw"]?.Value<int?>() ?? 0;
            row["lose_home"] = team["home"]?["lose"]?.Value<int?>() ?? 0;
            row["goals_for_home"] = team["home"]?["goals"]?["for"]?.Value<int?>() ?? 0;
            row["goals_against_home"] = team["home"]?["goals"]?["against"]?.Value<int?>() ?? 0;
            row["played_away"] = team["away"]?["played"]?.Value<int?>() ?? 0;
            row["win_away"] = team["away"]?["win"]?.Value<int?>() ?? 0;
            row["draw_away"] = team["away"]?["draw"]?.Value<int?>() ?? 0;
            row["lose_away"] = team["away"]?["lose"]?.Value<int?>() ?? 0;
            row["goals_for_away"] = team["away"]?["goals"]?["for"]?.Value<int?>() ?? 0;
            row["goals_against_away"] = team["away"]?["goals"]?["against"]?.Value<int?>() ?? 0;
            row["update_time"] = DateTime.Parse(team["update"]?.Value<string>() ?? DateTime.Now.ToString());
        }

        private void InsertDataIntoDatabase(DataTable dataTable)
        {
            using (SqlConnection connection = new SqlConnection(@"Data Source=DESKTOP-QR6P3T5;Initial Catalog=FootballApi;Integrated Security=SSPI;"))
            {
                connection.Open();
                using (SqlBulkCopy bulkCopy = new SqlBulkCopy(connection))
                {
                    bulkCopy.DestinationTableName = "stg.Standings";
                    bulkCopy.WriteToServer(dataTable);
                }
                LogMessage("Data inserted successfully.");
                //MessageBox.Show("Data Inserted");
            }
        }

        private void LogMessage(string message)
        {
            // Log the message (this could be to a file, database, etc.)
            // For this example, we're just using Console
            Console.WriteLine(message);
        }

        private void LogError(string message)
        {
            // Log the error (this could be to a file, database, etc.)
            // For this example, we're just using Console
            Console.WriteLine(message);
        }

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_4c4cac6e346f4eafb0ba8ad8da3f53f1</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_4c4cac6e346f4eafb0ba8ad8da3f53f1</msb:DisplayName>
    <msb:ProjectId>{4195A515-0C48-4283-8B59-47AE4FD911EB}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4c4cac6e346f4eafb0ba8ad8da3f53f1.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_4c4cac6e346f4eafb0ba8ad8da3f53f1.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E60A62D9-7800-4D48-BEBF-67B6C8F32DE3}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4c4cac6e346f4eafb0ba8ad8da3f53f1</RootNamespace>
    <AssemblyName>ST_4c4cac6e346f4eafb0ba8ad8da3f53f1</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.1.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\ETL Packages\FootballData\DLL Re\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.SqlClient, Version=4.6.1.6, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\ETL Packages\FootballData\DLL Re\System.Data.SqlClient.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4c4cac6e346f4eafb0ba8ad8da3f53f1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4c4cac6e346f4eafb0ba8ad8da3f53f1")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4c4cac6e346f4eafb0ba8ad8da3f53f1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4c4cac6e346f4eafb0ba8ad8da3f53f1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4c4cac6e346f4eafb0ba8ad8da3f53f1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4c4cac6e346f4eafb0ba8ad8da3f53f1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4c4cac6e346f4eafb0ba8ad8da3f53f1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_4c4cac6e346f4eafb0ba8ad8da3f53f1.dll">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
EQBxBX8BEQAAAoMBEQABAYcBBgacAIsBVoAnCI4BVoDgAY4BUCAAAAAAhgCPBQYAAQDEIgAAAACB
ACQBkgEBAGwmAAAAAIEA8AiXAQEA5C8AAAAAgQBfAkEBBABcMAAAAACBABEBEAAFAFwwAAAAAIEA
1wYQAAYAZDAAAAAAhhj6BgYABwBsMAAAAACDGPoGBgAHAHQwAAAAAJMIoQahAQcAoDAAAAAAkwjo
AaYBBwCnMAAAAACTCPQBqwEHAK8wAAAAAJYIbwixAQgAtjAAAAAAhhj6BgYACAC+MAAAAACRGAAH
tgEIAAAAAQADCQAAAgBVBAAAAwBOBQAAAQA0AQAAAQAcAQAAAQAcAQAAAQBmBAkA+gYBABEA+gYG
ABkA+gYKACkA+gYQADEA+gYQADkA+gYQAEEA+gYQAEkA+gYQAFEA+gYQAFkA+gYQAGEA+gYQAGkA
+gYGANkA+gYGAAEB+gYVABEB+gYGAHEALwg4ABkBzAc+ACEBUwVEACkBXARLADEBTABPADkBJwVU
AFEBVQhbAFkBoAJiAFkBGwhpAHEBXAVvAFkBhgJ1AHkBPAV7AIEA+gaBAIkB9wCIAFEBTgiMAIkA
mgKSAIkAUwWYAJEA2geeABkBjQgBAJEAUwWiAAwA7AawABQAsgjAAJkA/AjFAJkARQjKAJkB1ADQ
AKEB3wieAKkBkgIGALEBvgjWAJkA+gYGAJkA8QfaAMEBZQHgALkB1ADpANkBYAT9AKkAXAUOAVEB
IAkYARwAewjAALkA6AgpAbkAhgSIALkAmgIuAcEA+gYQAOEBhAUGAMkA+gY7AckAfwEQAMkAyQZB
AekBwQFHAXEA+gYGAOEA+gYGAMEBBwlMAekA+gZSAQkB+gYGAAgAFAB1AQgAGAB6ASkAcwDxAS4A
CwDJAS4AEwDSAS4AGwDxAS4AIwD6AS4AKwAjAi4AMwAjAi4AOwAjAi4AQwD6AS4ASwApAi4AUwAj
Ai4AWwBAAkMAYwB6AUkAcwDxAWEAewB6AWMAawB6ARsA8wA0AQMAAQAEAAMAAAClBroBAAAIAr8B
AACFCMQBAgAJAAMAAgAKAAUAAQALAAUAAgAMAAcAqAC5ABsBBIAAAAEAAAD9Ilo9AAAAAAAAKAAA
AAQAAAAAAAAAAAAAAFoBsAAAAAAAEAAAAAAAAAAAAAAAYwGPBAAAAAAEAAAAAAAAAAAAAABaAWUF
AAAAAA0AAAAAAAAAAAAAAGwBWAYAAAAABAAAAAAAAAAAAAAAWgGkAAAAAAAQAAAAAAAAAAAAAABj
AX0AAAAAAAAAAAABAAAASwcAAAUAAgBhAAoBYQAUAWEAIQEAAAAAAE51bGxhYmxlYDEASUVudW1l
cmFibGVgMQBJRW51bWVyYXRvcmAxAFNUXzRjNGNhYzZlMzQ2ZjRlYWZiMGJhOGFkOGRhM2Y1M2Yx
AFRvSW50MzIAPE1vZHVsZT4AU3lzdGVtLklPAEZvb3RiYWxsU3RhbmRpbmdzU1NJUwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBTeXN0
ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBBZGQAU3lzdGVtLkNvbGxlY3Rpb25zLlNwZWNpYWxpemVk
AFJlYWRUb0VuZABkZWZhdWx0SW5zdGFuY2UATG9nTWVzc2FnZQBtZXNzYWdlAENyZWF0ZURhdGFU
YWJsZQBkYXRhVGFibGUAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUAQ29uc29sZQBzZXRfRGVzdGluYXRpb25UYWJsZU5hbWUARGF0ZVRpbWUA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBXcml0ZUxpbmUAU2VjdXJpdHlQcm90b2Nv
bFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNU
QVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAEluc2VydERhdGFJbnRvRGF0YWJhc2UASHR0cFdlYlJlc3BvbnNl
AEdldFJlc3BvbnNlAERpc3Bvc2UAUGFyc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBsZWFndWUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
VG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFNUXzRjNGNhYzZlMzQ2ZjRlYWZiMGJhOGFkOGRhM2Y1M2YxLmRsbABzZXRfU2VjdXJp
dHlQcm90b2NvbABHZXRSZXNwb25zZVN0cmVhbQB0ZWFtAGdldF9JdGVtAHNldF9JdGVtAFN5c3Rl
bQBFbnVtAHJlc291cmNlTWFuAEpUb2tlbgBPcGVuAFNjcmlwdE1haW4ARGF0YUNvbHVtbgBTeXN0
ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBO
YW1lVmFsdWVDb2xsZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAFdlYkhlYWRlckNvbGxlY3Rp
b24ARGF0YVJvd0NvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24AU3lzdGVtLkRh
dGEuQ29tbW9uAE5ld3RvbnNvZnQuSnNvbgBDdWx0dXJlSW5mbwBOZXd0b25zb2Z0Lkpzb24uTGlu
cQBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFNlcnZpY2VQb2lu
dE1hbmFnZXIAV3JpdGVUb1NlcnZlcgBMb2dFcnJvcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9y
AC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzRjNGNhYzZlMzQ2ZjRlYWZiMGJhOGFkOGRhM2Y1
M2YxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF80YzRj
YWM2ZTM0NmY0ZWFmYjBiYThhZDhkYTNmNTNmMS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAZ2V0
X0hhc1ZhbHVlcwBTZXR0aW5ncwBnZXRfQ29sdW1ucwBFeHRlbnNpb25zAFN5c3RlbS5Db2xsZWN0
aW9ucwBnZXRfSGVhZGVycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfUm93cwBD
b25jYXQARm9ybWF0AEpPYmplY3QAU3lzdGVtLk5ldABnZXRfRGVmYXVsdABHZXRWYWx1ZU9yRGVm
YXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0N1cnJlbnQAZ2V0
X0NvdW50AENvbnZlcnQASHR0cFdlYlJlcXVlc3QATW92ZU5leHQAZ2V0X05vdwBGaWxsRGF0YVJv
dwBOZXdSb3cAcm93AGdldF9Bc3NlbWJseQBTcWxCdWxrQ29weQBFbXB0eQAAAAANTABlAGEAZwB1
AGUAAA1TAGUAYQBzAG8AbgAAgINoAHQAdABwAHMAOgAvAC8AdgAzAC4AZgBvAG8AdABiAGEAbABs
AC4AYQBwAGkALQBzAHAAbwByAHQAcwAuAGkAbwAvAHMAdABhAG4AZABpAG4AZwBzAD8AbABlAGEA
ZwB1AGUAPQB7ADAAfQAmAHMAZQBhAHMAbwBuAD0AewAxAH0AAUE4ADAAOAAzADIAZQBmADQAOQA0
ADkANgA5ADEAZgBjADAAYgBiAGIAOABhADAAMgAzADQAYgAzAGIAZAA4ADQAAB1YAC0AUgBhAHAA
aQBkAEEAUABJAC0ASwBlAHkAAR1BAFAASQAgAFIAZQBzAHAAbwBuAHMAZQA6ACAAABFyAGUAcwBw
AG8AbgBzAGUAAElBAFAASQAgAHIAZQB0AHUAcgBuAGUAZAAgAHoAZQByAG8AIABvAHIAIABuAHUA
bABsACAAcwB0AGEAbgBkAGkAbgBnAHMALgAADWwAZQBhAGcAdQBlAAATcwB0AGEAbgBkAGkAbgBn
AHMAADFOAG8AIAB2AGEAbABpAGQAIABkAGEAdABhACAAdABvACAAaQBuAHMAZQByAHQALgAAOU4A
bwAgAHMAdABhAG4AZABpAG4AZwBzACAAZABhAHQAYQAgAGEAdgBhAGkAbABhAGIAbABlAC4AABNs
AGUAYQBnAHUAZQBfAGkAZAAAF2wAZQBhAGcAdQBlAF8AbgBhAG0AZQAAHWwAZQBhAGcAdQBlAF8A
YwBvAHUAbgB0AHIAeQAAF2wAZQBhAGcAdQBlAF8AbABvAGcAbwAAF2wAZQBhAGcAdQBlAF8AZgBs
AGEAZwAADXMAZQBhAHMAbwBuAAATdABlAGEAbQBfAHIAYQBuAGsAAA90AGUAYQBtAF8AaQBkAAAT
dABlAGEAbQBfAG4AYQBtAGUAABN0AGUAYQBtAF8AbABvAGcAbwAADXAAbwBpAG4AdABzAAAVZwBv
AGEAbABzAF8AZABpAGYAZgAACWYAbwByAG0AAA1zAHQAYQB0AHUAcwAAF2QAZQBzAGMAcgBpAHAA
dABpAG8AbgAAFXAAbABhAHkAZQBkAF8AYQBsAGwAAA93AGkAbgBfAGEAbABsAAARZAByAGEAdwBf
AGEAbABsAAARbABvAHMAZQBfAGEAbABsAAAbZwBvAGEAbABzAF8AZgBvAHIAXwBhAGwAbAAAI2cA
bwBhAGwAcwBfAGEAZwBhAGkAbgBzAHQAXwBhAGwAbAAAF3AAbABhAHkAZQBkAF8AaABvAG0AZQAA
EXcAaQBuAF8AaABvAG0AZQAAE2QAcgBhAHcAXwBoAG8AbQBlAAATbABvAHMAZQBfAGgAbwBtAGUA
AB1nAG8AYQBsAHMAXwBmAG8AcgBfAGgAbwBtAGUAACVnAG8AYQBsAHMAXwBhAGcAYQBpAG4AcwB0
AF8AaABvAG0AZQAAF3AAbABhAHkAZQBkAF8AYQB3AGEAeQAAEXcAaQBuAF8AYQB3AGEAeQAAE2QA
cgBhAHcAXwBhAHcAYQB5AAATbABvAHMAZQBfAGEAdwBhAHkAAB1nAG8AYQBsAHMAXwBmAG8AcgBf
AGEAdwBhAHkAACVnAG8AYQBsAHMAXwBhAGcAYQBpAG4AcwB0AF8AYQB3AGEAeQAAF3UAcABkAGEA
dABlAF8AdABpAG0AZQAABWkAZAAACW4AYQBtAGUAAA9jAG8AdQBuAHQAcgB5AAAJbABvAGcAbwAA
CWYAbABhAGcAAAlyAGEAbgBrAAAJdABlAGEAbQAAE2cAbwBhAGwAcwBEAGkAZgBmAAAHYQBsAGwA
AA1wAGwAYQB5AGUAZAAAB3cAaQBuAAAJZAByAGEAdwAACWwAbwBzAGUAAAtnAG8AYQBsAHMAAAdm
AG8AcgAAD2EAZwBhAGkAbgBzAHQAAAloAG8AbQBlAAAJYQB3AGEAeQAADXUAcABkAGEAdABlAACA
o0QAYQB0AGEAIABTAG8AdQByAGMAZQA9AEQARQBTAEsAVABPAFAALQBRAFIANgBQADMAVAA1ADsA
SQBuAGkAdABpAGEAbAAgAEMAYQB0AGEAbABvAGcAPQBGAG8AbwB0AGIAYQBsAGwAQQBwAGkAOwBJ
AG4AdABlAGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkAdAB5AD0AUwBTAFAASQA7AAEbcwB0AGcA
LgBTAHQAYQBuAGQAaQBuAGcAcwAAN0QAYQB0AGEAIABpAG4AcwBlAHIAdABlAGQAIABzAHUAYwBj
AGUAcwBzAGYAdQBsAGwAeQAuAABxUwBUAF8ANABjADQAYwBhAGMANgBlADMANAA2AGYANABlAGEA
ZgBiADAAYgBhADgAYQBkADgAZABhADMAZgA1ADMAZgAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAOI99a5/LsU2qRCc54uH+zgAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERfRwHDQgIDhI9EkEOEkUSSRJJEk0VElEBEkkSSRJVBSAAEoCNBSAAEoCRBiABEoCVHAMg
ABwEAAEIHAYAAQERgKEGAAMODhwcBgABEoCtDgUgABKAtQUgAgEODgUgABKAvQUgABKAwQYgAQES
gMEDIAAOBQACDg4OBQABEkUOBSABEkkOAyAAAgUgARJJHAcVEoDJARJJCCAAFRJRARMABhUSUQES
SQQgABMABCAAElUFIAASgM0FIAEBElUDIAAIBSAAEoDdCAABEoDhEYDlCSACEoDpDhKA4QkHAhUR
WQEIEV0MEAEBHgAVEoDJARJJAwoBCAUgAgEOHAMKAQ4CBg4FFRFZAQgHCgEVEVkBCAQAABFdBQAB
EV0OBgcCEmESZQUgAQESYQUgAQESTQQAAQEOBSAAEoD5ByACAQ4SgPkIt3pcVhk04IkIiYRdzYCA
zJEIMK1P5rKmru0EAAAAAAQBAAAAAwYSdQMGEnkDBhIQAgYIAwYRFAQgABJNCSADARJVEkkSSQQA
ABJ1BAAAEnkFAAEBEnkEAAASEAMAAAEECAASdQQIABJ5BAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzRjNGNhYzZlMzQ2ZjRlYWZiMGJh
OGFkOGRhM2Y1M2YxAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjQAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC43AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAANEsAAAAAAAAAAAAATksAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AEBLAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAA
AAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAWj39IgAAAQBaPf0iPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwA0AGMA
NABjAGEAYwA2AGUAMwA0ADYAZgA0AGUAYQBmAGIAMABiAGEAOABhAGQAOABkAGEAMwBmADUAMwBm
ADEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA5ADUANwAuADEA
NQA3ADAANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA0AGMANABj
AGEAYwA2AGUAMwA0ADYAZgA0AGUAYQBmAGIAMABiAGEAOABhAGQAOABkAGEAMwBmADUAMwBmADEA
LgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIA
awBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABf
ADQAYwA0AGMAYQBjADYAZQAzADQANgBmADQAZQBhAGYAYgAwAGIAYQA4AGEAZAA4AGQAYQAzAGYA
NQAzAGYAMQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA0
AGMANABjAGEAYwA2AGUAMwA0ADYAZgA0AGUAYQBmAGIAMABiAGEAOABhAGQAOABkAGEAMwBmADUA
MwBmADEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOQA1
ADcALgAxADUANwAwADYAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADgAOQA1ADcALgAxADUANwAwADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAYDsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{791D0CA2-CBD6-4486-BDD3-A000B8422589}"
              DTS:ObjectName="{791D0CA2-CBD6-4486-BDD3-A000B8422589}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::League" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{F7A5B575-51A8-49CE-BD16-026CB7E8DEB1}"
              DTS:ObjectName="{F7A5B575-51A8-49CE-BD16-026CB7E8DEB1}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::Season" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get Standings Data\Teams"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2df470b8-1470-4582-983f-91c0ac1912ec}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Teams"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2279D73D-7732-45DB-A50E-C6CE62462ACF}"
              SQLTask:SqlStatementSource="SELECT L.LeagueId AS League ,S.Seasons AS Season FROM stg.Leagues L JOIN stg.Seasons S ON S.Seasons = L.SeasonYear "
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::PlayerData" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Get Standings Data.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{d7a0d062-4ac6-4ff6-b4bc-40af352b9b1f}"
          DTS:From="Package\Get Standings Data\Teams"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Get Standings Data\Get Players Data" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Country -- Seasons -- Leagues"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:Disabled="True"
      DTS:DTSID="{81C77152-9C52-4D56-897A-EF2940074EE0}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Country -- Seasons -- Leagues">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Load Country -- Seasons -- Leagues\Get Countries Data"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{82C23A68-D617-43E5-B96B-55DDE0E0626F}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Countries Data"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_a69c2cb7e9d34fd39d104c5693c0cd21"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_a69c2cb7e9d34fd39d104c5693c0cd21.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8BC188A0-43C0-4DAA-96D9-A56F73E8D0AF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a69c2cb7e9d34fd39d104c5693c0cd21</RootNamespace>
    <AssemblyName>ST_a69c2cb7e9d34fd39d104c5693c0cd21</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.1.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\ETL Packages\FootballData\DLL Re\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.SqlClient, Version=4.6.1.6, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\SMART TECH\AppData\Local\Temp\Vsta\SSIS_ST160\VstapLt3XQRKIkm3ZmqMJ74XOw\packages\System.Data.SqlClient.4.8.6\lib\net461\System.Data.SqlClient.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Task = System.Threading.Tasks.Task;

[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
public class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
{
    public void Main()
    {
        // Set TLS 1.2 and TLS 1.3 before making any requests
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12; //| SecurityProtocolType.Tls11;

        // Replace with your actual SQL Server connection string
        string connectionString = "Data Source=DESKTOP-QR6P3T5;Initial Catalog=FootballApi;Integrated Security=SSPI;";
        Task.Run(async () => await FetchAndStoreCountries(connectionString)).Wait();

        Dts.TaskResult = (int)ScriptResults.Success;
    }

    private static async Task FetchAndStoreCountries(string connectionString)
    {
        var countries = await FetchCountriesFromApi();

        if (countries == null || countries.Count == 0)
        {
            MessageBox.Show("Failed to fetch countries. The countries list is null or empty.");
            return;
        }

        await InsertCountriesIntoDatabase(connectionString, countries);
    }

    private static async Task<List<CountryMethod>> FetchCountriesFromApi()
    {
        string apiUrl = "https://v3.football.api-sports.io/countries";
        string apiKey = "3b23ea250181402a1beb1d78bd0ce064";

        try
        {
            using (var httpClient = new HttpClient())
            {
                httpClient.DefaultRequestHeaders.Add("X-RapidAPI-Key", apiKey);
                var response = await httpClient.GetStringAsync(apiUrl);

                if (string.IsNullOrEmpty(response))
                {
                    //MessageBox.Show("API response is empty.");
                    return null;
                }

                // Log the response for debugging
               // MessageBox.Show($"API Response: {response}");

                var apiResponse = JsonConvert.DeserializeObject<ApiResponse>(response);

                // Log the deserialized response for debugging
                //MessageBox.Show($"Deserialized Response: {JsonConvert.SerializeObject(apiResponse)}");

                // Filter out entries with null code or flag
                var filteredCountries = apiResponse.response.Where(country => !string.IsNullOrEmpty(country.code) && !string.IsNullOrEmpty(country.flag)).ToList();

                return filteredCountries;
            }
        }
        catch (Exception ex)
        {
            MessageBox.Show($"Exception occurred while fetching countries: {ex.Message}");
            return null;
        }
    }

    private static async Task InsertCountriesIntoDatabase(string connectionString, List<CountryMethod> countries)
    {
        using (var connection = new SqlConnection(connectionString))
        {
            connection.Open();
            foreach (var country in countries)
            {
                var query = @"
                INSERT INTO stg.Country (Country, Code, Flag) 
                VALUES (@Country, @Code, @Flag)";

                using (var command = new SqlCommand(query, connection))
                {
                    command.Parameters.AddWithValue("@Country", country.name);
                    command.Parameters.AddWithValue("@Code", country.code);
                    command.Parameters.AddWithValue("@Flag", country.flag);

                    await command.ExecuteNonQueryAsync();
                }
            }
        }
    }

    public class CountryMethod
    {
        public string name { get; set; }
        public string code { get; set; }
        public string flag { get; set; }
    }

    public class ApiResponse
    {
        public string get { get; set; }
        public List<string> parameters { get; set; }
        public List<string> errors { get; set; }
        public int results { get; set; }
        public Paging paging { get; set; }
        public List<CountryMethod> response { get; set; }
    }

    public class Paging
    {
        public int current { get; set; }
        public int total { get; set; }
    }

    public enum ScriptResults
    {
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_a69c2cb7e9d34fd39d104c5693c0cd21</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_a69c2cb7e9d34fd39d104c5693c0cd21</msb:DisplayName>
    <msb:ProjectId>{6CF94F80-9AA5-4376-A29A-806907463D5C}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_a69c2cb7e9d34fd39d104c5693c0cd21.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="packages.config"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="System.IO" version="4.3.0" targetFramework="net472" />
</packages>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Settings.get_Default():ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Sett" +
    "ings")]

namespace ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a69c2cb7e9d34fd39d104c5693c0cd21")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a69c2cb7e9d34fd39d104c5693c0cd21")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_a69c2cb7e9d34fd39d104c5693c0cd21.dll">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
fSYAAAQCfCcAAAQJKC8AAAreEwIf/n0mAAAEAnwnAAAEKDAAAAoqAAEQAAAAAA4AYnAAFxoAAAE2
AnwnAAAEAygxAAAKKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAtAwAACN+
AAAgDQAAgAwAACNTdHJpbmdzAAAAAKAZAAC8AwAAI1VTAFwdAAAQAAAAI0dVSUQAAABsHQAACAUA
ACNCbG9iAAAAAAAAAAIAAAFXH6ILCQsAAAD6ATMAFgAAAQAAADwAAAAOAAAAKQAAADIAAAAUAAAA
BAAAAFAAAAACAAAAPgAAAAgAAAAFAAAADgAAABoAAAAIAAAACwAAAAEAAAAIAAAAAQAAAAoAAAAM
AAAAAAC9BwEAAAAAAAYAAAaKCQYAjwaKCQYAGQV3CQ8A/gkAAAYARgVMCAYA4wVMCAYAxAVMCAYA
dgZMCAYAIAZMCAYAOQZMCAYAeAVMCAYAkwXvBgoAVAZYBwoAPARYBwYAfAdwCgYA9QP6BwYAXQWK
CQYApQBwCgYA0wCPAQYAeAv6BwYA4QSKCQYAAQj6BwYA2wP6BwYAqwOKCQYARQmKCQYAkwj6BwYA
7AiKCQYArAV3CQYAxQCKCQYAHwH6BwYArACKCQ4A8QvQCBIAggjbC08AXwkAABIAFwPbCwYA/AR3
CQYAFAmqCQYAxAg3CBYAwQSnBxYALQWnBxYAWAQiCBYAJAl/CxYA5QN/CwYAkAD6BwoAlQdYBwYA
dQP6BwYAYAxMCBoAUQyHChoAqwuHCgYAEwf6Bw4AwAqcCg4AtAqcCh4AMAywCCIAXgPgCAYAlwCP
AQYAaQP6BxIAdQidCBIAXgjbCxIAOAnbCxIADQOdCAAAAABlAQAAAAABAAEAAQAQABcIAAA5AAEA
AQAAABAAsQkuClEAAQAGAAABEABdCi4KpQADAAoAAgAQACIDAABRAAQADQACABAAjAQAAFEABwAU
AAIAEADSBgAAUQANACEAAgEAAEALAABZAA8AJgADARAAAQAAAFEAEgAmAAMBEABsAAAAXQATACgA
AyEQAIsBAABRABgAKgADARAA/AAAAF0AGgAtAAMBEAAxAQAAXQAeAC8AAwEQAM4BAABdACYAMQAR
AAYIZgIRACwEawIRADADcAIBAB0CdAIBAAcCdAIBAE0CdAIBAN8CdAIBAJICdwIBAK4CdwIBAMYC
fgIBAGMCgQIBADMChQIBAPQCfgIBAHsCfgIGBm4BfgJWgDALjQJWgAwEjQIGAAkHdAIGANYEfgIG
AAMJkQIGAAkHdAIBAIkAlQIBABgBoQI2AGEBpQIWABYAqQIGANYEfgIGAAMJsgIBAOsAvgIBAIkA
wwIGANYEfgIGAAMJkQIGAAkHdAIGACQKhQIBANoAygIBACYBzwIBAFMB2AIBAIkA3QIGANYEfgIG
AAMJkQIGAGYK5AIBAIkAoQJQIAAAAACGAB0IBgABAJAgAAAAAJEADQroAgEA1CAAAAAAkQAaB+4C
AgAQIQAAAACRAHAE+wICAFshAAAAAIYYagkGAAQAYyEAAAAAgxhqCQYABABrIQAAAACTCBAJBwME
AJchAAAAAJMIFAQNAwQAniEAAAAAkwggBBMDBACmIQAAAACWCJ8LGgMFAK0hAAAAAIYYagkGAAUA
tSEAAAAAkRhwCR8DBQDBIQAAAACGCJkDwwEFAMkhAAAAAIYIogMQAAUA0iEAAAAAhghAA8MBBgDa
IQAAAACGCEkDEAAGAOMhAAAAAIYIwAbDAQcA6yEAAAAAhgjJBhAABwBjIQAAAACGGGoJBgAIAPQh
AAAAAIYIigvDAQgA/CEAAAAAhgiSCxAACAAFIgAAAACGCPwKIwMJAA0iAAAAAIYICwsrAwkAFiIA
AAAAhggaCyMDCgAeIgAAAACGCCULKwMKACciAAAAAIYITgsdAQsALyIAAAAAhghaCwEACwA4IgAA
AACGCNkGNAMMAEAiAAAAAIYI5AY5AwwASSIAAAAAhgiYBD8DDQBRIgAAAACGCKUESAMNAGMhAAAA
AIYYagkGAA4AWiIAAAAAhggIDB0BDgBiIgAAAACGCBQMAQAOAGsiAAAAAIYIgQcdAQ8AcyIAAAAA
hgiLBwEADwBjIQAAAACGGGoJBgAQAGMhAAAAAIYYagkGABAAfCIAAAAAgwA9AGYAEADAIgAAAADh
AUMMBgAQAPAjAAAAAOEBvgMbABAA/iMAAAAAkRhwCR8DEQBjIQAAAACGGGoJBgARAAokAAAAAIMA
HwBSAxEALCQAAAAA4QFDDAYAEgDUJQAAAADhAb4DGwASAOQlAAAAAOEBQwwGABMAICgAAAAA4QG+
AxsAEwAwKAAAAADhAUMMBgAUAOgoAAAAAOEBvgMbABQAAAABAAkHAAABAAkHAAACACQKAAABALoG
AAABALoGAAABALoGAAABALoGAAABALoGAAABALoGAAABALoGAAABALoGAAABALoGAAABALoGAAAB
ALoGAAABALoGAAABAM4DAAABAGkMAAABAM4DAAABAM4DAAABAM4DCgBhAAwAYQANAGEADgBhAAkA
agkBABEAagkGABkAagkKACkAagkQADEAagkQADkAagkQAEEAagkQAEkAagkQAFEAagkQAFkAagkQ
AGEAagkQAGkAagkGAIkAagkVAKkAagkGAMEAQwwGAMEAvgMbAOEAagkGACEBagkGAEEBagkhAFEB
5QcoAAwAagk3AHkAwAg9AHkAmgsGAHEAOAtJAGkBuAsBANkAugRUANkAKgxZANkAMAdmABQAugR7
ABQAKgxZABQAMAeJAHEAagkGAKEAagkGAIEAhwOcAIEAXAykACkBagmqAEkBagkGABwAUQnfACQA
9wHzANkA4AH3ACQAxwsRASwAIAwdAYEBTAwhAXkAUQkoAckA9wHzAMkAxwsGANkAkAg0AdkA0QsG
ANkAvgMbAJEBcQw6AQEBagkGAAEB0wpVAaEB3AFbAQEBqgFhATQAUQnfADwA9wHzABQA4AH3ADwA
xwsRAakBbQuAAUQAagk3ALEB+gOUAbEBPAyyAcEBsgQGANEAUgPDAZEBZgvHARQAkAg0ARQA0QvN
ARQAvgMbAAkBagkQAMkBEggGACwAXAnhAUwA/AsRARkBagnzARkB7Qr7AdEBrQYBAuEBuQEJAlQA
UQnfAFwA9wHzAFwAxwsRAUwAQwzzAAgAQABcAggARABhAikAmwCvAy4ACwCHAy4AEwCQAy4AGwCv
Ay4AIwC4Ay4AKwDhAy4AMwDhAy4AOwDhAy4AQwC4Ay4ASwDnAy4AUwDhAy4AWwD+A0AAawBIBEMA
YwBhAkkAmwCvA2AAawB1BGEAcwBhAmMAkwBhAoAAawChBIEAcwBhAqEAcwBhAsEAcwBhAuEAcwBh
AgEBcwBhAiEBcwBhAiMBcwBhAkEBcwBhAkMBcwBhAmEBcwBhAmMBcwBhAoEBcwBhAoMBcwBhAqAB
cwBhAqEBcwBhAqMBcwBhAsABcwBhAsEBcwBhAuABcwBhAgACcwBhAiACcwBhAkACcwBhAoACcwBh
AqACcwBhAsACcwBhAuACcwBhAgADcwBhAiADcwBhAkADcwBhAmADcwBhAoADcwBhAqADcwBhAsAD
cwBhAuADcwBhAiAEcwBhAkAEcwBhAmAEcwBhAoAEcwBhAuAEawDTBCAFiwBhAsAFiwBhAgAGiwBh
AkAGiwBhAk8AawCSALIAvAA/AdMBJwIDAAEABAADAAUABAAGAAcABwANAAAAFAlYAwAANAReAwAA
owtkAwAApgNpAwAATQNpAwAAzQZpAwAAlgtpAwAADwttAwAAKQttAwAAXgt1AwAA6AZ5AwAAqQR+
AwAAGAx1AwAAjwd1AwIABwADAAIACAAFAAEACQAFAAIACgAHAAIADQAJAAEADgAJAAIADwALAAEA
EAALAAIAEQANAAEAEgANAAIAFAAPAAEAFQAPAAIAFgARAAEAFwARAAIAGAATAAEAGQATAAIAGgAV
AAEAGwAVAAIAHAAXAAEAHQAXAAIAHgAZAAEAHwAZAAIAIQAbAAEAIgAbAAIAIwAdAAEAJAAdAAoA
UAAfAAoAUgAhAAwAWgAfAAwAXAAhAA0AXgAfAA0AYAAhAA4AYgAfAA4AZAAhAC8AcADUAOgAFgFq
AXABjAHrARECFwIEgAAAAQAAAOQiTaQAAAAAAABIAAAABAAAAAAAAAAAAAAAOAKCAQAAAAAQAAAA
AAAAAAAAAABBAjkHAAAAAAQAAAAAAAAAAAAAAEoC0AgAAAAABAAAAAAAAAAAAAAAOAJ2AQAAAAAE
AAAAAAAAAAAAAAA4AvoHAAAAAAQAAAAAAAAAAAAAADgChwoAAAAADQAAAAAAAAAAAAAAUwKwCAAA
AAAEAAAAAAAAAAAAAAA4AgAEAAAAAAAAAAABAAAAuwkAAAUAAgAGAAIABwACAAgAAgAJAAIACgAC
AAsAAgAMAAIADQACAA4ACQA3AGEAPQCEADcAlwA3ALcAUQACAVEALQFzAHYBdwCHAXsArQF9AK0B
UQAdAlEAMQIAAAAAADw+Y19fRGlzcGxheUNsYXNzMF8wADw+OV9fMl8wADxGZXRjaENvdW50cmll
c0Zyb21BcGk+Yl9fMl8wADxNYWluPmJfXzAAU1RfYTY5YzJjYjdlOWQzNGZkMzlkMTA0YzU2OTNj
MGNkMjEAPEZldGNoQW5kU3RvcmVDb3VudHJpZXM+ZF9fMQA8PnVfXzEARnVuY2AxAElFbnVtZXJh
YmxlYDEAVGFza2AxAEFzeW5jVGFza01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAExpc3Rg
MQA8Y29ubmVjdGlvbj41X18yADxodHRwQ2xpZW50PjVfXzIAPEZldGNoQ291bnRyaWVzRnJvbUFw
aT5kX18yADw+dV9fMgBGdW5jYDIAPD43X193cmFwMgA8SW5zZXJ0Q291bnRyaWVzSW50b0RhdGFi
YXNlPmRfXzMAPGNvbW1hbmQ+NV9fNAA8PjkAPE1vZHVsZT4AdmFsdWVfXwBTeXN0ZW0uRGF0YQBt
c2NvcmxpYgA8PmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAR2V0U3RyaW5nQXN5bmMARXhl
Y3V0ZU5vblF1ZXJ5QXN5bmMAPDxNYWluPmJfXzA+ZABBZGQAQXdhaXRVbnNhZmVPbkNvbXBsZXRl
ZABnZXRfSXNDb21wbGV0ZWQAPGNvZGU+a19fQmFja2luZ0ZpZWxkADxuYW1lPmtfX0JhY2tpbmdG
aWVsZAA8cmVzcG9uc2U+a19fQmFja2luZ0ZpZWxkADxmbGFnPmtfX0JhY2tpbmdGaWVsZAA8cGFn
aW5nPmtfX0JhY2tpbmdGaWVsZAA8dG90YWw+a19fQmFja2luZ0ZpZWxkADxwYXJhbWV0ZXJzPmtf
X0JhY2tpbmdGaWVsZAA8ZXJyb3JzPmtfX0JhY2tpbmdGaWVsZAA8cmVzdWx0cz5rX19CYWNraW5n
RmllbGQAPGdldD5rX19CYWNraW5nRmllbGQAPGN1cnJlbnQ+a19fQmFja2luZ0ZpZWxkAERiQ29t
bWFuZABTcWxDb21tYW5kAENvdW50cnlNZXRob2QAZGVmYXVsdEluc3RhbmNlAGdldF9jb2RlAHNl
dF9jb2RlAGdldF9NZXNzYWdlAEVudW1lcmFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X25hbWUAc2V0X25hbWUASUFzeW5jU3RhdGVNYWNoaW5l
AFNldFN0YXRlTWFjaGluZQBzdGF0ZU1hY2hpbmUAVmFsdWVUeXBlAFNlY3VyaXR5UHJvdG9jb2xU
eXBlAFdoZXJlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBJbnNlcnRDb3VudHJpZXNJbnRvRGF0YWJhc2UAQXBpUmVzcG9uc2UAZ2V0X3Jlc3Bv
bnNlAHNldF9yZXNwb25zZQBEaXNwb3NlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQA8PjFf
X3N0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3luY1N0YXRlTWFjaGluZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBv
aW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBBZGRXaXRoVmFsdWUAdmFsdWUAZ2V0X2ZsYWcAc2V0X2ZsYWcAUGFnaW5nAGdl
dF9wYWdpbmcAc2V0X3BhZ2luZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAGNvbm5lY3Rpb25T
dHJpbmcARmV0Y2hDb3VudHJpZXNGcm9tQXBpAGdldF9UYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAGdldF90
b3RhbABzZXRfdG90YWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNU
X2E2OWMyY2I3ZTlkMzRmZDM5ZDEwNGM1NjkzYzBjZDIxLmRsbABzZXRfU2VjdXJpdHlQcm90b2Nv
bABTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3FsUGFyYW1ldGVy
Q29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBTZXRFeGNlcHRpb24AU3lzdGVt
LkRhdGEuQ29tbW9uAE5ld3RvbnNvZnQuSnNvbgBSdW4AQ3VsdHVyZUluZm8AU3lzdGVtLk5ldC5I
dHRwAFN5c3RlbS5MaW5xAEFzeW5jVGFza01ldGhvZEJ1aWxkZXIAPD50X19idWlsZGVyAGdldF9S
ZXNvdXJjZU1hbmFnZXIAU2VydmljZVBvaW50TWFuYWdlcgBTcWxQYXJhbWV0ZXIAVGFza0F3YWl0
ZXIAR2V0QXdhaXRlcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3Rp
Y3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2E2
OWMyY2I3ZTlkMzRmZDM5ZDEwNGM1NjkzYzBjZDIxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBGZXRjaEFuZFN0b3JlQ291bnRyaWVzAGNvdW50cmllcwBTVF9h
NjljMmNiN2U5ZDM0ZmQzOWQxMDRjNTY5M2MwY2QyMS5Qcm9wZXJ0aWVzAFNldHRpbmdzADw+NF9f
dGhpcwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzAFN5c3RlbS5XaW5kb3dzLkZvcm1zAFN5c3RlbS5O
ZXQuSHR0cC5IZWFkZXJzAEh0dHBIZWFkZXJzAEh0dHBSZXF1ZXN0SGVhZGVycwBnZXRfRGVmYXVs
dFJlcXVlc3RIZWFkZXJzAGdldF9QYXJhbWV0ZXJzAGdldF9wYXJhbWV0ZXJzAHNldF9wYXJhbWV0
ZXJzAGdldF9lcnJvcnMAc2V0X2Vycm9ycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBn
ZXRfcmVzdWx0cwBzZXRfcmVzdWx0cwBDb25jYXQARGVzZXJpYWxpemVPYmplY3QAU3lzdGVtLk5l
dABnZXRfZ2V0AHNldF9nZXQAV2FpdABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tS
ZXN1bHQAR2V0UmVzdWx0AFNldFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQASHR0cENsaWVu
dABnZXRfQ3VycmVudABnZXRfY3VycmVudABzZXRfY3VycmVudABnZXRfQ291bnQAU3RhcnQASnNv
bkNvbnZlcnQAVG9MaXN0AE1vdmVOZXh0AFNob3cATWVzc2FnZUJveABnZXRfQXNzZW1ibHkAY291
bnRyeQBJc051bGxPckVtcHR5AAAAgKNEAGEAdABhACAAUwBvAHUAcgBjAGUAPQBEAEUAUwBLAFQA
TwBQAC0AUQBSADYAUAAzAFQANQA7AEkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnAD0ARgBv
AG8AdABiAGEAbABsAEEAcABpADsASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQA
eQA9AFMAUwBQAEkAOwABcVMAVABfAGEANgA5AGMAMgBjAGIANwBlADkAZAAzADQAZgBkADMAOQBk
ADEAMAA0AGMANQA2ADkAMwBjADAAYwBkADIAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAf0YAYQBpAGwAZQBkACAAdABvACAAZgBlAHQAYwBoACAAYwBvAHUAbgB0
AHIAaQBlAHMALgAgAFQAaABlACAAYwBvAHUAbgB0AHIAaQBlAHMAIABsAGkAcwB0ACAAaQBzACAA
bgB1AGwAbAAgAG8AcgAgAGUAbQBwAHQAeQAuAABXaAB0AHQAcABzADoALwAvAHYAMwAuAGYAbwBv
AHQAYgBhAGwAbAAuAGEAcABpAC0AcwBwAG8AcgB0AHMALgBpAG8ALwBjAG8AdQBuAHQAcgBpAGUA
cwABQTMAYgAyADMAZQBhADIANQAwADEAOAAxADQAMAAyAGEAMQBiAGUAYgAxAGQANwA4AGIAZAAw
AGMAZQAwADYANAAAHVgALQBSAGEAcABpAGQAQQBQAEkALQBLAGUAeQABW0UAeABjAGUAcAB0AGkA
bwBuACAAbwBjAGMAdQByAHIAZQBkACAAdwBoAGkAbABlACAAZgBlAHQAYwBoAGkAbgBnACAAYwBv
AHUAbgB0AHIAaQBlAHMAOgAgAACA4w0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
AEkATgBTAEUAUgBUACAASQBOAFQATwAgAHMAdABnAC4AQwBvAHUAbgB0AHIAeQAgACgAQwBvAHUA
bgB0AHIAeQAsACAAQwBvAGQAZQAsACAARgBsAGEAZwApACAADQAKACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAVgBBAEwAVQBFAFMAIAAoAEAAQwBvAHUAbgB0AHIAeQAsACAAQABDAG8A
ZABlACwAIABAAEYAbABhAGcAKQAAEUAAQwBvAHUAbgB0AHIAeQAAC0AAQwBvAGQAZQAAC0AARgBs
AGEAZwAAACNLy+ikuNxOhCztmjd6iCQABCABAQgDIAABBSABARERBCABAQ4FIAEBEkEFIAEBEmEG
IAEBEYCdBgABARGArQcVEoCxARI9BSACARwYCwABEj0VEoCxARI9BSAAEoC1BAcBESgEAAARbQcw
AQEBEB4ABAoBESgEIAASPQQHAREwChURfQEVEk0BEhQIAAAVEX0BEwAECgERMAggABUSSQETAAQH
ARE0BAoBETQHAAESQRGAuQUgABKAvQcgAgEOEoC9BAcBETgECgEROBcHBQgVEk0BEhQVEXUBFRJN
ARIUEWUSaQoVEkkBFRJNARIUCCAAFRF1ARMAChURdQEVEk0BEhQDIAACCjACAgEQHgAQHgEOCgIV
EXUBFRJNARIUESgEIAATAAYVEk0BEhQDIAAIBgABEYDFDgQgABFlBgoCEWURKAUgAQESaQQAAQIO
FQcICBUSTQESFA4ODhURdQEOEmkSaQUgABKAzQUgAgEODgggARUSSQEODgUVEkkBDgUVEXUBDgkK
AhURdQEOETAGEAEBHgAOBAoBEhgHFRJ5AhIUAhgQAQIVEoDdAR4AFRKA3QEeABUSeQIeAAIECgES
FBAQAQEVEk0BHgAVEoDdAR4AAyAADgUAAg4ODgUgAQETAA0HBQgSFA4VEXUBCBJpCSAAFRGAiQET
AAcVEYCJARIUByACAQ4SgIUFIAASgOkHIAISgO0OHAcgABUSSQEIBRUSSQEIBRURdQEICQoCFRF1
AQgRNAkHBAgSJBFlEmkGCgIRZRE4CLd6XFYZNOCJCImEXc2AgMyRCLA/X38R1Qo6CDCtT+aypq7t
BAAAAAAEAQAAAAQGEoCVBAYSgJkDBhIQAgYOBgYVEk0BDgIGCAMGEhwHBhUSTQESFAMGESADBhFt
CwYVEXUBFRJNARIUAwYRZQMGEiwIBhUSeQISFAILBhURfQEVEk0BEhQEBhKAgQYGFRF1AQ4EBhKA
hQgGFRGAiQESFAQGEoCNBgYVEXUBCAMGEiQFAAESPQ4MAAAVEkkBFRJNARIUCwACEj0OFRJNARIU
BQAAEoCVBQAAEoCZBgABARKAmQQAABIQAwAAAQcgABUSTQEOCCABARUSTQEOBCAAEhwFIAEBEhwI
IAAVEk0BEhQJIAEBFRJNARIUBSABAhIUBQgAEoCVBQgAEoCZBAgAEhADKAAOBygAFRJNAQ4DKAAI
BCgAEhwIKAAVEk0BEhQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEA
AgAAAAAAKAEAI1NUX2E2OWMyY2I3ZTlkMzRmZDM5ZDEwNGM1NjkzYzBjZDIxAAAFAQAAAAAWAQAR
Q29weXJpZ2h0IEAgIDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJh
bWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43LAEAJ1NjcmlwdE1haW4rPEZldGNo
QW5kU3RvcmVDb3VudHJpZXM+ZF9fMQAAKwEAJlNjcmlwdE1haW4rPEZldGNoQ291bnRyaWVzRnJv
bUFwaT5kX18yAAAxAQAsU2NyaXB0TWFpbis8SW5zZXJ0Q291bnRyaWVzSW50b0RhdGFiYXNlPmRf
XzMAADIBAC1TY3JpcHRNYWluKzw+Y19fRGlzcGxheUNsYXNzMF8wKzw8TWFpbj5iX18wPmQAAAAA
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAAExMAAAAAAAAAAAAAGZMAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYTAAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoEAAAA
AAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQBNpOQiAAABAE2k5CI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAa
AAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAA
AAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGEANgA5
AGMAMgBjAGIANwBlADkAZAAzADQAZgBkADMAOQBkADEAMAA0AGMANQA2ADkAMwBjADAAYwBkADIA
MQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADkAMwAyAC4ANAAy
ADAANgAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGEANgA5AGMA
MgBjAGIANwBlADkAZAAzADQAZgBkADMAOQBkADEAMAA0AGMANQA2ADkAMwBjADAAYwBkADIAMQAu
AGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkA
ZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBr
AHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8A
YQA2ADkAYwAyAGMAYgA3AGUAOQBkADMANABmAGQAMwA5AGQAMQAwADQAYwA1ADYAOQAzAGMAMABj
AGQAMgAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGEA
NgA5AGMAMgBjAGIANwBlADkAZAAzADQAZgBkADMAOQBkADEAMAA0AGMANQA2ADkAMwBjADAAYwBk
ADIAMQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA5ADMA
MgAuADQAMgAwADYAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOAA5ADMAMgAuADQAMgAwADYAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAB4PAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load Country -- Seasons -- Leagues\Get Leagues Data"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{3891cb11-e736-4652-8c6d-b33ea3f7541d}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Leagues Data"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_8a1812e367f248078601f14ada389c9f"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="packages.config"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="System.IO" version="4.3.0" targetFramework="net472" />
</packages>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Task = System.Threading.Tasks.Task;

[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
public class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
{
    public void Main()
    {
        // Set TLS 1.2 before making any requests
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
        // Replace with your actual SQL Server connection string
        string connectionString = "Data Source=DESKTOP-QR6P3T5;Initial Catalog=FootballApi;Integrated Security=SSPI;";
        Task.Run(async () => await FetchAndStoreLeagues(connectionString)).Wait();

        Dts.TaskResult = (int)ScriptResults.Success;
    }

    private static async Task FetchAndStoreLeagues(string connectionString)
    {
        var leagues = await FetchLeaguesFromApi();

        if (leagues == null || leagues.Count == 0)
        {
            MessageBox.Show("Failed to fetch leagues. The leagues list is null or empty.");
            return;
        }

        await InsertLeaguesIntoDatabase(connectionString, leagues);
    }

    private static async Task<List<LeagueResponse>> FetchLeaguesFromApi()
    {
        string apiUrl = "https://v3.football.api-sports.io/leagues";
        string apiKey = "3b23ea250181402a1beb1d78bd0ce064";

        try
        {
            using (var httpClient = new HttpClient())
            {
                httpClient.DefaultRequestHeaders.Add("X-RapidAPI-Key", apiKey);
                var response = await httpClient.GetStringAsync(apiUrl);

                if (string.IsNullOrEmpty(response))
                {
                    MessageBox.Show("API response is empty.");
                    return null;
                }

                // Log the response for debugging
                MessageBox.Show($"API Response: {response}");

                var apiResponse = JsonConvert.DeserializeObject<ApiLeaguesResponse>(response);

                // Log the deserialized response for debugging
                MessageBox.Show($"Deserialized Response: {JsonConvert.SerializeObject(apiResponse)}");

                return apiResponse.response;
            }
        }
        catch (Exception ex)
        {
            MessageBox.Show($"Exception occurred while fetching leagues: {ex.Message}");
            return null;
        }
    }

    private static async Task InsertLeaguesIntoDatabase(string connectionString, List<LeagueResponse> leagues)
    {
        using (var connection = new SqlConnection(connectionString))
        {
            try
            {
                connection.Open();
                foreach (var league in leagues)
                {
                    foreach (var season in league.seasons)
                    {
                        var query = @"
                    INSERT INTO stg.Leagues (
                        LeagueId, LeagueName, LeagueType, LeagueLogo, 
                        CountryName, CountryCode, CountryFlag, 
                        SeasonYear, SeasonStart, SeasonEnd, [Current], 
                        FixturesEvents, FixturesLineups, FixturesStatisticsFixtures, 
                        FixturesStatisticsPlayers, Standings, Players, 
                        TopScorers, TopAssists, TopCards, Injuries, 
                        Predictions, Odds) 
                    VALUES (
                        @LeagueId, @LeagueName, @LeagueType, @LeagueLogo, 
                        @CountryName, @CountryCode, @CountryFlag, 
                        @SeasonYear, @SeasonStart, @SeasonEnd, @Current, 
                        @FixturesEvents, @FixturesLineups, @FixturesStatisticsFixtures, 
                        @FixturesStatisticsPlayers, @Standings, @Players, 
                        @TopScorers, @TopAssists, @TopCards, @Injuries, 
                        @Predictions, @Odds)";

                        using (var command = new SqlCommand(query, connection))
                        {
                            command.Parameters.AddWithValue("@LeagueId", league.league.id);
                            command.Parameters.AddWithValue("@LeagueName", league.league.name);
                            command.Parameters.AddWithValue("@LeagueType", league.league.type);
                            command.Parameters.AddWithValue("@LeagueLogo", league.league.logo);
                            command.Parameters.AddWithValue("@CountryName", league.country.name ?? (object)DBNull.Value);
                            command.Parameters.AddWithValue("@CountryCode", league.country.code ?? (object)DBNull.Value);
                            command.Parameters.AddWithValue("@CountryFlag", league.country.flag ?? (object)DBNull.Value);
                            command.Parameters.AddWithValue("@SeasonYear", season.year);
                            command.Parameters.AddWithValue("@SeasonStart", season.start);
                            command.Parameters.AddWithValue("@SeasonEnd", season.end);
                            command.Parameters.AddWithValue("@Current", season.current);
                            command.Parameters.AddWithValue("@FixturesEvents", season.coverage.fixtures.events);
                            command.Parameters.AddWithValue("@FixturesLineups", season.coverage.fixtures.lineups);
                            command.Parameters.AddWithValue("@FixturesStatisticsFixtures", season.coverage.fixtures.statistics_fixtures);
                            command.Parameters.AddWithValue("@FixturesStatisticsPlayers", season.coverage.fixtures.statistics_players);
                            command.Parameters.AddWithValue("@Standings", season.coverage.standings);
                            command.Parameters.AddWithValue("@Players", season.coverage.players);
                            command.Parameters.AddWithValue("@TopScorers", season.coverage.top_scorers);
                            command.Parameters.AddWithValue("@TopAssists", season.coverage.top_assists);
                            command.Parameters.AddWithValue("@TopCards", season.coverage.top_cards);
                            command.Parameters.AddWithValue("@Injuries", season.coverage.injuries);
                            command.Parameters.AddWithValue("@Predictions", season.coverage.predictions);
                            command.Parameters.AddWithValue("@Odds", season.coverage.odds);

                            await command.ExecuteNonQueryAsync();
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Exception occurred while inserting leagues into the database: {ex.Message}");
            }
        }
    }

    public class ApiLeaguesResponse
    {
        public string get { get; set; }
        public List<string> parameters { get; set; }
        public List<string> errors { get; set; }
        public int results { get; set; }
        public Paging paging { get; set; }
        public List<LeagueResponse> response { get; set; }
    }

    public class Paging
    {
        public int current { get; set; }
        public int total { get; set; }
    }

    public class LeagueResponse
    {
        public League league { get; set; }
        public Country country { get; set; }
        public List<Season> seasons { get; set; }
    }

    public class League
    {
        public int id { get; set; }
        public string name { get; set; }
        public string type { get; set; }
        public string logo { get; set; }
    }

    public class Country
    {
        public string name { get; set; }
        public string code { get; set; }
        public string flag { get; set; }
    }

    public class Season
    {
        public int year { get; set; }
        public string start { get; set; }
        public string end { get; set; }
        public bool current { get; set; }
        public Coverage coverage { get; set; }
    }

    public class Coverage
    {
        public Fixtures fixtures { get; set; }
        public bool standings { get; set; }
        public bool players { get; set; }
        public bool top_scorers { get; set; }
        public bool top_assists { get; set; }
        public bool top_cards { get; set; }
        public bool injuries { get; set; }
        public bool predictions { get; set; }
        public bool odds { get; set; }
    }

    public class Fixtures
    {
        public bool events { get; set; }
        public bool lineups { get; set; }
        public bool statistics_fixtures { get; set; }
        public bool statistics_players { get; set; }
    }

    public enum ScriptResults
    {
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_8a1812e367f248078601f14ada389c9f.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8BC188A0-43C0-4DAA-96D9-A56F73E8D0AF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a69c2cb7e9d34fd39d104c5693c0cd21</RootNamespace>
    <AssemblyName>ST_8a1812e367f248078601f14ada389c9f</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.1.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\ETL Packages\FootballData\DLL Re\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.SqlClient, Version=4.6.1.6, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\SMART TECH\AppData\Local\Temp\Vsta\SSIS_ST160\VstapLt3XQRKIkm3ZmqMJ74XOw\packages\System.Data.SqlClient.4.8.6\lib\net461\System.Data.SqlClient.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_8a1812e367f248078601f14ada389c9f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_8a1812e367f248078601f14ada389c9f</msb:DisplayName>
    <msb:ProjectId>{6CC013FC-DE09-4636-9055-1EE23D79A258}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_8a1812e367f248078601f14ada389c9f.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Settings.get_Default():ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Sett" +
    "ings")]

namespace ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a69c2cb7e9d34fd39d104c5693c0cd21")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a69c2cb7e9d34fd39d104c5693c0cd21")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_8a1812e367f248078601f14ada389c9f.dll">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
fAoGAAMGfAoGANMFYQwGAO4LYQwGAB0LfAoGAJULYQwGAOgHIAwGAGoAYQwGAFEAYQwOAEkQcwsS
AAwLMxBPAAgMAAASACUFMxAGADgHIAwGAL0LgQwGAFULwQoWAP0GIgoWAGkHIgoWAIAGrAoWAM0L
1w8WAA0G1w8GAEMAfAoKABAK0wkGAJ0FfAoGAMUQ1goaALYQ4w0aAAMQ4w0OAGwOSA4OAGAOSA4G
AJAJfAoeAJwQOgsGAJEFfAoSAP8KJwsSAOgKMxAGAH8AfAoSAOELMxAGAGAKfAoGAJQKfAoSABsF
JwsAAAAAGQEAAAAAAQABAAEAEAChCgAAOQABAAEAAAAQAIgM/gxRAAEABgAAARAAuQ3+DKEAAwAK
AAIAEADBBgAAUQAEAA0AAgAQAE8JAABRAAoAGgACABAAsgYAAFEADAAfAAIAEADpCAAAUQAPACYA
AgAQAM4QAABRABMALwACABAASgsAAFEAFgA2AAIAEABiBQAAUQAbAEEAAgAQAC0NAABRACQAVAAC
AQAAUg8AAFkAKABdAAMBEAABAAAAUQArAF0AAwEQACEAAABdACwAXwADARAApwAAAF0AMQBhAAMB
EADTAAAAXQA1AGMAAwEQAH4BAABdAD8AZQARAIgKTAIRAFQGUQIRAEAFVgIBAL0EWgIBAP4DXQIB
AFcEXQIBAG8EZAIBAJICZwIBAEoCawIBANIEZAIBAKoCZAIBAGQCcwIBAAIFdwIBAK8DewIBAMUB
ZAIBAB4CWgIBADQCWgIBAMECWgIBAB4CWgIBAO4BWgIBAHwCWgIBANcCZAIBAOsEWgIBANkBWgIB
ANIEgwIBAAQChgIBADgDigIBAHcDgwIBABoEgwIBAOEDgwIBAKAEgwIBAAMDgwIBAB4DgwIBAJID
gwIBAO0CgwIBAIgEgwIBAMgDgwIBAFIDgwIBADMEgwIGBiIBZAJWgEIPjgJWgDQGjgIGAIYJWgIG
ABIHZAIGAKwLkgIGAIYJWgIBADwAlgIBAMEAogIGABIHZAIGAKwLpgIBAJYAsgIBADwAtgIGABIH
ZAIGAKwLkgIGAIYJWgIGAJUNawIBAIUAvQIBAMgAwgIBAPMAywIBAAABzwIBAAsB2AIBADwA3QIG
ABIHZAIGAKwLkgIGAMIN5AIBADwAogJQIAAAAACGAKcKBgABAJAgAAAAAJEAgA3oAgEA1CAAAAAA
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
2QD2BlQA2QCCEFkA2QCrCWYAFAD2BnsAFACCEFkAFACrCYkAcQATDAYAoQATDAYAgQCvBZwAgQDB
EKQAIQETDKoAQQETDAYAHAD6C98AJACnAfMA2QCQAfcAJAAfEBEBLAB4EB0BeQGxECEBeQD6CygB
yQCnAfMAyQAfEAYA2QAaCzQB2QApEAYA2QDmBRsA+QATDAYA+QB/DlIBkQGMAVgB+QBaAV4BNAD6
C98APACnAfMAFACQAfcAPAAfEBEBmQHuEH0BmQGuD4IBoQHFD4gBoQG1D5QBqQHuBgYA0QCFBZkB
FAAaCzQBFAApEJ0BFADmBRsAAQETDBAAsQGcCgYALAAFDLMBRABUEBEBTAAFDLMBVABUEBEBEQET
DNQBEQG5DtwBuQEGCeIB0QENCeoB4QFpAe8BXAD6C98AZACnAfMAZAAfEBEBVACoEPMARACoEPMA
CACkAEICCACoAEcCKQCbAA4ELgALAOYDLgATAO8DLgAbAA4ELgAjABcELgArAEAELgAzAEAELgA7
AEAELgBDABcELgBLAEYELgBTAEAELgBbAF0EQABrAKcEQwBjAEcCSQCbAA4EYABrANIEYQBzAEcC
YwCTAEcCgABrAPwEgQBzAEcCoQBzAEcCwQBzAEcC4QBzAEcCAQFzAEcCIQFzAEcCQQFzAEcCYQFz
AEcCgQFzAEcCoAFzAEcCoQFzAEcCwAFzAEcCwQFzAEcCwwFzAEcC4AFzAEcC4QFzAEcC4wFzAEcC
AAJzAEcCAQJzAEcCAwJzAEcCIAJzAEcCIQJzAEcCIwJzAEcCQAJzAEcCQQJzAEcCYAJzAEcCYQJz
AEcCgAJzAEcCgQJzAEcCoAJzAEcCoQJzAEcCwAJzAEcCwQJzAEcC4AJzAEcC4QJzAEcCAANzAEcC
AQNzAEcCIQNzAEcCQANzAEcCQQNzAEcCYANzAEcCYQNzAEcCgANzAEcCgQNzAEcCoANzAEcCoQNz
AEcCwQNzAEcC4ANzAEcC4QNzAEcCAARzAEcCAQRzAEcCIARzAEcCIQRzAEcCQARzAEcCQQRzAEcC
YARzAEcCYQRzAEcCgARzAEcCgQRzAEcCoQRzAEcCwARzAEcCwQRzAEcC4ARzAEcC4QRzAEcCAAVz
AEcCIAVzAEcCQAVzAEcCYAVzAEcCgAVzAEcCoAVzAEcC4AVzAEcCAAZzAEcCIAZzAEcCQAZzAEcC
YAZzAEcCgAZzAEcCwAZzAEcC4AZzAEcCAAdzAEcCIAdzAEcCQAdzAEcCYAdzAEcCgAdzAEcCoAdz
AEcCwAdzAEcC4AdzAEcCIAhzAEcCQAhzAEcCYAhzAEcCgAhzAEcCoAhzAEcCwAhzAEcC4AhzAEcC
AAlzAEcCIAlzAEcCQAlzAEcCYAlzAEcCgAlzAEcCoAlzAEcCwAlzAEcC4AlzAEcCAApzAEcCIApz
AEcCQApzAEcCgApzAEcCoApzAEcCwApzAEcC4ApzAEcCAAtzAEcCIAtzAEcCQAtzAEcCYAtzAEcC
wAtrACwFAAyLAEcCQAyLAEcCgAyLAEcCwAyLAEcCTwBrAJIAsgC8ADoBowENAgMAAQAEAAMABQAE
AAYACgAHAAwACAAPAAkAEwAKABYACwAbAAwAJAAAAL0LlgMAAFwGnAMAAPsPogMAAO4PpwMAANsO
qwMAADsPqwMAAHAPswMAAGUJtwMAAOUGvAMAAHAQswMAAAoKswMAAP8IxQMAAOYQygMAACgOzwMA
AMIBswMAAM4FpwMAAC8GpwMAAG4LpwMAAM4FpwMAAF0FpwMAAEoJpwMAAJALswMAAJYQpwMAADwF
pwMAAHAQ2AMAAHwF3AMAAHcN4QMAAK8N2AMAACQP2AMAAK0O2AMAAKIP2AMAAFcM2AMAAPUM2AMA
AAwO2AMAAEAM2AMAAIcP2AMAAEAO2AMAAFIN2AMAAAEP2AMCAAcAAwACAAgABQABAAkABQACAAoA
BwACAA0ACQABAA4ACQACAA8ACwABABAACwACABEADQABABIADQACABMADwABABQADwACABUAEQAB
ABYAEQACABcAEwABABgAEwACABoAFQABABsAFQACABwAFwABAB0AFwACAB8AGQABACAAGQACACEA
GwABACIAGwACACMAHQABACQAHQACACYAHwABACcAHwACACgAIQABACkAIQACACoAIwABACsAIwAC
ACwAJQABAC0AJQACAC8AJwABADAAJwACADEAKQABADIAKQACADMAKwABADQAKwACADYALQABADcA
LQACADgALwABADkALwACADoAMQABADsAMQACADwAMwABAD0AMwACAD4ANQABAD8ANQACAEEANwAB
AEIANwACAEMAOQABAEQAOQACAEUAOwABAEYAOwACAEcAPQABAEgAPQACAEkAPwABAEoAPwACAEsA
QQABAEwAQQACAE0AQwABAE4AQwACAE8ARQABAFAARQACAFEARwABAFIARwACAFQASQABAFUASQAC
AFYASwABAFcASwACAFgATQABAFkATQACAFoATwABAFsATwAPAL4AHwAPAMAAIQAQAMIAHwAQAMQA
IQARAMYAHwARAMgAIQASAMoAHwASAMwAIQAvAHAA1ADoABYBZwFtAb0BxQHMAfcB/QEEgAAAAQAA
AOcikVUAAAAAAAAZCQAABAAAAAAAAAAAAAAAHgI2AQAAAAAQAAAAAAAAAAAAAAAnArQJAAAAAAQA
AAAAAAAAAAAAADACcwsAAAAABAAAAAAAAAAAAAAAHgIqAQAAAAAEAAAAAAAAAAAAAAAeAnwKAAAA
AAQAAAAAAAAAAAAAAB4C4w0AAAAADQAAAAAAAAAAAAAAOQI6CwAAAAAAAAAAAQAAAJIMAAAFAAIA
BgACAAcAAgAIAAIACQACAAoAAgALAAIADAACAA0AAgAOAAIADwACABAAAgARAAIAEgAOADcAYQA9
AIQANwCXADcAtwBRAAIBUQAtAXEAcwF5AI8BUQADAlEAFwIAAAA8PmNfX0Rpc3BsYXlDbGFzczBf
MAA8TWFpbj5iX18wADxGZXRjaEFuZFN0b3JlTGVhZ3Vlcz5kX18xADw+dV9fMQBGdW5jYDEAVGFz
a2AxAEFzeW5jVGFza01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAExpc3RgMQBJbnQzMgA8
Y29ubmVjdGlvbj41X18yADxodHRwQ2xpZW50PjVfXzIAPEZldGNoTGVhZ3Vlc0Zyb21BcGk+ZF9f
MgA8PnVfXzIAPD43X193cmFwMgA8SW5zZXJ0TGVhZ3Vlc0ludG9EYXRhYmFzZT5kX18zADxsZWFn
dWU+NV9fNAA8PjdfX3dyYXA0ADxjb21tYW5kPjVfXzYAPE1vZHVsZT4AdmFsdWVfXwBTeXN0ZW0u
RGF0YQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBHZXRTdHJpbmdBc3luYwBF
eGVjdXRlTm9uUXVlcnlBc3luYwA8PE1haW4+Yl9fMD5kAEFkZABBd2FpdFVuc2FmZU9uQ29tcGxl
dGVkAGdldF9Jc0NvbXBsZXRlZABnZXRfaWQAc2V0X2lkADxpZD5rX19CYWNraW5nRmllbGQAPGVu
ZD5rX19CYWNraW5nRmllbGQAPGNvZGU+a19fQmFja2luZ0ZpZWxkADxjb3ZlcmFnZT5rX19CYWNr
aW5nRmllbGQAPG5hbWU+a19fQmFja2luZ0ZpZWxkADx0eXBlPmtfX0JhY2tpbmdGaWVsZAA8cmVz
cG9uc2U+a19fQmFja2luZ0ZpZWxkADxsZWFndWU+a19fQmFja2luZ0ZpZWxkADxmbGFnPmtfX0Jh
Y2tpbmdGaWVsZAA8cGFnaW5nPmtfX0JhY2tpbmdGaWVsZAA8dG90YWw+a19fQmFja2luZ0ZpZWxk
ADxsb2dvPmtfX0JhY2tpbmdGaWVsZAA8eWVhcj5rX19CYWNraW5nRmllbGQAPG9kZHM+a19fQmFj
a2luZ0ZpZWxkADx0b3BfY2FyZHM+a19fQmFja2luZ0ZpZWxkADxpbmp1cmllcz5rX19CYWNraW5n
RmllbGQAPGZpeHR1cmVzPmtfX0JhY2tpbmdGaWVsZAA8c3RhdGlzdGljc19maXh0dXJlcz5rX19C
YWNraW5nRmllbGQAPHN0YW5kaW5ncz5rX19CYWNraW5nRmllbGQAPHByZWRpY3Rpb25zPmtfX0Jh
Y2tpbmdGaWVsZAA8c2Vhc29ucz5rX19CYWNraW5nRmllbGQAPGxpbmV1cHM+a19fQmFja2luZ0Zp
ZWxkADx0b3Bfc2NvcmVycz5rX19CYWNraW5nRmllbGQAPHBhcmFtZXRlcnM+a19fQmFja2luZ0Zp
ZWxkADxwbGF5ZXJzPmtfX0JhY2tpbmdGaWVsZAA8c3RhdGlzdGljc19wbGF5ZXJzPmtfX0JhY2tp
bmdGaWVsZAA8ZXJyb3JzPmtfX0JhY2tpbmdGaWVsZAA8cmVzdWx0cz5rX19CYWNraW5nRmllbGQA
PGV2ZW50cz5rX19CYWNraW5nRmllbGQAPHRvcF9hc3Npc3RzPmtfX0JhY2tpbmdGaWVsZAA8Z2V0
PmtfX0JhY2tpbmdGaWVsZAA8Y3VycmVudD5rX19CYWNraW5nRmllbGQAPHN0YXJ0PmtfX0JhY2tp
bmdGaWVsZAA8Y291bnRyeT5rX19CYWNraW5nRmllbGQARGJDb21tYW5kAFNxbENvbW1hbmQAZ2V0
X2VuZABzZXRfZW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRfY29kZQBzZXRfY29kZQBDb3ZlcmFnZQBn
ZXRfY292ZXJhZ2UAc2V0X2NvdmVyYWdlAGdldF9NZXNzYWdlAElEaXNwb3NhYmxlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9uYW1lAHNldF9uYW1lAElBc3luY1N0YXRl
TWFjaGluZQBTZXRTdGF0ZU1hY2hpbmUAc3RhdGVNYWNoaW5lAFZhbHVlVHlwZQBTZWN1cml0eVBy
b3RvY29sVHlwZQBnZXRfdHlwZQBzZXRfdHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UASW5zZXJ0TGVhZ3Vlc0ludG9EYXRhYmFzZQBMZWFndWVSZXNwb25zZQBB
cGlMZWFndWVzUmVzcG9uc2UAZ2V0X3Jlc3BvbnNlAHNldF9yZXNwb25zZQBEaXNwb3NlAENyZWF0
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQA8PjFfX3N0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3luY1N0YXRlTWFj
aGluZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBMZWFndWUAZ2V0X2xlYWd1ZQBz
ZXRfbGVhZ3VlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBTVF84YTE4MTJlMzY3ZjI0ODA3ODYwMWYxNGFk
YTM4OWM5ZgBnZXRfZmxhZwBzZXRfZmxhZwBQYWdpbmcAZ2V0X3BhZ2luZwBzZXRfcGFnaW5nAFN5
c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAY29ubmVjdGlvblN0cmluZwBGZXRjaExlYWd1ZXNGcm9t
QXBpAGdldF9UYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAGdldF90b3RhbABzZXRfdG90YWwAU2NyaXB0T2Jq
ZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzhhMTgxMmUzNjdmMjQ4MDc4NjAxZjE0
YWRhMzg5YzlmLmRsbABEQk51bGwAc2V0X1NlY3VyaXR5UHJvdG9jb2wAU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AQm9vbGVhbgBPcGVuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lz
dGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlv
bgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBTZXRFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29t
bW9uAE5ld3RvbnNvZnQuSnNvbgBTZWFzb24AUnVuAEN1bHR1cmVJbmZvAGdldF9sb2dvAHNldF9s
b2dvAFN5c3RlbS5OZXQuSHR0cABnZXRfeWVhcgBzZXRfeWVhcgBBc3luY1Rhc2tNZXRob2RCdWls
ZGVyADw+dF9fYnVpbGRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFNlcnZpY2VQb2ludE1hbmFnZXIA
U3FsUGFyYW1ldGVyAFRhc2tBd2FpdGVyAEdldEF3YWl0ZXIAR2V0RW51bWVyYXRvcgAuY3RvcgAu
Y2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAGdldF9vZGRzAHNldF9vZGRzAGdldF90b3BfY2FyZHMA
c2V0X3RvcF9jYXJkcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfYTY5YzJjYjdlOWQzNGZkMzlkMTA0YzU2OTNjMGNkMjEuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9pbmp1cmllcwBzZXRfaW5qdXJpZXMA
U1RfYTY5YzJjYjdlOWQzNGZkMzlkMTA0YzU2OTNjMGNkMjEuUHJvcGVydGllcwBGaXh0dXJlcwBn
ZXRfc3RhdGlzdGljc19maXh0dXJlcwBzZXRfc3RhdGlzdGljc19maXh0dXJlcwBnZXRfZml4dHVy
ZXMAc2V0X2ZpeHR1cmVzAEZldGNoQW5kU3RvcmVMZWFndWVzAGxlYWd1ZXMAZ2V0X3N0YW5kaW5n
cwBzZXRfc3RhbmRpbmdzAFNldHRpbmdzADw+NF9fdGhpcwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tz
AFN5c3RlbS5XaW5kb3dzLkZvcm1zAGdldF9wcmVkaWN0aW9ucwBzZXRfcHJlZGljdGlvbnMAZ2V0
X3NlYXNvbnMAc2V0X3NlYXNvbnMAZ2V0X2xpbmV1cHMAc2V0X2xpbmV1cHMAU3lzdGVtLk5ldC5I
dHRwLkhlYWRlcnMASHR0cEhlYWRlcnMASHR0cFJlcXVlc3RIZWFkZXJzAGdldF9EZWZhdWx0UmVx
dWVzdEhlYWRlcnMAZ2V0X3RvcF9zY29yZXJzAHNldF90b3Bfc2NvcmVycwBnZXRfUGFyYW1ldGVy
cwBnZXRfcGFyYW1ldGVycwBzZXRfcGFyYW1ldGVycwBnZXRfc3RhdGlzdGljc19wbGF5ZXJzAHNl
dF9zdGF0aXN0aWNzX3BsYXllcnMAZ2V0X3BsYXllcnMAc2V0X3BsYXllcnMAZ2V0X2Vycm9ycwBz
ZXRfZXJyb3JzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9yZXN1bHRzAHNldF9y
ZXN1bHRzAGdldF9ldmVudHMAc2V0X2V2ZW50cwBnZXRfdG9wX2Fzc2lzdHMAc2V0X3RvcF9hc3Np
c3RzAENvbmNhdABTZXJpYWxpemVPYmplY3QARGVzZXJpYWxpemVPYmplY3QAU3lzdGVtLk5ldABn
ZXRfZ2V0AHNldF9nZXQAV2FpdABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1
bHQAR2V0UmVzdWx0AFNldFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQASHR0cENsaWVudABn
ZXRfQ3VycmVudABnZXRfY3VycmVudABzZXRfY3VycmVudABnZXRfQ291bnQAU3RhcnQAZ2V0X3N0
YXJ0AHNldF9zdGFydABKc29uQ29udmVydABNb3ZlTmV4dABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fz
c2VtYmx5AENvdW50cnkAZ2V0X2NvdW50cnkAc2V0X2NvdW50cnkASXNOdWxsT3JFbXB0eQAAgKNE
AGEAdABhACAAUwBvAHUAcgBjAGUAPQBEAEUAUwBLAFQATwBQAC0AUQBSADYAUAAzAFQANQA7AEkA
bgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnAD0ARgBvAG8AdABiAGEAbABsAEEAcABpADsASQBu
AHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQAeQA9AFMAUwBQAEkAOwABcVMAVABfAGEA
NgA5AGMAMgBjAGIANwBlADkAZAAzADQAZgBkADMAOQBkADEAMAA0AGMANQA2ADkAMwBjADAAYwBk
ADIAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAd0YAYQBpAGwA
ZQBkACAAdABvACAAZgBlAHQAYwBoACAAbABlAGEAZwB1AGUAcwAuACAAVABoAGUAIABsAGUAYQBn
AHUAZQBzACAAbABpAHMAdAAgAGkAcwAgAG4AdQBsAGwAIABvAHIAIABlAG0AcAB0AHkALgAAU2gA
dAB0AHAAcwA6AC8ALwB2ADMALgBmAG8AbwB0AGIAYQBsAGwALgBhAHAAaQAtAHMAcABvAHIAdABz
AC4AaQBvAC8AbABlAGEAZwB1AGUAcwABQTMAYgAyADMAZQBhADIANQAwADEAOAAxADQAMAAyAGEA
MQBiAGUAYgAxAGQANwA4AGIAZAAwAGMAZQAwADYANAAAHVgALQBSAGEAcABpAGQAQQBQAEkALQBL
AGUAeQABLUEAUABJACAAcgBlAHMAcABvAG4AcwBlACAAaQBzACAAZQBtAHAAdAB5AC4AAB1BAFAA
SQAgAFIAZQBzAHAAbwBuAHMAZQA6ACAAAC9EAGUAcwBlAHIAaQBhAGwAaQB6AGUAZAAgAFIAZQBz
AHAAbwBuAHMAZQA6ACAAAFdFAHgAYwBlAHAAdABpAG8AbgAgAG8AYwBjAHUAcgByAGUAZAAgAHcA
aABpAGwAZQAgAGYAZQB0AGMAaABpAG4AZwAgAGwAZQBhAGcAdQBlAHMAOgAgAACIVw0ACgAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAASQBOAFMARQBSAFQAIABJAE4AVABP
ACAAcwB0AGcALgBMAGUAYQBnAHUAZQBzACAAKAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAATABlAGEAZwB1AGUASQBkACwAIABMAGUAYQBnAHUAZQBO
AGEAbQBlACwAIABMAGUAYQBnAHUAZQBUAHkAcABlACwAIABMAGUAYQBnAHUAZQBMAG8AZwBvACwA
IAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQwBv
AHUAbgB0AHIAeQBOAGEAbQBlACwAIABDAG8AdQBuAHQAcgB5AEMAbwBkAGUALAAgAEMAbwB1AG4A
dAByAHkARgBsAGEAZwAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAFMAZQBhAHMAbwBuAFkAZQBhAHIALAAgAFMAZQBhAHMAbwBuAFMAdABhAHIA
dAAsACAAUwBlAGEAcwBvAG4ARQBuAGQALAAgAFsAQwB1AHIAcgBlAG4AdABdACwAIAANAAoAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBpAHgAdAB1AHIA
ZQBzAEUAdgBlAG4AdABzACwAIABGAGkAeAB0AHUAcgBlAHMATABpAG4AZQB1AHAAcwAsACAARgBp
AHgAdAB1AHIAZQBzAFMAdABhAHQAaQBzAHQAaQBjAHMARgBpAHgAdAB1AHIAZQBzACwAIAANAAoA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBpAHgAdAB1
AHIAZQBzAFMAdABhAHQAaQBzAHQAaQBjAHMAUABsAGEAeQBlAHIAcwAsACAAUwB0AGEAbgBkAGkA
bgBnAHMALAAgAFAAbABhAHkAZQByAHMALAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIABUAG8AcABTAGMAbwByAGUAcgBzACwAIABUAG8AcABBAHMA
cwBpAHMAdABzACwAIABUAG8AcABDAGEAcgBkAHMALAAgAEkAbgBqAHUAcgBpAGUAcwAsACAADQAK
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFAAcgBlAGQA
aQBjAHQAaQBvAG4AcwAsACAATwBkAGQAcwApACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIABWAEEATABVAEUAUwAgACgADQAKACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAATABlAGEAZwB1AGUASQBkACwAIABAAEwAZQBh
AGcAdQBlAE4AYQBtAGUALAAgAEAATABlAGEAZwB1AGUAVAB5AHAAZQAsACAAQABMAGUAYQBnAHUA
ZQBMAG8AZwBvACwAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAQABDAG8AdQBuAHQAcgB5AE4AYQBtAGUALAAgAEAAQwBvAHUAbgB0AHIAeQBDAG8A
ZABlACwAIABAAEMAbwB1AG4AdAByAHkARgBsAGEAZwAsACAADQAKACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAUwBlAGEAcwBvAG4AWQBlAGEAcgAsACAA
QABTAGUAYQBzAG8AbgBTAHQAYQByAHQALAAgAEAAUwBlAGEAcwBvAG4ARQBuAGQALAAgAEAAQwB1
AHIAcgBlAG4AdAAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgAEAARgBpAHgAdAB1AHIAZQBzAEUAdgBlAG4AdABzACwAIABAAEYAaQB4AHQAdQBy
AGUAcwBMAGkAbgBlAHUAcABzACwAIABAAEYAaQB4AHQAdQByAGUAcwBTAHQAYQB0AGkAcwB0AGkA
YwBzAEYAaQB4AHQAdQByAGUAcwAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgAEAARgBpAHgAdAB1AHIAZQBzAFMAdABhAHQAaQBzAHQAaQBjAHMA
UABsAGEAeQBlAHIAcwAsACAAQABTAHQAYQBuAGQAaQBuAGcAcwAsACAAQABQAGwAYQB5AGUAcgBz
ACwAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
QABUAG8AcABTAGMAbwByAGUAcgBzACwAIABAAFQAbwBwAEEAcwBzAGkAcwB0AHMALAAgAEAAVABv
AHAAQwBhAHIAZABzACwAIABAAEkAbgBqAHUAcgBpAGUAcwAsACAADQAKACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAUAByAGUAZABpAGMAdABpAG8AbgBz
ACwAIABAAE8AZABkAHMAKQAAE0AATABlAGEAZwB1AGUASQBkAAAXQABMAGUAYQBnAHUAZQBOAGEA
bQBlAAAXQABMAGUAYQBnAHUAZQBUAHkAcABlAAAXQABMAGUAYQBnAHUAZQBMAG8AZwBvAAAZQABD
AG8AdQBuAHQAcgB5AE4AYQBtAGUAABlAAEMAbwB1AG4AdAByAHkAQwBvAGQAZQAAGUAAQwBvAHUA
bgB0AHIAeQBGAGwAYQBnAAAXQABTAGUAYQBzAG8AbgBZAGUAYQByAAAZQABTAGUAYQBzAG8AbgBT
AHQAYQByAHQAABVAAFMAZQBhAHMAbwBuAEUAbgBkAAARQABDAHUAcgByAGUAbgB0AAAfQABGAGkA
eAB0AHUAcgBlAHMARQB2AGUAbgB0AHMAACFAAEYAaQB4AHQAdQByAGUAcwBMAGkAbgBlAHUAcABz
AAA3QABGAGkAeAB0AHUAcgBlAHMAUwB0AGEAdABpAHMAdABpAGMAcwBGAGkAeAB0AHUAcgBlAHMA
ADVAAEYAaQB4AHQAdQByAGUAcwBTAHQAYQB0AGkAcwB0AGkAYwBzAFAAbABhAHkAZQByAHMAABVA
AFMAdABhAG4AZABpAG4AZwBzAAARQABQAGwAYQB5AGUAcgBzAAAXQABUAG8AcABTAGMAbwByAGUA
cgBzAAAXQABUAG8AcABBAHMAcwBpAHMAdABzAAATQABUAG8AcABDAGEAcgBkAHMAABNAAEkAbgBq
AHUAcgBpAGUAcwAAGUAAUAByAGUAZABpAGMAdABpAG8AbgBzAAALQABPAGQAZABzAAB9RQB4AGMA
ZQBwAHQAaQBvAG4AIABvAGMAYwB1AHIAcgBlAGQAIAB3AGgAaQBsAGUAIABpAG4AcwBlAHIAdABp
AG4AZwAgAGwAZQBhAGcAdQBlAHMAIABpAG4AdABvACAAdABoAGUAIABkAGEAdABhAGIAYQBzAGUA
OgAgAAAAAABZElEZDGbwQ7CT+8ChAw71AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARJBBSABARJh
BiABARGAmQYAAQERgKkHFRKArQESPQUgAgEcGAsAARI9FRKArQESPQUgABKAsQQHARE8BAAAEW0H
MAEBARAeAAQKARE8BCAAEj0EBwERQAoVEXkBFRJNARIcCAAAFRF5ARMABAoBEUAIIAAVEkkBEwAE
BwERRAQKARFEBwABEkERgLUFIAASgLkHIAIBDhKAuQQHARFIBAoBEUgXBwUIFRJNARIcFRF1ARUS
TQESHBFlEmkKFRJJARUSTQESHAggABURdQETAAoVEXUBFRJNARIcAyAAAgowAgIBEB4AEB4BDgoC
FRF1ARUSTQESHBE8BCAAEwAGFRJNARIcAyAACAYAARGAwQ4EIAARZQYKAhFlETwFIAEBEmkXBwkI
FRJNARIcDg4OEhQVEXUBDhJpEmkFIAASgMUFIAIBDg4IIAEVEkkBDg4FFRJJAQ4FFRF1AQ4JCgIV
EXUBDhFABAABAg4FAAIODg4GEAEBHgAOBAoBEhQEAAEOHAMgAA4FIAEBEwAPBwYIEigOFRF1AQgS
aRJpCSAAFRGAhQETAAcVEYCFARIcBhUSTQESKAcVEYCFARIoByACAQ4SgIEFIAASgN0HIAISgOUO
HAQGEoDpByAAFRJJAQgFFRJJAQgFFRF1AQgJCgIVEXUBCBFECQcECBI4EWUSaQYKAhFlEUgIt3pc
Vhk04IkIiYRdzYCAzJEIsD9ffxHVCjoIMK1P5rKmru0EAAAAAAQBAAAABAYSgJEEBhKAlQMGEhAC
Bg4GBhUSTQEOAgYIAwYSGAcGFRJNARIcAwYSIAMGEiQHBhUSTQESKAIGAgMGEiwDBhIwAwYRNAMG
EW0LBhURdQEVEk0BEhwDBhFlCwYVEXkBFRJNARIcAwYSfQYGFRF1AQ4EBhKAgQgGFRGAhQESHAMG
EhwIBhURgIUBEigEBhKAiQYGFRF1AQgDBhI4BQABEj0ODAAAFRJJARUSTQESHAsAAhI9DhUSTQES
HAUAABKAkQUAABKAlQYAAQESgJUEAAASEAMAAAEHIAAVEk0BDgggAQEVEk0BDgQgABIYBSABARIY
CCAAFRJNARIcCSABARUSTQESHAQgABIgBSABARIgBCAAEiQFIAEBEiQIIAAVEk0BEigJIAEBFRJN
ARIoBCABAQIEIAASLAUgAQESLAQgABIwBSABARIwBQgAEoCRBQgAEoCVBAgAEhADKAAOBygAFRJN
AQ4DKAAIBCgAEhgIKAAVEk0BEhwEKAASIAQoABIkCCgAFRJNARIoAygAAgQoABIsBCgAEjAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2E2OWMy
Y2I3ZTlkMzRmZDM5ZDEwNGM1NjkzYzBjZDIxAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjQA
AEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUS
Lk5FVCBGcmFtZXdvcmsgNC43KgEAJVNjcmlwdE1haW4rPEZldGNoQW5kU3RvcmVMZWFndWVzPmRf
XzEAACkBACRTY3JpcHRNYWluKzxGZXRjaExlYWd1ZXNGcm9tQXBpPmRfXzIAAC8BACpTY3JpcHRN
YWluKzxJbnNlcnRMZWFndWVzSW50b0RhdGFiYXNlPmRfXzMAADIBAC1TY3JpcHRNYWluKzw+Y19f
RGlzcGxheUNsYXNzMF8wKzw8TWFpbj5iX18wPmQAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA7GgAAAAAAAAAAAAA
BmkAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPhoAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA
AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAAAaBAAAAAAAAAAAAAAaBDQAAABW
AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAkVXnIgAAAQCRVeci
PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA
AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcA
RgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBl
AG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYA
aQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBhADYAOQBjADIAYwBiADcAZQA5
AGQAMwA0AGYAZAAzADkAZAAxADAANABjADUANgA5ADMAYwAwAGMAZAAyADEAAAA+AA8AAQBGAGkA
bABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA5ADMANQAuADIAMQA5ADAANQAAAAAAcAAo
AAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA4AGEAMQA4ADEAMgBlADMANgA3AGYA
MgA0ADgAMAA3ADgANgAwADEAZgAxADQAYQBkAGEAMwA4ADkAYwA5AGYALgBkAGwAbAAAAEgAEgAB
AEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAA
MgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAo
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADgAYQAxADgAMQAyAGUA
MwA2ADcAZgAyADQAOAAwADcAOAA2ADAAMQBmADEANABhAGQAYQAzADgAOQBjADkAZgAuAGQAbABs
AAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBhADYAOQBjADIAYwBiADcA
ZQA5AGQAMwA0AGYAZAAzADkAZAAxADAANABjADUANgA5ADMAYwAwAGMAZAAyADEAAABCAA8AAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOQAzADUALgAyADEAOQAwADUA
AAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOQAz
ADUALgAyADEAOQAwADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgAAAMAAAAGDkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load Country -- Seasons -- Leagues\Get Seasons Data"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{6386d6d8-f34d-4c01-b131-0d628f05c3e1}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Seasons Data"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_d039709470494ae89412f8b16b940336"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="packages.config"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="System.IO" version="4.3.0" targetFramework="net472" />
</packages>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Settings.get_Default():ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Sett" +
    "ings")]

namespace ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Task = System.Threading.Tasks.Task;

[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
public class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
{
    public void Main()
    {
        // Set TLS 1.2 before making any requests
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

        // Replace with your actual SQL Server connection string
        string connectionString = "Data Source=DESKTOP-QR6P3T5;Initial Catalog=FootballApi;Integrated Security=SSPI;";
        Task.Run(async () => await FetchAndStoreSeasons(connectionString)).Wait();

        Dts.TaskResult = (int)ScriptResults.Success;
    }

    private static async Task FetchAndStoreSeasons(string connectionString)
    {
        var seasons = await FetchSeasonsFromApi();

        if (seasons == null || seasons.Count == 0)
        {
            MessageBox.Show("Failed to fetch seasons. The seasons list is null or empty.");
            return;
        }

        await InsertSeasonsIntoDatabase(connectionString, seasons);
    }

    private static async Task<List<int>> FetchSeasonsFromApi()
    {
        string apiUrl = "https://v3.football.api-sports.io/leagues/seasons";
        string apiKey = "3b23ea250181402a1beb1d78bd0ce064";

        try
        {
            using (var httpClient = new HttpClient())
            {
                httpClient.DefaultRequestHeaders.Add("X-RapidAPI-Key", apiKey);
                var response = await httpClient.GetStringAsync(apiUrl);

                if (string.IsNullOrEmpty(response))
                {
                    MessageBox.Show("API response is empty.");
                    return null;
                }

                // Log the response for debugging
                MessageBox.Show($"API Response: {response}");

                var apiResponse = JsonConvert.DeserializeObject<ApiSeasonsResponse>(response);

                // Log the deserialized response for debugging
                MessageBox.Show($"Deserialized Response: {JsonConvert.SerializeObject(apiResponse)}");

                return apiResponse.response;
            }
        }
        catch (Exception ex)
        {
            MessageBox.Show($"Exception occurred while fetching seasons: {ex.Message}");
            return null;
        }
    }

    private static async Task InsertSeasonsIntoDatabase(string connectionString, List<int> seasons)
    {
        using (var connection = new SqlConnection(connectionString))
        {
            try
            {
                connection.Open();
                foreach (var season in seasons)
                {
                    var query = @"
                    INSERT INTO stg.Seasons (Seasons) 
                    VALUES (@Season)";

                    using (var command = new SqlCommand(query, connection))
                    {
                        command.Parameters.AddWithValue("@Season", season);
                        await command.ExecuteNonQueryAsync();
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Exception occurred while inserting seasons into the database: {ex.Message}");
            }
        }
    }

    public class ApiSeasonsResponse
    {
        public string get { get; set; }
        public List<string> parameters { get; set; }
        public List<string> errors { get; set; }
        public int results { get; set; }
        public Paging paging { get; set; }
        public List<int> response { get; set; }
    }

    public class Paging
    {
        public int current { get; set; }
        public int total { get; set; }
    }

    public enum ScriptResults
    {
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_d039709470494ae89412f8b16b940336.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8BC188A0-43C0-4DAA-96D9-A56F73E8D0AF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a69c2cb7e9d34fd39d104c5693c0cd21</RootNamespace>
    <AssemblyName>ST_d039709470494ae89412f8b16b940336</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.1.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\ETL Packages\FootballData\DLL Re\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.SqlClient, Version=4.6.1.6, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\SMART TECH\AppData\Local\Temp\Vsta\SSIS_ST160\VstapLt3XQRKIkm3ZmqMJ74XOw\packages\System.Data.SqlClient.4.8.6\lib\net461\System.Data.SqlClient.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_d039709470494ae89412f8b16b940336</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_d039709470494ae89412f8b16b940336</msb:DisplayName>
    <msb:ProjectId>{F7BAAA9A-203F-4B23-92E0-1D39CFD836AA}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_d039709470494ae89412f8b16b940336.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a69c2cb7e9d34fd39d104c5693c0cd21")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a69c2cb7e9d34fd39d104c5693c0cd21")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_d039709470494ae89412f8b16b940336.dll">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
AAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAACALAAAjfgAAjAsAAIwLAAAjU3RyaW5ncwAAAAAY
FwAAeAQAACNVUwCQGwAAEAAAACNHVUlEAAAAoBsAAKwEAAAjQmxvYgAAAAAAAAACAAABVx+iCwkL
AAAA+gEzABYAAAEAAAA6AAAADAAAACQAAAAoAAAAEAAAAAQAAABOAAAAAgAAADQAAAAIAAAABAAA
AAsAAAAUAAAACAAAAAoAAAABAAAABwAAAAEAAAAIAAAACgAAAAAA2QYBAAAAAAAGADAFmggGAL8F
mggGAEkEhwgPAA4JAAAGAHYEaAcGABMFaAcGAPQEaAcGAKYFaAcGAFAFaAcGAGkFaAcGAKgEaAcG
AMMEDQYKAIQFdAYKAGcDdAYGAJgGXwkGADIDFgcGAI0EmggGAEoAXwkGAHgASwEGAJQKFgcGABEE
mggGAB0HFgcGABgDFgcGAOgCmggGAFUImggGAK8HFgcGAPwHmggGANwEhwgGAGoAmggGAFEAmggO
AA0L7AcSAJ4H9wpPAG8IAAASAJEC9woGACwEhwgGACQIuggGAOAHUwcWAPEDwwYWAF0EwwYWAIMD
PgcWADQImwoWACIDmwoGAEMAFgcKALEGdAYGAMQCFgcGAHULaAcaAGYLdgkaAMcKdgkOAMwJqAkO
AMAJqAkGADEGFgceAEwLzAcGALgCFgcSAJEHuQcSAHoH9woGAH8AFgcSAEgI9woSAIcCuQcAAAAA
JQEAAAAAAQABAAEAEAAzBwAAOQABAAEAAAAQAMEIHQlRAAEABgAAARAATAkdCaEAAwAKAAIAEAC1
AwAAUQAEAA0AAgAQAPAFAABRAAoAGgACAQAATAoAAFkADAAfAAMBEAABAAAAUQAPAB8AAwEQACEA
AABdABAAIQADARAApwAAAF0AFQAjAAMBEADTAAAAXQAZACUAAwEQAIoBAABdACEAJwARACIHLgIR
AFcDMwIRAJwCOAIBAFkCPAIBAAwCPwIBACgCPwIBAEACRgIBAN0BSQIBAMMBTQIBAG4CRgIBAPUB
RgIGBi4BRgJWgDwKVAJWgDcDVAIGACcGPAIGAAYERgIGABMIWAIGACcGPAIBADwAXAIBAMEAZwIG
AAYERgIGABMIawIBAJYAdgIBADwAegIGAAYERgIGABMIWAIGACcGPAIGAKAJTQIBAIUAgQIBAMgA
hgIBAPMAjgIBADwAkwIGAAYERgIGABMIWAIGAFUJmgIBADwAZwJQIAAAAACGADkHBgABAJAgAAAA
AJEAiwmeAgEA1CAAAAAAkQA4BqQCAgAQIQAAAACRAJsDsAICAFshAAAAAIYYeggGAAQAYyEAAAAA
gxh6CAYABABrIQAAAACTCCAIuwIEAJchAAAAAJMIPwPBAgQAniEAAAAAkwhLA8cCBACmIQAAAACW
CLsKzgIFAK0hAAAAAIYYeggGAAUAtSEAAAAAkRiACNMCBQDBIQAAAACGCKYKkQEFAMkhAAAAAIYI
rgoQAAUA0iEAAAAAhggICtcCBgDaIQAAAACGCBcK3wIGAOMhAAAAAIYIJgrXAgcA6yEAAAAAhggx
Ct8CBwD0IQAAAACGCFoKFgEIAPwhAAAAAIYIZgoBAAgABSIAAAAAhgj3BegCCQANIgAAAACGCAIG
7QIJABYiAAAAAIYIyAPzAgoAHiIAAAAAhgjVA/sCCgBjIQAAAACGGHoIBgALACciAAAAAIYIJAsW
AQsALyIAAAAAhggwCwEACwA4IgAAAACGCJ0GFgEMAEAiAAAAAIYIpwYBAAwAYyEAAAAAhhh6CAYA
DQBjIQAAAACGGHoIBgANAEwiAAAAAIMAFgBmAA0AkCIAAAAA4QFYCwYADQDAIwAAAADhAfsCGwAN
ANAjAAAAAOEBWAsGAA4AiCUAAAAA4QH7AhsADgCYJQAAAADhAVgLBgAPANAnAAAAAOEB+wIbAA8A
4CcAAAAA4QFYCwYAEACYKAAAAADhAfsCGwAQAAAAAQAnBgAAAQAnBgAAAgCgCQAAAQDqBQAAAQDq
BQAAAQDqBQAAAQDqBQAAAQDqBQAAAQDqBQAAAQDqBQAAAQDqBQAAAQDqBQAAAQALAwAAAQALAwAA
AQALAwAAAQALAwkAYQAKAGEACwBhAAwAYQAJAHoIAQARAHoIBgAZAHoICgApAHoIEAAxAHoIEAA5
AHoIEABBAHoIEABJAHoIEABRAHoIEABZAHoIEABhAHoIEABpAHoIBgCJAHoIFQCpAHoIBgDBAFgL
BgDBAPsCGwDhAHoIBgAZAXoIBgA5AXoIIQBJAQEHKAAMAHoINwB5ANwHPQB5ALYKBgBxAEQKSQBh
AdQKAQDZAOoDVADZAEYLWQDZAEwGZgAUAOoDegAUAEYLWQAUAEwGiABxAHoIBgChAHoIBgCBANYC
mwCBAHELowAhAXoIqQBBAXoIBgAcAGEI2wAkALMB7gDZAJwB8gAkAOMKCwEsADwLFgF5AWELGgF5
AGEIIQHJALMB7gDJAOMKBgDZAKwHLQHZAO0KBgDZAPsCGwD5AHoIBgD5AN8JSgGRAZgBUAH5AGYB
VgE0AGEI2wA8ALMB7gAUAJwB8gA8AOMKCwGZAX4LdQGZAXIKegGhAYkKgAGhAXkKjAGpAeIDBgDR
AKwCkQEUAKwHLQEUAO0KlQEUAPsCGwABAXoIEACxAS4HBgAsAGwIqgFEABgLCwERAXoIuwERAfkJ
wwG5Ad0FyQHRAXUB0QFMAGEI2wBUALMB7gBUAOMKCwFEAFgL7gAIADQAJAIIADgAKQIpAJsAWgMu
AAsAMgMuABMAOwMuABsAWgMuACMAYwMuACsAjAMuADMAjAMuADsAjAMuAEMAYwMuAEsAkgMuAFMA
jAMuAFsAqQNAAGsA8wNDAGMAKQJJAJsAWgNgAGsAHgRhAHMAKQJjAJMAKQKAAGsASASBAHMAKQKh
AHMAKQLBAHMAKQLhAHMAKQIBAXMAKQIDAXMAKQIhAXMAKQIjAXMAKQJBAXMAKQJDAXMAKQJhAXMA
KQJjAXMAKQKgAXMAKQLAAXMAKQLgAXMAKQIAAnMAKQIgAnMAKQJAAnMAKQJgAnMAKQKAAnMAKQKg
AnMAKQLAAnMAKQLgAnMAKQIAA3MAKQJAA3MAKQJgA3MAKQKAA3MAKQKgA3MAKQIABGsAeARABIsA
KQKABIsAKQLABIsAKQIABYsAKQJPAGsAkQCxALsAMwGbAe8BAwABAAQAAwAFAAQABgAKAAAAJAgE
AwAAXwMKAwAAvwoQAwAAsgoVAwAAGwoZAwAANQoZAwAAagohAwAABgYlAwAA2QMqAwAANAshAwAA
qwYhAwIABwADAAIACAAFAAEACQAFAAIACgAHAAIADQAJAAEADgAJAAIADwALAAEAEAALAAIAEQAN
AAEAEgANAAIAEwAPAAEAFAAPAAIAFQARAAEAFgARAAIAFwATAAEAGAATAAIAGgAVAAEAGwAVAAIA
HAAXAAEAHQAXAAkAQgAfAAkARAAhAAoARgAfAAoASAAhAAsASgAfAAsATAAhAAwATgAfAAwAUAAh
AC8AcADRAOQAEAFfAWUBtAHZAd8BBIAAAAEAAADbIv6jAAAAAAAAAQEAAAQAAAAAAAAAAAAAAAAC
QgEAAAAAEAAAAAAAAAAAAAAACQJVBgAAAAAEAAAAAAAAAAAAAAASAuwHAAAAAAQAAAAAAAAAAAAA
AAACNgEAAAAABAAAAAAAAAAAAAAAAAIWBwAAAAAEAAAAAAAAAAAAAAAAAnYJAAAAAA0AAAAAAAAA
AAAAABsCzAcAAAAAAAAAAAEAAADLCAAABQACAAYAAgAHAAIACAACAAkAAgAKAAIACwACAAwACAA3
AGEAPQCDADcAlgA3ALYAUQD9AFEAJgFxAGsBeQCHAVEA5QFRAPkBAAAAPD5jX19EaXNwbGF5Q2xh
c3MwXzAAPE1haW4+Yl9fMAA8RmV0Y2hBbmRTdG9yZVNlYXNvbnM+ZF9fMQA8PnVfXzEARnVuY2Ax
AFRhc2tgMQBBc3luY1Rhc2tNZXRob2RCdWlsZGVyYDEAVGFza0F3YWl0ZXJgMQBMaXN0YDEASW50
MzIAPGNvbm5lY3Rpb24+NV9fMgA8aHR0cENsaWVudD41X18yADxGZXRjaFNlYXNvbnNGcm9tQXBp
PmRfXzIAPD51X18yADw+N19fd3JhcDIAPEluc2VydFNlYXNvbnNJbnRvRGF0YWJhc2U+ZF9fMwA8
Y29tbWFuZD41X180AFNUX2QwMzk3MDk0NzA0OTRhZTg5NDEyZjhiMTZiOTQwMzM2ADxNb2R1bGU+
AHZhbHVlX18AU3lzdGVtLkRhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMA
R2V0U3RyaW5nQXN5bmMARXhlY3V0ZU5vblF1ZXJ5QXN5bmMAPDxNYWluPmJfXzA+ZABBZGQAQXdh
aXRVbnNhZmVPbkNvbXBsZXRlZABnZXRfSXNDb21wbGV0ZWQAPHJlc3BvbnNlPmtfX0JhY2tpbmdG
aWVsZAA8cGFnaW5nPmtfX0JhY2tpbmdGaWVsZAA8dG90YWw+a19fQmFja2luZ0ZpZWxkADxwYXJh
bWV0ZXJzPmtfX0JhY2tpbmdGaWVsZAA8ZXJyb3JzPmtfX0JhY2tpbmdGaWVsZAA8cmVzdWx0cz5r
X19CYWNraW5nRmllbGQAPGdldD5rX19CYWNraW5nRmllbGQAPGN1cnJlbnQ+a19fQmFja2luZ0Zp
ZWxkAERiQ29tbWFuZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBJRGlz
cG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJQXN5bmNTdGF0ZU1h
Y2hpbmUAU2V0U3RhdGVNYWNoaW5lAHN0YXRlTWFjaGluZQBWYWx1ZVR5cGUAU2VjdXJpdHlQcm90
b2NvbFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEluc2Vy
dFNlYXNvbnNJbnRvRGF0YWJhc2UAQXBpU2Vhc29uc1Jlc3BvbnNlAGdldF9yZXNwb25zZQBzZXRf
cmVzcG9uc2UARGlzcG9zZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAPD4xX19zdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXN5bmNTdGF0ZU1hY2hpbmVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAQWRkV2l0aFZhbHVlAHZhbHVlAFBhZ2luZwBnZXRfcGFnaW5nAHNldF9wYWdpbmcAU3lzdGVt
LlJ1bnRpbWUuVmVyc2lvbmluZwBjb25uZWN0aW9uU3RyaW5nAEZldGNoU2Vhc29uc0Zyb21BcGkA
Z2V0X1Rhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAZ2V0X3RvdGFsAHNldF90b3RhbABTY3JpcHRPYmplY3RN
b2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZDAzOTcwOTQ3MDQ5NGFlODk0MTJmOGIxNmI5
NDAzMzYuZGxsAHNldF9TZWN1cml0eVByb3RvY29sAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAE9w
ZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBT
eXN0ZW0uUmVmbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxD
b25uZWN0aW9uAFNldEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24ATmV3dG9uc29mdC5Kc29u
AFJ1bgBDdWx0dXJlSW5mbwBTeXN0ZW0uTmV0Lkh0dHAAQXN5bmNUYXNrTWV0aG9kQnVpbGRlcgA8
PnRfX2J1aWxkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAFNxbFBh
cmFtZXRlcgBUYXNrQXdhaXRlcgBHZXRBd2FpdGVyAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9y
AFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3Rl
bS5SZXNvdXJjZXMAU1RfYTY5YzJjYjdlOWQzNGZkMzlkMTA0YzU2OTNjMGNkMjEuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2E2OWMyY2I3ZTlkMzRmZDM5
ZDEwNGM1NjkzYzBjZDIxLlByb3BlcnRpZXMAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJl
YWRpbmcuVGFza3MAU3lzdGVtLldpbmRvd3MuRm9ybXMARmV0Y2hBbmRTdG9yZVNlYXNvbnMAc2Vh
c29ucwBTeXN0ZW0uTmV0Lkh0dHAuSGVhZGVycwBIdHRwSGVhZGVycwBIdHRwUmVxdWVzdEhlYWRl
cnMAZ2V0X0RlZmF1bHRSZXF1ZXN0SGVhZGVycwBnZXRfUGFyYW1ldGVycwBnZXRfcGFyYW1ldGVy
cwBzZXRfcGFyYW1ldGVycwBnZXRfZXJyb3JzAHNldF9lcnJvcnMAU3VjY2VzcwBnZXRfRHRzAFNj
cmlwdFJlc3VsdHMAZ2V0X3Jlc3VsdHMAc2V0X3Jlc3VsdHMAQ29uY2F0AFNlcmlhbGl6ZU9iamVj
dABEZXNlcmlhbGl6ZU9iamVjdABTeXN0ZW0uTmV0AGdldF9nZXQAc2V0X2dldABXYWl0AGdldF9E
ZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABHZXRSZXN1bHQAU2V0UmVzdWx0AFN5
c3RlbS5EYXRhLlNxbENsaWVudABIdHRwQ2xpZW50AGdldF9DdXJyZW50AGdldF9jdXJyZW50AHNl
dF9jdXJyZW50AGdldF9Db3VudABTdGFydABKc29uQ29udmVydABNb3ZlTmV4dABTaG93AE1lc3Nh
Z2VCb3gAZ2V0X0Fzc2VtYmx5AElzTnVsbE9yRW1wdHkAAICjRABhAHQAYQAgAFMAbwB1AHIAYwBl
AD0ARABFAFMASwBUAE8AUAAtAFEAUgA2AFAAMwBUADUAOwBJAG4AaQB0AGkAYQBsACAAQwBhAHQA
YQBsAG8AZwA9AEYAbwBvAHQAYgBhAGwAbABBAHAAaQA7AEkAbgB0AGUAZwByAGEAdABlAGQAIABT
AGUAYwB1AHIAaQB0AHkAPQBTAFMAUABJADsAAXFTAFQAXwBhADYAOQBjADIAYwBiADcAZQA5AGQA
MwA0AGYAZAAzADkAZAAxADAANABjADUANgA5ADMAYwAwAGMAZAAyADEALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAHdGAGEAaQBsAGUAZAAgAHQAbwAgAGYAZQB0AGMA
aAAgAHMAZQBhAHMAbwBuAHMALgAgAFQAaABlACAAcwBlAGEAcwBvAG4AcwAgAGwAaQBzAHQAIABp
AHMAIABuAHUAbABsACAAbwByACAAZQBtAHAAdAB5AC4AAGNoAHQAdABwAHMAOgAvAC8AdgAzAC4A
ZgBvAG8AdABiAGEAbABsAC4AYQBwAGkALQBzAHAAbwByAHQAcwAuAGkAbwAvAGwAZQBhAGcAdQBl
AHMALwBzAGUAYQBzAG8AbgBzAAFBMwBiADIAMwBlAGEAMgA1ADAAMQA4ADEANAAwADIAYQAxAGIA
ZQBiADEAZAA3ADgAYgBkADAAYwBlADAANgA0AAAdWAAtAFIAYQBwAGkAZABBAFAASQAtAEsAZQB5
AAEtQQBQAEkAIAByAGUAcwBwAG8AbgBzAGUAIABpAHMAIABlAG0AcAB0AHkALgAAHUEAUABJACAA
UgBlAHMAcABvAG4AcwBlADoAIAAAL0QAZQBzAGUAcgBpAGEAbABpAHoAZQBkACAAUgBlAHMAcABv
AG4AcwBlADoAIAAAV0UAeABjAGUAcAB0AGkAbwBuACAAbwBjAGMAdQByAHIAZQBkACAAdwBoAGkA
bABlACAAZgBlAHQAYwBoAGkAbgBnACAAcwBlAGEAcwBvAG4AcwA6ACAAAIC9DQAKACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAE4AUwBFAFIAVAAgAEkATgBUAE8AIABz
AHQAZwAuAFMAZQBhAHMAbwBuAHMAIAAoAFMAZQBhAHMAbwBuAHMAKQAgAA0ACgAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAVgBBAEwAVQBFAFMAIAAoAEAAUwBlAGEAcwBv
AG4AKQAAD0AAUwBlAGEAcwBvAG4AAH1FAHgAYwBlAHAAdABpAG8AbgAgAG8AYwBjAHUAcgByAGUA
ZAAgAHcAaABpAGwAZQAgAGkAbgBzAGUAcgB0AGkAbgBnACAAcwBlAGEAcwBvAG4AcwAgAGkAbgB0
AG8AIAB0AGgAZQAgAGQAYQB0AGEAYgBhAHMAZQA6ACAAAAAAAFsHufW++VdGoI6RcUAUGP4ABCAB
AQgDIAABBSABARERBCABAQ4FIAEBEkEFIAEBEmEGIAEBEYCZBgABARGAqQcVEoCtARI9BSACARwY
CwABEj0VEoCtARI9BSAAEoCxBAcBESQEAAARbQcwAQEBEB4ABAoBESQEIAASPQQHAREoCRUReQEV
Ek0BCAgAABUReQETAAQKAREoCCAAFRJJARMABAcBESwECgERLAcAARJBEYC1BSAAEoC5ByACAQ4S
gLkEBwERMAQKAREwFQcFCBUSTQEIFRF1ARUSTQEIEWUSaQkVEkkBFRJNAQgIIAAVEXUBEwAJFRF1
ARUSTQEIAyAAAgowAgIBEB4AEB4BDQoCFRF1ARUSTQEIESQEIAATAAUVEk0BCAMgAAgGAAERgMEO
BCAAEWUGCgIRZREkBSABARJpFgcJCBUSTQEIDg4OEhQVEXUBDhJpEmkFIAASgMUFIAIBDg4IIAEV
EkkBDg4FFRJJAQ4FFRF1AQ4JCgIVEXUBDhEoBAABAg4FAAIODg4GEAEBHgAOBAoBEhQEAAEOHAMg
AA4FIAEBEwAOBwYICA4VEXUBCBJpEmkJIAAVEYCFARMABhURgIUBCAcgAgEOEoCBBSAAEoDdByAC
EoDlDhwHIAAVEkkBCAUVEkkBCAUVEXUBCAkKAhURdQEIESwJBwQIEiARZRJpBgoCEWURMAi3elxW
GTTgiQiJhF3NgIDMkQiwP19/EdUKOggwrU/msqau7QQAAAAABAEAAAAEBhKAkQQGEoCVAwYSEAIG
DgYGFRJNAQ4CBggDBhIYBgYVEk0BCAMGERwDBhFtCgYVEXUBFRJNAQgDBhFlCgYVEXkBFRJNAQgD
BhJ9BgYVEXUBDgQGEoCBBwYVEYCFAQgEBhKAiQYGFRF1AQgDBhIgBQABEj0OCwAAFRJJARUSTQEI
CgACEj0OFRJNAQgFAAASgJEFAAASgJUGAAEBEoCVBAAAEhADAAABByAAFRJNAQ4IIAEBFRJNAQ4E
IAASGAUgAQESGAcgABUSTQEICCABARUSTQEIBQgAEoCRBQgAEoCVBAgAEhADKAAOBygAFRJNAQ4D
KAAIBCgAEhgHKAAVEk0BCAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU1RfYTY5YzJjYjdlOWQzNGZkMzlkMTA0YzU2OTNjMGNkMjEAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcqAQAlU2NyaXB0TWFpbis8RmV0
Y2hBbmRTdG9yZVNlYXNvbnM+ZF9fMQAAKQEAJFNjcmlwdE1haW4rPEZldGNoU2Vhc29uc0Zyb21B
cGk+ZF9fMgAALwEAKlNjcmlwdE1haW4rPEluc2VydFNlYXNvbnNJbnRvRGF0YWJhc2U+ZF9fMwAA
MgEALVNjcmlwdE1haW4rPD5jX19EaXNwbGF5Q2xhc3MwXzArPDxNYWluPmJfXzA+ZAAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAADUSQAAAAAAAAAAAADuSQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4EkAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAA
AAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEA/qPbIgAAAQD+o9siPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBhADYA
OQBjADIAYwBiADcAZQA5AGQAMwA0AGYAZAAzADkAZAAxADAANABjADUANgA5ADMAYwAwAGMAZAAy
ADEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA5ADIAMwAuADQA
MQA5ADgAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBkADAAMwA5
ADcAMAA5ADQANwAwADQAOQA0AGEAZQA4ADkANAAxADIAZgA4AGIAMQA2AGIAOQA0ADAAMwAzADYA
LgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIA
awBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABf
AGQAMAAzADkANwAwADkANAA3ADAANAA5ADQAYQBlADgAOQA0ADEAMgBmADgAYgAxADYAYgA5ADQA
MAAzADMANgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBh
ADYAOQBjADIAYwBiADcAZQA5AGQAMwA0AGYAZAAzADkAZAAxADAANABjADUANgA5ADMAYwAwAGMA
ZAAyADEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOQAy
ADMALgA0ADEAOQA4ADIAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADgAOQAyADMALgA0ADEAOQA4ADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAADoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load Country -- Seasons -- Leagues.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D07E8A3D-947F-417E-B1BA-B013E6357C9B}"
          DTS:From="Package\Load Country -- Seasons -- Leagues\Get Countries Data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Load Country -- Seasons -- Leagues\Get Seasons Data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load Country -- Seasons -- Leagues.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{E05B1A97-0153-4C50-9263-DCF1259BF7B6}"
          DTS:From="Package\Load Country -- Seasons -- Leagues\Get Seasons Data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Load Country -- Seasons -- Leagues\Get Leagues Data" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Teams Data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{4C695643-B19E-4286-A5D8-2B59C1F7F9FE}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Teams Data">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Load Teams Data\Get All Teams"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:Disabled="True"
          DTS:DTSID="{828F0BD6-05DB-4D66-9567-0428565EAD69}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get All Teams">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{2F3D2C9F-43F9-4CA4-99FB-6704F2884AC3}"
            DTS:ObjectName="{2F3D2C9F-43F9-4CA4-99FB-6704F2884AC3}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::CountryResult" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Load Teams Data\Get All Teams\Get Teams Data"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{cf5da3da-8ab4-4ef0-9a62-60e8cbd2fceb}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Teams Data"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_7c7f7446a79b4a29acc68230e64267e0"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::CountryResult">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_7c7f7446a79b4a29acc68230e64267e0.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8BC188A0-43C0-4DAA-96D9-A56F73E8D0AF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a69c2cb7e9d34fd39d104c5693c0cd21</RootNamespace>
    <AssemblyName>ST_7c7f7446a79b4a29acc68230e64267e0</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.1.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\ETL Packages\FootballData\DLL Re\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.SqlClient, Version=4.6.1.6, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\SMART TECH\AppData\Local\Temp\Vsta\SSIS_ST160\VstapLt3XQRKIkm3ZmqMJ74XOw\packages\System.Data.SqlClient.4.8.6\lib\net461\System.Data.SqlClient.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Settings.get_Default():ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Sett" +
    "ings")]

namespace ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Task = System.Threading.Tasks.Task;

[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
public class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
{
    public void Main()
    {
        // Set TLS 1.2 before making any requests
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
        string countryResult = Dts.Variables["CountryResult"].Value.ToString();
        // Replace with your actual SQL Server connection string
        string connectionString = "Data Source=DESKTOP-QR6P3T5;Initial Catalog=FootballApi;Integrated Security=SSPI;";
        Task.Run(async () => await FetchAndStoreTeams(connectionString, countryResult)).Wait();

        Dts.TaskResult = (int)ScriptResults.Success;
    }

    private static async Task FetchAndStoreTeams(string connectionString , string countryResult)
    {
        var teams = await FetchTeamsFromApi(countryResult);

        if (teams == null || teams.Count == 0)
        {
            MessageBox.Show("Failed to fetch teams. The teams list is null or empty.");
            return;
        }

        await InsertTeamsIntoDatabase(connectionString, teams);
    }

    private static async Task<List<TeamResponse>> FetchTeamsFromApi(string countryResult)
    {
        
        string apiUrl = "https://v3.football.api-sports.io/teams?country="+countryResult;
        string apiKey = "3b23ea250181402a1beb1d78bd0ce064";

        try
        {
            using (var httpClient = new HttpClient())
            {
                httpClient.DefaultRequestHeaders.Add("X-RapidAPI-Key", apiKey);
                var response = await httpClient.GetStringAsync(apiUrl);

                if (string.IsNullOrEmpty(response))
                {
                    MessageBox.Show("API response is empty.");
                    return null;
                }

                var apiResponse = JsonConvert.DeserializeObject<ApiTeamsResponse>(response);
                return apiResponse.response;
            }
        }
        catch (Exception ex)
        {
            MessageBox.Show($"Exception occurred while fetching teams: {ex.Message}");
            return null;
        }
    }

    private static async Task InsertTeamsIntoDatabase(string connectionString, List<TeamResponse> teams)
    {
        using (var connection = new SqlConnection(connectionString))
        {
            try
            {
                connection.Open();
                foreach (var teamResponse in teams)
                {
                    var query = @"
                    INSERT INTO stg.Teams (
                        TeamID, TeamName, TeamCode, Country, 
                        Founded, [National], TeamLogo, 
                        VenueID, VenueName, VenueAddress, 
                        VenueCity, VenueCapacity, VenueSurface, VenueImage
                    ) 
                    VALUES (
                        @TeamID, @TeamName, @TeamCode, @Country, 
                        @Founded, @National, @TeamLogo, 
                        @VenueID, @VenueName, @VenueAddress, 
                        @VenueCity, @VenueCapacity, @VenueSurface, @VenueImage
                    )";

                    using (var command = new SqlCommand(query, connection))
                    {
                        command.Parameters.AddWithValue("@TeamID", teamResponse.team.id.ToString());
                        command.Parameters.AddWithValue("@TeamName", teamResponse.team.name);
                        command.Parameters.AddWithValue("@TeamCode", (object)teamResponse.team.code ?? DBNull.Value);
                        command.Parameters.AddWithValue("@Country", (object)teamResponse.team.country ?? DBNull.Value);
                        command.Parameters.AddWithValue("@Founded", teamResponse.team.founded?.ToString() ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@National", teamResponse.team.national ? "1" : "0");
                        command.Parameters.AddWithValue("@TeamLogo", (object)teamResponse.team.logo ?? DBNull.Value);
                        command.Parameters.AddWithValue("@VenueID", teamResponse.venue.id?.ToString() ?? (object)DBNull.Value); // Handle nullable VenueID
                        command.Parameters.AddWithValue("@VenueName", (object)teamResponse.venue.name ?? DBNull.Value);
                        command.Parameters.AddWithValue("@VenueAddress", (object)teamResponse.venue.address ?? DBNull.Value);
                        command.Parameters.AddWithValue("@VenueCity", (object)teamResponse.venue.city ?? DBNull.Value);
                        command.Parameters.AddWithValue("@VenueCapacity", teamResponse.venue.capacity?.ToString() ?? (object)DBNull.Value);
                        command.Parameters.AddWithValue("@VenueSurface", (object)teamResponse.venue.surface ?? DBNull.Value);
                        command.Parameters.AddWithValue("@VenueImage", (object)teamResponse.venue.image ?? DBNull.Value);

                        await command.ExecuteNonQueryAsync();
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Exception occurred while inserting teams into the database: {ex.Message}");
            }
        }
    }

    public class ApiTeamsResponse
    {
        public string get { get; set; }
        public Dictionary<string, string> parameters { get; set; }
        public List<string> errors { get; set; }
        public int results { get; set; }
        public Paging paging { get; set; }
        public List<TeamResponse> response { get; set; }
    }

    public class Paging
    {
        public int current { get; set; }
        public int total { get; set; }
    }

    public class TeamResponse
    {
        public Team team { get; set; }
        public Venue venue { get; set; }
    }

    public class Team
    {
        public int id { get; set; }
        public string name { get; set; }
        public string code { get; set; }
        public string country { get; set; }
        public int? founded { get; set; }  // Made nullable
        public bool national { get; set; }
        public string logo { get; set; }
    }

    public class Venue
    {
        public int? id { get; set; }  // Made nullable
        public string name { get; set; }
        public string address { get; set; }
        public string city { get; set; }
        public int? capacity { get; set; }  // Made nullable
        public string surface { get; set; }
        public string image { get; set; }
    }

    public enum ScriptResults
    {
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="packages.config"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="System.IO" version="4.3.0" targetFramework="net472" />
</packages>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_7c7f7446a79b4a29acc68230e64267e0</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_7c7f7446a79b4a29acc68230e64267e0</msb:DisplayName>
    <msb:ProjectId>{D0DF2591-920C-4296-8BD3-2BFAE1A1A7A3}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_7c7f7446a79b4a29acc68230e64267e0.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a69c2cb7e9d34fd39d104c5693c0cd21")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a69c2cb7e9d34fd39d104c5693c0cd21")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a69c2cb7e9d34fd39d104c5693c0cd21.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_7c7f7446a79b4a29acc68230e64267e0.dll">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
NAAACioAAAABEAAAAAAOAGh2ABccAAABNgJ8NQAABAMoNQAACioAAEJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAAMgQAAAjfgAANBEAALAOAAAjU3RyaW5ncwAAAADkHwAArAkAACNV
UwCQKQAAEAAAACNHVUlEAAAAoCkAAFQFAAAjQmxvYgAAAAAAAAACAAABVx+iCwkLAAAA+gEzABYA
AAEAAAA/AAAADwAAADcAAABLAAAAIgAAAAQAAABVAAAAAgAAAGQAAAAIAAAABwAAABsAAAA0AAAA
CAAAAAsAAAABAAAACAAAAAEAAAALAAAACgAAAAAATAkBAAAAAAAGAFEHRgsGAOAHRgsGAGoGMwsP
ALoLAAAGAJcGAgoGADQHAgoGABUHAgoGAMcHAgoGAHEHAgoGAIoHAgoGAMkGAgoGAOQGXwgKAKUH
zQgKAH8FzQgGAPEIGQwGAEoFsAkGAK4GRgsGAHcAGQwGAKUAfAEGAFINsAkGADIGRgsGAPMAfAEG
AGwAsAkGALcJsAkGADAFsAkGAAAFRgsGAAELRgsGAEkKsAkGAKgKRgsGAP0GMwsGAJcARgsGAH4A
RgsOAOsNmAoSADgK1Q1PABsLAAASADAE1Q0GAE0GMwsGANAKZgsGAHoK7QkWABIGNgkWAH4GNgkW
AJsF2AkWAOAKWQ0WADoFWQ0KACQJzQgaAPwL4AQaAJUE4AQGAGUAsAkGAKoEsAkGAFMOAgoeAEQO
SQweAJcNSQwGAIwIsAkOAIIMXgwOAHYMXgwiACoOZgoGAJ4EsAkSACsKUwoSABQK1Q0GAKwAsAkS
APQK1Q0GAHQJsAkSACYEUwoAAAAANwEAAAAAAQABAAEAEADNCQAAOQABAAEAAAAQAG0LyQtRAAEA
BgAAARAABgzJC6kAAwAKAAIAEADYBQAAUQAEAA0AAgAQAEIIAABRAAoAGgACABAAywUAAFEADAAf
AAIAEACQCQAAUQAOACQAAgAQACgIAABRABUAMwACAQAAGg0AAGEAHABCAAMBEAABAAAAUQAfAEIA
AwEQAEUAAABlACEARAADARAA1AAAAGUAJwBGAAMBEAALAQAAZQAsAEgAAwEQALsBAABlADQASgAR
ALwJVQIRAG8FWgIRAFMEXwIBAK8DYwIBAEkDZgIBAGUDbgIBAJYDdQIBANQCeAIBAKMCfAIBAMQD
dQIBAAYDdQIBAB0DhAIBAL0CiAIBADMCdQIBAI0CYwIBAGACYwIBAN0DYwIBABoCjAIBAOwCkwIB
ADMDYwIBADMCjAIBAI0CYwIBAH0DYwIBAPYDYwIBAAwEjAIBAEcCYwIBAHYCYwIGBl8BdQJWgPIM
lgJWgE8FlgIGAHkIYwIGAMcNYwIGACcGdQIGAL8KmgIGAMcNYwIGAHkIYwIBAF4AngIBAOwAqgIG
ACcGdQIGAL8KrgIGAMcNYwIBAMMAuwIBAF4AwAIGACcGdQIGAL8KmgIGAHkIYwIGAEMMfAIBALIA
xwIBAAABzAIBACkB1QIBAF4A2gIGACcGdQIGAL8KmgIGAA8M4QIBAF4AqgJQIAAAAACGANMJBgAB
AMAgAAAAAJEAMAzlAgEADCEAAAAAkQCTCOwCAwBQIQAAAACRALMF+gIEAJshAAAAAIYYJgsGAAYA
oyEAAAAAgxgmCwYABgCrIQAAAACTCMwKBgMGANchAAAAAJMIVwUMAwYA3iEAAAAAkwhjBRIDBgDm
IQAAAACWCHkNGQMHAO0hAAAAAIYYJgsGAAcA9SEAAAAAkRgsCx4DBwABIgAAAACGCGQNRgAHAAki
AAAAAIYIbA0QAAcAEiIAAAAAhgi+DCIDCAAaIgAAAACGCM0MKwMIACMiAAAAAIYI3Aw1AwkAKyIA
AAAAhgjnDD0DCQA0IgAAAACGCCgNNAEKADwiAAAAAIYINA0BAAoARSIAAAAAhghJCEYDCwBNIgAA
AACGCFQISwMLAFYiAAAAAIYI6QVRAwwAXiIAAAAAhgj2BVoDDACjIQAAAACGGCYLBgANAGciAAAA
AIYIAg40AQ0AbyIAAAAAhggODgEADQB4IgAAAACGCBAJNAEOAIAiAAAAAIYIGgkBAA4AoyEAAAAA
hhgmCwYADwCJIgAAAACGCJUJZAMPAJEiAAAAAIYInglpAw8AmiIAAAAAhgguCG8DEACiIgAAAACG
CDgIdAMQAKMhAAAAAIYYJgsGABEAqyIAAAAAhggMAjQBEQCzIgAAAACGCBMCAQARALwiAAAAAIYI
zgRGABIAxCIAAAAAhgjXBBAAEgDNIgAAAACGCGMERgATANUiAAAAAIYIbAQQABMA3iIAAAAAhghc
DkYAFADmIgAAAACGCGgOEAAUAO8iAAAAAIYIzQF6AxUA9yIAAAAAhgjZAYIDFQAAIwAAAACGCPYI
CgEWAAgjAAAAAIYIAwmLAxYAESMAAAAAhgiGCkYAFwAZIwAAAACGCI8KEAAXAKMhAAAAAIYYJgsG
ABgAIiMAAAAAhggMAnoDGAAqIwAAAACGCBMCggMYADMjAAAAAIYIzgRGABkAOyMAAAAAhgjXBBAA
GQBEIwAAAACGCPoMRgAaAEwjAAAAAIYIBg0QABoAVSMAAAAAhgh0DkYAGwBdIwAAAACGCH0OEAAb
AGYjAAAAAIYIhg56AxwAbiMAAAAAhgiTDoIDHAB3IwAAAACGCDsERgAdAH8jAAAAAIYIRwQQAB0A
iCMAAAAAhgh1BEYAHgCQIwAAAACGCH8EEAAeAKMhAAAAAIYYJgsGAB8AoyEAAAAAhhgmCwYAHwCc
IwAAAACDABYAewAfAOAjAAAAAOEBNg4GAB8AFCUAAAAA4QETBRsAHwAkJQAAAADhATYOBgAgALgm
AAAAAOEBEwUbACAAyCYAAAAA4QE2DgYAIQCIKwAAAADhARMFGwAhAJgrAAAAAOEBNg4GACIAWCwA
AAAA4QETBRsAIgAAAAEAeQgAAAIAxw0AAAEAxw0AAAEAeQgAAAIAQwwAAAEAIggAAAEAIggAAAEA
IggAAAEAIggAAAEAIggAAAEAIggAAAEAIggAAAEAIggAAAEAIggAAAEAIggAAAEAIggAAAEAIggA
AAEAIggAAAEAIggAAAEAIggAAAEAIggAAAEAIggAAAEAIggAAAEAIggAAAEAIggAAAEAIggAAAEA
IggAAAEAIggAAAEAIggAAAEAIggAAAEAIwUAAAEAIwUAAAEAIwUAAAEAIwUMAGkADQBpAA4AaQAP
AGkACQAmCwEAEQAmCwYAGQAmCwoAKQAmCxAAMQAmCxAAOQAmCxAAQQAmCxAASQAmCxAAUQAmCxAA
WQAmCxAAYQAmCxAAaQAmCwYAiQAmCxUAqQAmCwYA0QA2DgYA0QATBRsA8QAmCwYAKQEmCwYASQEm
CyEAWQF7CSgAcQASDS8AaQH4CzUAcQGnCTsAeQH+B0IAoQCKCEYADAAmC1IAeQB2ClgAeQB0DQYA
aQGkDQEA6QALBmkA6QAkDm4A6QClCHsAFAALBpEAFAAkDm4AFAClCKAAcQAmCwYAoQAmCwYAgQC8
BLMAgQBPDrsAMQEmC8EAUQEmCwYAHAANC/YAJAD8AQoB6QDlAQ4BJACzDSgBLAAaDjQBmQE/DjgB
eQANCz8B2QD8AQoB2QCzDQYA6QBGCksB6QC9DQYA6QATBRsAqQFADWcBCQEmCwYACQGVDG0BuQHJ
AXMBCQGXAXkBNAANC/YAPAD8AQoBFADlAQ4BPACzDSgBqQGgDpgBwQFHDZ0ByQEDBgYA4QCJBEYA
FABGCksBFAC9DakBFAATBRsAEQEmCxAA0QHICQYALAAYC8UBRAD2DSgBIQEmC9cBIQGvDN8B4QGK
CEYA2QEICOUB8QEcCO0BTAAVCAoBTACFDSgB+QGmAfgBVAANC/YAXAD8AQoBXACzDSgBRAA2DgoB
CAB0AEsCCAB4AFACKQCbAAYELgALAN4DLgATAOcDLgAbAAYELgAjAA8ELgArADgELgAzADgELgA7
ADgELgBDAA8ELgBLAD4ELgBTADgELgBbAFUEQABrAJ8EQwBjAFACSQCbAAYEYABrAMgEYQBzAFAC
YwCTAFACgABrAPAEgQBzAFACoQBzAFACwQBzAFAC4QBzAFACAQFzAFACIQFzAFACQQFzAFACYQFz
AFACYwFzAFACgQFzAFACgwFzAFACoAFzAFACoQFzAFACowFzAFACwAFzAFACwQFzAFACwwFzAFAC
4AFzAFAC4QFzAFACAAJzAFACAQJzAFACIAJzAFACIQJzAFACQAJzAFACQQJzAFACYAJzAFACYQJz
AFACgAJzAFACgQJzAFACoAJzAFACoQJzAFACwAJzAFACwQJzAFAC4AJzAFAC4QJzAFACAANzAFAC
AQNzAFACIQNzAFACQANzAFACQQNzAFACYANzAFACYQNzAFACgANzAFACoANzAFAC4ANzAFACAARz
AFACIARzAFACQARzAFACgARzAFACoARzAFACwARzAFAC4ARzAFACAAVzAFACIAVzAFACQAVzAFAC
YAVzAFACgAVzAFACoAVzAFACwAVzAFAC4AVzAFACAAZzAFACIAZzAFACYAZzAFACgAZzAFACoAZz
AFACwAZzAFAC4AZzAFACAAdzAFACIAdzAFACQAdzAFACYAdzAFACgAdzAFACoAdzAFACwAdzAFAC
4AdzAFACAAhzAFACYAhrAB4FoAiLAFAC4AiLAFACIAmLAFACYAmLAFACZACAAKkAyQDTAFEBrwEW
AgMAAQAEAAMABQAEAAYACgAHAAwACAAOAAkAFQAAANAKkAMAAHcFlgMAAI8NnAMAAHANoQMAANEM
pQMAAOsMrgMAADgNtgMAAFgIugMAAPoFvwMAABIOtgMAAB4JtgMAAKIJyAMAADwIzQMAABcCtgMA
ANsEoQMAAHAEoQMAAGwOoQMAAN0B0gMAAAcJ2gMAAJMKoQMAABcC0gMAANsEoQMAAAoNoQMAAJsO
oQMAAJcO0gMAAEsEoQMAAIMEoQMCAAcAAwACAAgABQABAAkABQACAAoABwACAA0ACQABAA4ACQAC
AA8ACwABABAACwACABEADQABABIADQACABMADwABABQADwACABUAEQABABYAEQACABcAEwABABgA
EwACABoAFQABABsAFQACABwAFwABAB0AFwACAB8AGQABACAAGQACACEAGwABACIAGwACACQAHQAB
ACUAHQACACYAHwABACcAHwACACgAIQABACkAIQACACoAIwABACsAIwACACwAJQABAC0AJQACAC4A
JwABAC8AJwACADAAKQABADEAKQACADMAKwABADQAKwACADUALQABADYALQACADcALwABADgALwAC
ADkAMQABADoAMQACADsAMwABADwAMwACAD0ANQABAD4ANQACAD8ANwABAEAANwAMAIgAHwAMAIoA
IQANAIwAHwANAI4AIQAOAJAAHwAOAJIAIQAPAJQAHwAPAJYAIQBKAIUA6wD/AC0BggGIAc8B8gEA
AgYCBIAAAAEAAADlIlZdAAAAAAAAIQAAAAQAAAAAAAAAAAAAACcCcwEAAAAAEAAAAAAAAAAAAAAA
MAKuCAAAAAAEAAAAAAAAAAAAAAA5ApgKAAAAAAQAAAAAAAAAAAAAACcCZwEAAAAABAAAAAAAAAAA
AAAAJwKwCQAAAAAQAAAAAAAAAAAAAAAwAkABAAAAAAQAAAAAAAAAAAAAACcCSQwAAAAADQAAAAAA
AAAAAAAAQgJmCgAAAAAAAAAAAQAAAHcLAAAFAAIABgACAAcAAgAIAAIACQACAAoAAgALAAIADAAC
AA0AAgAOAAIADwALAD8AdgBFAJsAPwCuAD8AzgBZABkBWQBEAXsAjgGBAKQBWQAMAlkAIAIAAAA8
PmNfX0Rpc3BsYXlDbGFzczBfMAA8TWFpbj5iX18wAFNUXzdjN2Y3NDQ2YTc5YjRhMjlhY2M2ODIz
MGU2NDI2N2UwADxGZXRjaEFuZFN0b3JlVGVhbXM+ZF9fMQA8PnVfXzEARnVuY2AxAE51bGxhYmxl
YDEAVGFza2AxAEFzeW5jVGFza01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAExpc3RgMQBJ
bnQzMgA8Y29ubmVjdGlvbj41X18yADxodHRwQ2xpZW50PjVfXzIAPEZldGNoVGVhbXNGcm9tQXBp
PmRfXzIAPD51X18yAERpY3Rpb25hcnlgMgA8PjdfX3dyYXAyADxJbnNlcnRUZWFtc0ludG9EYXRh
YmFzZT5kX18zADxjb21tYW5kPjVfXzQAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5h
Z2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdl
bmVyaWMAR2V0U3RyaW5nQXN5bmMARXhlY3V0ZU5vblF1ZXJ5QXN5bmMAPDxNYWluPmJfXzA+ZABB
ZGQAZ2V0X2ZvdW5kZWQAc2V0X2ZvdW5kZWQAQXdhaXRVbnNhZmVPbkNvbXBsZXRlZABnZXRfSXND
b21wbGV0ZWQAZ2V0X2lkAHNldF9pZAA8Zm91bmRlZD5rX19CYWNraW5nRmllbGQAPGlkPmtfX0Jh
Y2tpbmdGaWVsZAA8c3VyZmFjZT5rX19CYWNraW5nRmllbGQAPGNvZGU+a19fQmFja2luZ0ZpZWxk
ADxpbWFnZT5rX19CYWNraW5nRmllbGQAPG5hbWU+a19fQmFja2luZ0ZpZWxkADxyZXNwb25zZT5r
X19CYWNraW5nRmllbGQAPHZlbnVlPmtfX0JhY2tpbmdGaWVsZAA8cGFnaW5nPmtfX0JhY2tpbmdG
aWVsZAA8bmF0aW9uYWw+a19fQmFja2luZ0ZpZWxkADx0b3RhbD5rX19CYWNraW5nRmllbGQAPHRl
YW0+a19fQmFja2luZ0ZpZWxkADxsb2dvPmtfX0JhY2tpbmdGaWVsZAA8cGFyYW1ldGVycz5rX19C
YWNraW5nRmllbGQAPGVycm9ycz5rX19CYWNraW5nRmllbGQAPGFkZHJlc3M+a19fQmFja2luZ0Zp
ZWxkADxyZXN1bHRzPmtfX0JhY2tpbmdGaWVsZAA8Z2V0PmtfX0JhY2tpbmdGaWVsZAA8Y3VycmVu
dD5rX19CYWNraW5nRmllbGQAPGNvdW50cnk+a19fQmFja2luZ0ZpZWxkADxjaXR5PmtfX0JhY2tp
bmdGaWVsZAA8Y2FwYWNpdHk+a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABTcWxDb21tYW5kAGdl
dF9zdXJmYWNlAHNldF9zdXJmYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfY29kZQBzZXRfY29kZQBn
ZXRfaW1hZ2UAc2V0X2ltYWdlAGdldF9NZXNzYWdlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9uYW1lAHNldF9uYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUASUFzeW5jU3RhdGVNYWNoaW5lAFNldFN0YXRlTWFjaGlu
ZQBzdGF0ZU1hY2hpbmUAVmFsdWVUeXBlAFNlY3VyaXR5UHJvdG9jb2xUeXBlAEZhaWx1cmUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBJbnNlcnRUZWFtc0ludG9EYXRhYmFzZQBU
ZWFtUmVzcG9uc2UAQXBpVGVhbXNSZXNwb25zZQBnZXRfcmVzcG9uc2UAc2V0X3Jlc3BvbnNlAERp
c3Bvc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlADw+MV9fc3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
eW5jU3RhdGVNYWNoaW5lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1
ZQBBZGRXaXRoVmFsdWUAZ2V0X0hhc1ZhbHVlAHZhbHVlAFZlbnVlAGdldF92ZW51ZQBzZXRfdmVu
dWUAUGFnaW5nAGdldF9wYWdpbmcAc2V0X3BhZ2luZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AGNvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcARmV0Y2hUZWFtc0Zyb21BcGkAZ2V0X1Rhc2sATWlj
cm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tz
LlNjcmlwdFRhc2sAZ2V0X25hdGlvbmFsAHNldF9uYXRpb25hbABnZXRfdG90YWwAc2V0X3RvdGFs
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF83YzdmNzQ0NmE3OWI0
YTI5YWNjNjgyMzBlNjQyNjdlMC5kbGwAREJOdWxsAHNldF9TZWN1cml0eVByb3RvY29sAFRlYW0A
Z2V0X3RlYW0Ac2V0X3RlYW0AZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AT3BlbgBT
Y3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5l
Y3Rpb24AU2V0RXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBOZXd0b25zb2Z0Lkpzb24AUnVu
AEN1bHR1cmVJbmZvAGdldF9sb2dvAHNldF9sb2dvAFN5c3RlbS5OZXQuSHR0cABBc3luY1Rhc2tN
ZXRob2RCdWlsZGVyADw+dF9fYnVpbGRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFNlcnZpY2VQb2lu
dE1hbmFnZXIAU3FsUGFyYW1ldGVyAFRhc2tBd2FpdGVyAEdldEF3YWl0ZXIAR2V0RW51bWVyYXRv
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9hNjljMmNiN2U5ZDM0ZmQzOWQxMDRjNTY5M2Mw
Y2QyMS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYTY5
YzJjYjdlOWQzNGZkMzlkMTA0YzU2OTNjMGNkMjEuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNl
dHRpbmdzADw+NF9fdGhpcwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzAEZldGNoQW5kU3RvcmVUZWFt
cwB0ZWFtcwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTeXN0ZW0uTmV0Lkh0dHAuSGVhZGVycwBIdHRw
SGVhZGVycwBIdHRwUmVxdWVzdEhlYWRlcnMAZ2V0X0RlZmF1bHRSZXF1ZXN0SGVhZGVycwBnZXRf
UGFyYW1ldGVycwBnZXRfcGFyYW1ldGVycwBzZXRfcGFyYW1ldGVycwBnZXRfZXJyb3JzAHNldF9l
cnJvcnMAU3VjY2VzcwBnZXRfYWRkcmVzcwBzZXRfYWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAZ2V0X3Jlc3VsdHMAc2V0X3Jlc3VsdHMAQ29uY2F0AERlc2VyaWFsaXplT2JqZWN0AFN5c3Rl
bS5OZXQAZ2V0X2dldABzZXRfZ2V0AFdhaXQAZ2V0X0RlZmF1bHQAR2V0VmFsdWVPckRlZmF1bHQA
RGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AEdldFJlc3VsdABTZXRSZXN1bHQAY291bnRyeVJl
c3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQASHR0cENsaWVudABnZXRfQ3VycmVudABnZXRfY3Vy
cmVudABzZXRfY3VycmVudABnZXRfQ291bnQAU3RhcnQASnNvbkNvbnZlcnQATW92ZU5leHQAU2hv
dwBNZXNzYWdlQm94AGdldF9Bc3NlbWJseQBnZXRfY291bnRyeQBzZXRfY291bnRyeQBnZXRfY2l0
eQBzZXRfY2l0eQBnZXRfY2FwYWNpdHkAc2V0X2NhcGFjaXR5AElzTnVsbE9yRW1wdHkAAAAAG0MA
bwB1AG4AdAByAHkAUgBlAHMAdQBsAHQAAICjRABhAHQAYQAgAFMAbwB1AHIAYwBlAD0ARABFAFMA
SwBUAE8AUAAtAFEAUgA2AFAAMwBUADUAOwBJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwA9
AEYAbwBvAHQAYgBhAGwAbABBAHAAaQA7AEkAbgB0AGUAZwByAGEAdABlAGQAIABTAGUAYwB1AHIA
aQB0AHkAPQBTAFMAUABJADsAAXFTAFQAXwBhADYAOQBjADIAYwBiADcAZQA5AGQAMwA0AGYAZAAz
ADkAZAAxADAANABjADUANgA5ADMAYwAwAGMAZAAyADEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAG9GAGEAaQBsAGUAZAAgAHQAbwAgAGYAZQB0AGMAaAAgAHQAZQBh
AG0AcwAuACAAVABoAGUAIAB0AGUAYQBtAHMAIABsAGkAcwB0ACAAaQBzACAAbgB1AGwAbAAgAG8A
cgAgAGUAbQBwAHQAeQAuAABhaAB0AHQAcABzADoALwAvAHYAMwAuAGYAbwBvAHQAYgBhAGwAbAAu
AGEAcABpAC0AcwBwAG8AcgB0AHMALgBpAG8ALwB0AGUAYQBtAHMAPwBjAG8AdQBuAHQAcgB5AD0A
AUEzAGIAMgAzAGUAYQAyADUAMAAxADgAMQA0ADAAMgBhADEAYgBlAGIAMQBkADcAOABiAGQAMABj
AGUAMAA2ADQAAB1YAC0AUgBhAHAAaQBkAEEAUABJAC0ASwBlAHkAAS1BAFAASQAgAHIAZQBzAHAA
bwBuAHMAZQAgAGkAcwAgAGUAbQBwAHQAeQAuAABTRQB4AGMAZQBwAHQAaQBvAG4AIABvAGMAYwB1
AHIAcgBlAGQAIAB3AGgAaQBsAGUAIABmAGUAdABjAGgAaQBuAGcAIAB0AGUAYQBtAHMAOgAgAACF
DQ0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAASQBOAFMARQBSAFQA
IABJAE4AVABPACAAcwB0AGcALgBUAGUAYQBtAHMAIAAoAA0ACgAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABUAGUAYQBtAEkARAAsACAAVABlAGEAbQBOAGEA
bQBlACwAIABUAGUAYQBtAEMAbwBkAGUALAAgAEMAbwB1AG4AdAByAHkALAAgAA0ACgAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAG8AdQBuAGQAZQBkACwA
IABbAE4AYQB0AGkAbwBuAGEAbABdACwAIABUAGUAYQBtAEwAbwBnAG8ALAAgAA0ACgAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABWAGUAbgB1AGUASQBEACwA
IABWAGUAbgB1AGUATgBhAG0AZQAsACAAVgBlAG4AdQBlAEEAZABkAHIAZQBzAHMALAAgAA0ACgAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABWAGUAbgB1AGUA
QwBpAHQAeQAsACAAVgBlAG4AdQBlAEMAYQBwAGEAYwBpAHQAeQAsACAAVgBlAG4AdQBlAFMAdQBy
AGYAYQBjAGUALAAgAFYAZQBuAHUAZQBJAG0AYQBnAGUADQAKACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAApACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIABWAEEATABVAEUAUwAgACgADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgAEAAVABlAGEAbQBJAEQALAAgAEAAVABlAGEAbQBOAGEAbQBl
ACwAIABAAFQAZQBhAG0AQwBvAGQAZQAsACAAQABDAG8AdQBuAHQAcgB5ACwAIAANAAoAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABGAG8AdQBuAGQAZQBk
ACwAIABAAE4AYQB0AGkAbwBuAGEAbAAsACAAQABUAGUAYQBtAEwAbwBnAG8ALAAgAA0ACgAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAFYAZQBuAHUAZQBJ
AEQALAAgAEAAVgBlAG4AdQBlAE4AYQBtAGUALAAgAEAAVgBlAG4AdQBlAEEAZABkAHIAZQBzAHMA
LAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABA
AFYAZQBuAHUAZQBDAGkAdAB5ACwAIABAAFYAZQBuAHUAZQBDAGEAcABhAGMAaQB0AHkALAAgAEAA
VgBlAG4AdQBlAFMAdQByAGYAYQBjAGUALAAgAEAAVgBlAG4AdQBlAEkAbQBhAGcAZQANAAoAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACkAAA9AAFQAZQBhAG0ASQBEAAAT
QABUAGUAYQBtAE4AYQBtAGUAABNAAFQAZQBhAG0AQwBvAGQAZQAAEUAAQwBvAHUAbgB0AHIAeQAA
EUAARgBvAHUAbgBkAGUAZAAAE0AATgBhAHQAaQBvAG4AYQBsAAADMAAAAzEAABNAAFQAZQBhAG0A
TABvAGcAbwAAEUAAVgBlAG4AdQBlAEkARAAAFUAAVgBlAG4AdQBlAE4AYQBtAGUAABtAAFYAZQBu
AHUAZQBBAGQAZAByAGUAcwBzAAAVQABWAGUAbgB1AGUAQwBpAHQAeQAAHUAAVgBlAG4AdQBlAEMA
YQBwAGEAYwBpAHQAeQAAG0AAVgBlAG4AdQBlAFMAdQByAGYAYQBjAGUAABdAAFYAZQBuAHUAZQBJ
AG0AYQBnAGUAAHlFAHgAYwBlAHAAdABpAG8AbgAgAG8AYwBjAHUAcgByAGUAZAAgAHcAaABpAGwA
ZQAgAGkAbgBzAGUAcgB0AGkAbgBnACAAdABlAGEAbQBzACAAaQBuAHQAbwAgAHQAaABlACAAZABh
AHQAYQBiAGEAcwBlADoAIAAAAAAA8PTLGGvFukyuyNpvZne3fgAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQESQQUgAQESaQYgAQERgKEGAAEBEYCxBSAAEoC1BSAAEoC5BiABEoC9HAMgABwDIAAOBxUS
gMEBEj0FIAIBHBgLAAESPRUSgMEBEj0EBwERMAQAABF1BzABAQEQHgAECgERMAQgABI9BAcBETQL
FRGAgQEVEk0BEhwJAAAVEYCBARMABAoBETQIIAAVEkkBEwAEBwEROAQKARE4BwABEkERgMUFIAAS
gMkHIAIBDhKAyQQHARE8BAoBETwXBwUIFRJNARIcFRF9ARUSTQESHBFtEnEKFRJJARUSTQESHAgg
ABURfQETAAoVEX0BFRJNARIcAyAAAgowAgIBEB4AEB4BDgoCFRF9ARUSTQESHBEwBCAAEwAGFRJN
ARIcAyAACAYAARGA0Q4EIAARbQYKAhFtETAFIAEBEnEVBwgIFRJNARIcDg4OFRF9AQ4ScRJxBQAC
Dg4OBSAAEoDZBSACAQ4OCCABFRJJAQ4OBRUSSQEOBRURfQEOCQoCFRF9AQ4RNAQAAQIOBhABAR4A
DgQKARIUBSABARMAFQcICBIcDggVEV0BCBURfQEIEnEScQkgABURgI0BEwAHFRGAjQESHAcgAgEO
EoCJBSAAEoDtByACEoD1DhwEBhKA+QUVEV0BCAcgABUSSQEIBRUSSQEIBRURfQEICQoCFRF9AQgR
OAkHBAgSLBFtEnEGCgIRbRE8CLd6XFYZNOCJCImEXc2AgMyRCLA/X38R1Qo6CDCtT+aypq7tBAAA
AAAEAQAAAAQGEoCZBAYSgJ0DBhIQAgYOBwYVElkCDg4GBhUSTQEOAgYIAwYSGAcGFRJNARIcAwYS
IAMGEiQGBhURXQEIAgYCAwYRKAMGEXULBhURfQEVEk0BEhwDBhFtDAYVEYCBARUSTQESHAQGEoCF
BgYVEX0BDgQGEoCJCAYVEYCNARIcBAYSgJEGBhURfQEIAwYSLAYAAhI9Dg4NAAEVEkkBFRJNARIc
DgsAAhI9DhUSTQESHAUAABKAmQUAABKAnQYAAQESgJ0EAAASEAMAAAEIIAAVElkCDg4JIAEBFRJZ
Ag4OByAAFRJNAQ4IIAEBFRJNAQ4EIAASGAUgAQESGAggABUSTQESHAkgAQEVEk0BEhwEIAASIAUg
AQESIAQgABIkBSABARIkByAAFRFdAQgIIAEBFRFdAQgEIAEBAgUIABKAmQUIABKAnQQIABIQAygA
DggoABUSWQIODgcoABUSTQEOAygACAQoABIYCCgAFRJNARIcBCgAEiAEKAASJAcoABURXQEIAygA
AggBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1Rf
YTY5YzJjYjdlOWQzNGZkMzlkMTA0YzU2OTNjMGNkMjEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRIuTkVUIEZyYW1ld29yayA0LjcoAQAjU2NyaXB0TWFpbis8RmV0Y2hBbmRTdG9yZVRlYW1z
PmRfXzEAACcBACJTY3JpcHRNYWluKzxGZXRjaFRlYW1zRnJvbUFwaT5kX18yAAAtAQAoU2NyaXB0
TWFpbis8SW5zZXJ0VGVhbXNJbnRvRGF0YWJhc2U+ZF9fMwAAMgEALVNjcmlwdE1haW4rPD5jX19E
aXNwbGF5Q2xhc3MwXzArPDxNYWluPmJfXzA+ZAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADxcAAAAAAAAAAAA
AFZcAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIXAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAA
AAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAAAAAAAAAAAAAa
BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAVl3lIgAA
AQBWXeUiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBu
AGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMAAAEAUwB0AHIA
aQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBv
AG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAA
JAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBhADYAOQBjADIAYwBi
ADcAZQA5AGQAMwA0AGYAZAAzADkAZAAxADAANABjADUANgA5ADMAYwAwAGMAZAAyADEAAAA+AA8A
AQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA5ADMAMwAuADIAMwA4ADkANAAA
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA3AGMANwBmADcANAA0ADYA
YQA3ADkAYgA0AGEAMgA5AGEAYwBjADYAOAAyADMAMABlADYANAAyADYANwBlADAALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADcAYwA3AGYA
NwA0ADQANgBhADcAOQBiADQAYQAyADkAYQBjAGMANgA4ADIAMwAwAGUANgA0ADIANgA3AGUAMAAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBhADYAOQBjADIA
YwBiADcAZQA5AGQAMwA0AGYAZAAzADkAZAAxADAANABjADUANgA5ADMAYwAwAGMAZAAyADEAAABC
AA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOQAzADMALgAyADMA
OAA5ADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADgAOQAzADMALgAyADMAOAA5ADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAaDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{71E5F2D5-2020-45FC-8649-26A87C3C4295}"
              DTS:ObjectName="{71E5F2D5-2020-45FC-8649-26A87C3C4295}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::CountryResult" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load Teams Data\Get Countries"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{5CCB33A5-9302-43CA-A903-4B5D7447AACD}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Countries"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2279D73D-7732-45DB-A50E-C6CE62462ACF}"
              SQLTask:SqlStatementSource="select Country from stg.Country"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::CountryResult" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::Country"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load Teams Data.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{4B7E8DCA-2532-4C5D-B91A-34BAD407D376}"
          DTS:From="Package\Load Teams Data\Get Countries"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Load Teams Data\Get All Teams" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{4090F44D-F8CF-4829-9C9C-DD2F5E9F46EB}"
      DTS:From="Package\Load Country -- Seasons -- Leagues"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load Teams Data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{A968BD6A-E7B1-4A2C-8D0C-E0314C229F9D}"
      DTS:From="Package\Load Teams Data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get Players Data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{17161405-554A-434F-88A1-8A13615382C2}"
      DTS:From="Package\Get Players Data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Get All h2h" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="143.2,41.6"
          Id="Package\Get All h2h\Get Players Data\Get H2H Data"
          TopLeft="60.7333214786333,32.2666697523329" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="250.4,128.8"
          Size="250.4,172"
          Id="Package\Get All h2h\Get Players Data"
          TopLeft="88.7999904632571,106.466670144929" />
        <NodeLayout
          Size="110.4,41.6"
          Id="Package\Get All h2h\Teams"
          TopLeft="151.633322571384,27.9333363845612" />
        <EdgeLayout
          Id="Package\Get All h2h.PrecedenceConstraints[Constraint]"
          TopLeft="210.416656517321,69.5333363845612">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.9333337603678"
              Start="0,0"
              End="0,29.4333337603678">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.4333337603678" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.2"
          IsExpanded="True"
          PanelSize="445.6,331.2"
          Size="445.6,374.4"
          Id="Package\Get All h2h"
          TopLeft="142.499994337559,1203.40000250022" />
        <NodeLayout
          Size="157.6,41.6"
          Id="Package\Get Players Data\Get Players Data\Get Players Data"
          TopLeft="60.7333214786333,32.2666697523329" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="250.4,128.8"
          Size="250.4,172"
          Id="Package\Get Players Data\Get Players Data"
          TopLeft="92.9666569643551,103.866670124266" />
        <NodeLayout
          Size="119.2,41.6"
          Id="Package\Get Players Data\Seasons"
          TopLeft="151.633322571384,27.9333363845612" />
        <EdgeLayout
          Id="Package\Get Players Data.PrecedenceConstraints[Constraint]"
          TopLeft="214.69998976787,69.5333363845612">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.3333337397048"
              Start="0,0"
              End="0,26.8333337397048">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.8333337397048" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.2"
          IsExpanded="True"
          PanelSize="445.6,310.4"
          Size="445.6,353.6"
          Id="Package\Get Players Data"
          TopLeft="137.499994536241,792.999987374942" />
        <NodeLayout
          Size="168.8,41.6"
          Id="Package\Get Standings Data\Get Players Data\Get Standings Data"
          TopLeft="55.0666540834649,39.7333370251108" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="250.4,136"
          Size="250.4,179.2"
          Id="Package\Get Standings Data\Get Players Data"
          TopLeft="88.7999904632571,106.466670144929" />
        <NodeLayout
          Size="110.4,41.6"
          Id="Package\Get Standings Data\Teams"
          TopLeft="152.466655871604,30.533336405224" />
        <EdgeLayout
          Id="Package\Get Standings Data.PrecedenceConstraints[Constraint]"
          TopLeft="210.83332316743,72.133336405224">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.333333739705"
              Start="0,0"
              End="0,26.833333739705">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.833333739705" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.2"
          IsExpanded="True"
          PanelSize="434.4,340.8"
          Size="434.4,384"
          Id="Package\Get Standings Data"
          TopLeft="159.999993642172,1673.00000059922" />
        <NodeLayout
          Size="167.2,41.6"
          Id="Package\Load Country -- Seasons -- Leagues\Get Countries Data"
          TopLeft="128.566656467649,37.7666703308954" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Load Country -- Seasons -- Leagues\Get Leagues Data"
          TopLeft="128.566656467649,182.400004049937" />
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\Load Country -- Seasons -- Leagues\Get Seasons Data"
          TopLeft="126.399989668528,116.333337665664" />
        <EdgeLayout
          Id="Package\Load Country -- Seasons -- Leagues.PrecedenceConstraints[Constraint]"
          TopLeft="210.083323068088,79.3666703308954">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.9666673347686"
              Start="0,0"
              End="0,29.4666673347686">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.4666673347686" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Country -- Seasons -- Leagues.PrecedenceConstraints[Constraint 1]"
          TopLeft="208.883323068088,157.933337665664">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.466666384273"
              Start="0,0"
              End="0,16.966666384273">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.966666384273" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="406.4,279.2"
          Size="406.4,322.4"
          Id="Package\Load Country -- Seasons -- Leagues"
          TopLeft="154.166660540634,19.7333324792652" />
        <NodeLayout
          Size="154.4,41.6"
          Id="Package\Load Teams Data\Get All Teams\Get Teams Data"
          TopLeft="65.899988575777,39.866672686471" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="271.2,136.8"
          Size="271.2,180"
          Id="Package\Load Teams Data\Get All Teams"
          TopLeft="77.9999971191091,94.9666669008462" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\Load Teams Data\Get Countries"
          TopLeft="137.166661434703,21.966666797532" />
        <EdgeLayout
          Id="Package\Load Teams Data.PrecedenceConstraints[Constraint 1]"
          TopLeft="210.983329276906,63.566666797532">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.4000001033142"
              Start="0,0"
              End="0,23.9000001033142">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.9000001033142" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.2"
          IsExpanded="True"
          PanelSize="416,329.6"
          Size="416,372.8"
          Id="Package\Load Teams Data"
          TopLeft="149.999994039536,370.066667376095" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="357.683327290085,342.133332479265">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.9333348968298"
              Start="0,0"
              End="0,20.4333348968298">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4333348968298" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="359.149994287888,742.866667376095">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.1333199988471"
              Start="0,0"
              End="0,42.6333199988471">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.6333199988471" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="362.7999944369,1146.59998737494">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56.8000151252736"
              Start="0,0"
              End="0,49.3000151252736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.3000151252736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>